D G "__PCH__" 0 0 ""4.100""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""08-Á.¤.-10""
D G "__TIME__" 0 0 ""16:41:08"" "#include "C:\Users\dorakengi\Desktop\HW\wenserver.h""
D G "STACK_USE_CCS_PICNET" 0 63 "0" "PICNET rev 0-2 board sold by CCS.  Has a 56K modem and a 10BaseT Network IC and 18F6620"
D G "STACK_USE_CCS_PICNET3" 0 64 "0" "PICNET rv 3 and up board sold by CCS.  Has a 56K modem and a 10BaseT Network IC and 18F8622"
D G "STACK_USE_CCS_PICENS" 0 65 "1" "CCS PICENS (Embedded Ethernet) development kit.  18F4620 + ENC28J60"
D G "STACK_USE_CCS_PICEEC" 0 66 "0" "CCS PICEEC (Embedded Ethernet) development kit.  18F67J60"
D G "STACK_USE_CCS_EWL5V" 0 67 "0" "CCS 5V EZ Web Lynx Device"
D G "STACK_USE_CCS_EWL3V" 0 68 "0" "CCS 3.3V EZ Web Lynx Device"
D G "STACK_USE_MAC" 0 71 "1" "use the nic card"
D G "STACK_USE_PPP" 0 72 "0" "use PPP on modem"
D G "STACK_USE_SLIP" 0 73 "0" "use slip (NOT TESTED)"
D G "STACK_USE_CCS_EWL" 0 80 "0"
d G "PIN_A0" 1 22 "31744"
d G "PIN_A1" 1 23 "31745"
d G "PIN_A2" 1 24 "31746"
d G "PIN_A3" 1 25 "31747"
d G "PIN_A4" 1 26 "31748"
d G "PIN_A5" 1 27 "31749"
d G "PIN_A6" 1 28 "31750"
d G "PIN_B0" 1 30 "31752"
d G "PIN_B1" 1 31 "31753"
d G "PIN_B2" 1 32 "31754"
d G "PIN_B3" 1 33 "31755"
d G "PIN_B4" 1 34 "31756"
d G "PIN_B5" 1 35 "31757"
d G "PIN_B6" 1 36 "31758"
d G "PIN_B7" 1 37 "31759"
d G "PIN_C0" 1 39 "31760"
d G "PIN_C1" 1 40 "31761"
d G "PIN_C2" 1 41 "31762"
d G "PIN_C3" 1 42 "31763"
d G "PIN_C4" 1 43 "31764"
d G "PIN_C5" 1 44 "31765"
d G "PIN_C6" 1 45 "31766"
d G "PIN_C7" 1 46 "31767"
d G "PIN_D0" 1 48 "31768"
d G "PIN_D1" 1 49 "31769"
d G "PIN_D2" 1 50 "31770"
d G "PIN_D3" 1 51 "31771"
d G "PIN_D4" 1 52 "31772"
d G "PIN_D5" 1 53 "31773"
d G "PIN_D6" 1 54 "31774"
d G "PIN_D7" 1 55 "31775"
d G "PIN_E0" 1 57 "31776"
d G "PIN_E1" 1 58 "31777"
d G "PIN_E2" 1 59 "31778"
d G "FALSE" 1 62 "0"
d G "TRUE" 1 63 "1"
d G "BYTE" 1 65 "int8"
d G "BOOLEAN" 1 66 "int1"
d G "getc" 1 68 "getch"
d G "fgetc" 1 69 "getch"
d G "getchar" 1 70 "getch"
d G "putc" 1 71 "putchar"
d G "fputc" 1 72 "putchar"
d G "fgets" 1 73 "gets"
d G "fputs" 1 74 "puts"
d G "WDT_TIMEOUT" 1 80 "7"
d G "MCLR_FROM_SLEEP" 1 81 "11"
d G "MCLR_FROM_RUN" 1 82 "15"
d G "NORMAL_POWER_UP" 1 83 "12"
d G "BROWNOUT_RESTART" 1 84 "14"
d G "WDT_FROM_SLEEP" 1 85 "3"
d G "RESET_INSTRUCTION" 1 86 "0"
d G "T0_INTERNAL" 1 92 "0"
d G "T0_EXT_L_TO_H" 1 93 "32"
d G "T0_EXT_H_TO_L" 1 94 "48"
d G "T0_DIV_1" 1 96 "8"
d G "T0_DIV_2" 1 97 "0"
d G "T0_DIV_4" 1 98 "1"
d G "T0_DIV_8" 1 99 "2"
d G "T0_DIV_16" 1 100 "3"
d G "T0_DIV_32" 1 101 "4"
d G "T0_DIV_64" 1 102 "5"
d G "T0_DIV_128" 1 103 "6"
d G "T0_DIV_256" 1 104 "7"
d G "T0_OFF" 1 106 "0x80"
d G "T0_8_BIT" 1 108 "0x40"
d G "RTCC_INTERNAL" 1 110 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 111 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 112 "48"
d G "RTCC_DIV_1" 1 113 "8"
d G "RTCC_DIV_2" 1 114 "0"
d G "RTCC_DIV_4" 1 115 "1"
d G "RTCC_DIV_8" 1 116 "2"
d G "RTCC_DIV_16" 1 117 "3"
d G "RTCC_DIV_32" 1 118 "4"
d G "RTCC_DIV_64" 1 119 "5"
d G "RTCC_DIV_128" 1 120 "6"
d G "RTCC_DIV_256" 1 121 "7"
d G "RTCC_OFF" 1 122 "0x80"
d G "RTCC_8_BIT" 1 123 "0x40"
d G "WDT_ON" 1 134 "0x100"
d G "WDT_OFF" 1 135 "0"
d G "T1_DISABLED" 1 142 "0"
d G "T1_INTERNAL" 1 143 "0x85"
d G "T1_EXTERNAL" 1 144 "0x87"
d G "T1_EXTERNAL_SYNC" 1 145 "0x83"
d G "T1_CLK_OUT" 1 147 "8"
d G "T1_DIV_BY_1" 1 149 "0"
d G "T1_DIV_BY_2" 1 150 "0x10"
d G "T1_DIV_BY_4" 1 151 "0x20"
d G "T1_DIV_BY_8" 1 152 "0x30"
d G "T2_DISABLED" 1 157 "0"
d G "T2_DIV_BY_1" 1 158 "4"
d G "T2_DIV_BY_4" 1 159 "5"
d G "T2_DIV_BY_16" 1 160 "6"
d G "T3_DISABLED" 1 166 "0"
d G "T3_INTERNAL" 1 167 "0x85"
d G "T3_EXTERNAL" 1 168 "0x87"
d G "T3_EXTERNAL_SYNC" 1 169 "0x83"
d G "T3_DIV_BY_1" 1 171 "0"
d G "T3_DIV_BY_2" 1 172 "0x10"
d G "T3_DIV_BY_4" 1 173 "0x20"
d G "T3_DIV_BY_8" 1 174 "0x30"
d G "T3_CCP1_TO_2" 1 177 "0x48"
d G "T3_CCP2" 1 178 "0x8"
d G "CCP_OFF" 1 184 "0"
d G "CCP_CAPTURE_FE" 1 185 "4"
d G "CCP_CAPTURE_RE" 1 186 "5"
d G "CCP_CAPTURE_DIV_4" 1 187 "6"
d G "CCP_CAPTURE_DIV_16" 1 188 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 189 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 190 "9"
d G "CCP_COMPARE_INT" 1 191 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 192 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 193 "0xB"
d G "CCP_PWM" 1 194 "0xC"
d G "CCP_PWM_PLUS_1" 1 195 "0x1c"
d G "CCP_PWM_PLUS_2" 1 196 "0x2c"
d G "CCP_PWM_PLUS_3" 1 197 "0x3c"
d G "CCP_PWM_H_H" 1 203 "0x0c"
d G "CCP_PWM_H_L" 1 204 "0x0d"
d G "CCP_PWM_L_H" 1 205 "0x0e"
d G "CCP_PWM_L_L" 1 206 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 1 208 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 1 209 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 1 210 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 1 212 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 1 213 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 1 214 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 1 215 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 216 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 217 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 1 218 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 1 220 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 1 221 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 1 222 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 1 224 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 1 225 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 1 226 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 1 228 "0x80000000"
d G "PSP_ENABLED" 1 238 "0x10"
d G "PSP_DISABLED" 1 239 "0"
d G "SPI_MASTER" 1 246 "0x20"
d G "SPI_SLAVE" 1 247 "0x24"
d G "SPI_L_TO_H" 1 248 "0"
d G "SPI_H_TO_L" 1 249 "0x10"
d G "SPI_CLK_DIV_4" 1 250 "0"
d G "SPI_CLK_DIV_16" 1 251 "1"
d G "SPI_CLK_DIV_64" 1 252 "2"
d G "SPI_CLK_T2" 1 253 "3"
d G "SPI_SS_DISABLED" 1 254 "1"
d G "SPI_SAMPLE_AT_END" 1 256 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 257 "0x4000"
d G "UART_ADDRESS" 1 263 "2"
d G "UART_DATA" 1 264 "4"
d G "D1_D0_D3_D0" 1 268 "0x0Bff04"
d G "D1_D0_D3_D2_OUT_ON_E1_E2" 1 269 "0x0FF903"
d G "D1_D0_D3_D0_OUT_ON_E1_E2" 1 270 "0x0BF905"
d G "NC_NC_NC_NC" 1 271 "0x00ff07"
d G "D1_D0_D3_D2" 1 272 "0x0Fff02"
d G "D1_D0_NC_NC_OUT_ON_E1" 1 273 "0x03FD01"
d G "D1_VR_D3_VR" 1 274 "0x0Aff06"
d G "D0_VR_D2_VR" 1 275 "0x05ff0e"
d G "CP1_INVERT" 1 276 "0x0000010"
d G "CP2_INVERT" 1 277 "0x0000020"
d G "VREF_LOW" 1 285 "0xa0"
d G "VREF_HIGH" 1 286 "0x80"
d G "VREF_F5" 1 288 "0x40"
d G "VREF_COMP" 1 289 "0x10"
d G "LVD_LVDIN" 1 294 "0x1F"
d G "LVD_45" 1 295 "0x1E"
d G "LVD_42" 1 296 "0x1D"
d G "LVD_40" 1 297 "0x1C"
d G "LVD_38" 1 298 "0x1B"
d G "LVD_36" 1 299 "0x1A"
d G "LVD_35" 1 300 "0x19"
d G "LVD_33" 1 301 "0x18"
d G "LVD_30" 1 302 "0x17"
d G "LVD_28" 1 303 "0x16"
d G "LVD_27" 1 304 "0x15"
d G "LVD_25" 1 305 "0x14"
d G "LVD_23" 1 306 "0x13"
d G "LVD_21" 1 307 "0x12"
d G "LVD_19" 1 308 "0x11"
d G "OSC_TIMER1" 1 313 "1"
d G "OSC_NORMAL" 1 314 "0"
d G "ADC_OFF" 1 321 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 322 "0x10000"
d G "ADC_CLOCK_DIV_4" 1 323 "0x4000"
d G "ADC_CLOCK_DIV_8" 1 324 "0x0040"
d G "ADC_CLOCK_DIV_16" 1 325 "0x4040"
d G "ADC_CLOCK_DIV_32" 1 326 "0x0080"
d G "ADC_CLOCK_DIV_64" 1 327 "0x4080"
d G "ADC_CLOCK_INTERNAL" 1 328 "0x00c0" "Internal 2-6us"
d G "NO_ANALOGS" 1 331 "7" "None"
d G "ALL_ANALOG" 1 332 "0" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_AN1_AN2_AN4_AN5_AN6_AN7_VSS_VREF" 1 333 "1" "A0 A1 A2 A5 E0 E1 E2 VRefh=A3"
d G "AN0_AN1_AN2_AN3_AN4" 1 334 "2" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 1 335 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 1 336 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 1 337 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_AN5_AN6_AN7_VREF_VREF" 1 338 "0x08" "A0 A1 A5 E0 E1 E2 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN2_AN3_AN4_AN5" 1 339 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_AN1_AN2_AN4_AN5_VSS_VREF" 1 340 "0x0A" "A0 A1 A2 A5 E0 VRefh=A3"
d G "AN0_AN1_AN4_AN5_VREF_VREF" 1 341 "0x0B" "A0 A1 A5 E0 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN4_VREF_VREF" 1 342 "0x0C" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 1 343 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 1 344 "0x0E" "A0"
d G "AN0_VREF_VREF" 1 345 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 1 346 "0x1" "!old only provided for compatibility"
d G "A_ANALOG" 1 347 "0x2" "!old only provided for compatibility"
d G "A_ANALOG_RA3_REF" 1 348 "0x3" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 1 349 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 1 350 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 1 351 "0x8" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2" 1 352 "0x9" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3" 1 353 "0xA" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3_RA2" 1 354 "0xB" "!old only provided for compatibility"
d G "A_ANALOG_RA3_RA2_REF" 1 355 "0xC" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 1 356 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 1 357 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 1 358 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 1 362 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 363 "1"
d G "ADC_READ_ONLY" 1 364 "6"
d G "L_TO_H" 1 376 "0x40"
d G "H_TO_L" 1 377 "0"
d G "GLOBAL" 1 379 "0xF2C0"
d G "INT_RTCC" 1 380 "0x00F220"
d G "INT_TIMER0" 1 381 "0x00F220"
d G "INT_TIMER1" 1 382 "0x009D01"
d G "INT_TIMER2" 1 383 "0x009D02"
d G "INT_TIMER3" 1 384 "0x00A002"
d G "INT_EXT_L2H" 1 385 "0x5000F210"
d G "INT_EXT_H2L" 1 386 "0x6000F210"
d G "INT_EXT" 1 387 "0x00F210"
d G "INT_EXT1_L2H" 1 388 "0x5001F008"
d G "INT_EXT1_H2L" 1 389 "0x6001F008"
d G "INT_EXT1" 1 390 "0x00F008"
d G "INT_EXT2_L2H" 1 391 "0x5002F010"
d G "INT_EXT2_H2L" 1 392 "0x6002F010"
d G "INT_EXT2" 1 393 "0x00F010"
d G "INT_RB" 1 394 "0x00FFF208"
d G "INT_PSP" 1 395 "0x009D80"
d G "INT_AD" 1 396 "0x009D40"
d G "INT_RDA" 1 397 "0x009D20"
d G "INT_TBE" 1 398 "0x009D10"
d G "INT_SSP" 1 399 "0x009D08"
d G "INT_CCP1" 1 400 "0x009D04"
d G "INT_CCP2" 1 401 "0x00A001"
d G "INT_BUSCOL" 1 402 "0x00A008"
d G "INT_LOWVOLT" 1 403 "0x00A004"
d G "INT_CANIRX" 1 404 "0x00A380"
d G "INT_CANWAKE" 1 405 "0x00A340"
d G "INT_CANERR" 1 406 "0x00A320"
d G "INT_COMP" 1 407 "0x00A040"
d G "INT_EEPROM" 1 408 "0x00A010"
d G "INT_CANTX2" 1 409 "0x00A310"
d G "INT_CANTX1" 1 410 "0x00A308"
d G "INT_CANTX0" 1 411 "0x00A304"
d G "INT_CANRX1" 1 412 "0x00A302"
d G "INT_CANRX0" 1 413 "0x00A301"
D G "STACK_USE_SERIAL" 0 152 "TRUE"
D G "STACK_USE_PICDEM_LCD" 0 159 "TRUE"
D G "STACK_USE_DHCP" 0 164 "TRUE" "for auto resolution of IP address"
D G "STACK_USE_ARP" 0 165 "TRUE" "needed to resolve MAC addresses of IP addresses"
D G "STACK_USE_UDP" 0 166 "TRUE" "needed for dhcp and announce"
D G "STACK_USE_ANNOUNCE" 0 167 "TRUE" "announce our IP periodically to the network"
D G "STACK_USE_MCPENC" 0 171 "TRUE" "tell the stack to use the ENC28J60 driver"
D G "STACK_USE_MCPINC" 0 179 "FALSE"
D G "STACK_USE_ICMP" 0 190 "TRUE" "Enabled for ping support"
D G "STACK_USE_TCP" 0 191 "TRUE" "To send TCP packets (talk to HTTP clients)"
D G "STACK_USE_HTTP" 0 192 "TRUE" "Enable the CCS webserver"
D G "STACK_USE_IP_GLEANING" 0 193 "FALSE" "Disable Microchip's propietary auto-IP configuration"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
C G "" 2 1 1 "*"
D G "STACK_USE_FTP_SERVER" 2 63 "STACK_USE_FTP"
D G "STACK_INCLUDE" 2 65 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
D G "STACK_TSK_H" 3 49 ""
D G "OUTPUT_DRIVE_MACRO" 3 55 "(x) bit_clear(*(x/8+18),x%8)"
D G "OUTPUT_FLOAT_MACRO" 3 63 "(x) bit_set(*(x/8+18),x%8)"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
D G "COMPILER_H" 4 43 ""
C G "" 4 49 1 "*"
C G "" 4 111 1 "*"
C G "" 4 175 1 "*"
C G "" 4 238 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 1 "*"
C G "" 3 72 2 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 1 "*"
C G "" 3 83 2 "*"
C G "" 3 96 1 "*"
C G "" 3 96 1 "*"
C G "" 3 96 1 "*"
C G "" 3 96 1 "*"
C G "" 3 96 1 "*"
D G "MPFS_START_POSITION" 3 107 "548"
D G "END_OF_MPFS_POINTER" 3 110 " (MPFS_START_POSITION)"
D G "MPFS_RESERVE_BLOCK" 3 111 " (END_OF_MPFS_POINTER+4)"
C G "" 3 113 1 "*"
C G "" 3 113 1 "*"
C G "" 3 113 1 "*"
C G "" 3 113 1 "*"
D G "STACK_USE_MAC" 3 135 "TRUE"
D G "STACK_USE_DNS" 3 162 "FALSE"
D G "STACK_USE_TELNET" 3 182 "FALSE"
D G "STACK_USE_SMTP" 3 190 "FALSE"
D G "STACK_USE_SNMP" 3 194 "FALSE"
D G "STACK_USE_MPFS" 3 214 "FALSE"
D G "STACK_USE_HTTP2" 3 218 "FALSE"
D G "STACK_USE_FAT" 3 222 "FALSE"
D G "STACK_USE_FTP" 3 226 "FALSE"
D G "STACK_USE_TFTP" 3 230 "FALSE"
D G "STACK_USE_TEMP" 3 234 "FALSE"
C G "" 3 237 1 "*"
D G "STACK_USE_UDP" 3 252 "TRUE"
C G "" 3 255 1 "*"
C G "" 3 265 1 "*"
C G "" 3 265 1 "*"
C G "" 3 265 1 "*"
D G "MCHP_MAC" 3 272 ""
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
C G "" 3 276 1 "*"
D G "___TCPIP_STACK_CONFIGURATION" 5 29 ""
D G "MODEM_DCD" 5 49 "PIN_G3"
D G "MODEM_RESET" 5 50 "PIN_G4"
D G "MODEM_TX" 5 51 "PIN_G1"
D G "MODEM_RX" 5 52 "PIN_G2"
D G "MODEM_INIT_STR" 5 53 ""ATM1L3&K0"" "speaker on, volume high, no hw flow control"
D G "MODEM_DIAL_STR" 5 54 ""ATDT""
D G "MODEM_BAUD_RATE" 5 55 "115200"
D G "MODEM_RESPONSE_TIMEOUT" 5 57 "2000" "time to wait for a response to an AT command (in ms)"
D G "MODEM_CONNECT_TIMEOUT" 5 58 "120000" "time to wait for modem to make a connection (in ms)"
D G "PIN_ENC_MAC_SO" 5 85 "PIN_C4" "PIC <<<< ENC"
D G "PIN_ENC_MAC_SI" 5 86 "PIN_C5" "PIC >>>> ENC"
D G "PIN_ENC_MAC_CLK" 5 87 "PIN_C3"
D G "PIN_ENC_MAC_CS" 5 88 "PIN_D1"
D G "PIN_ENC_MAC_RST" 5 89 "PIN_D0"
D G "PIN_ENC_MAC_INT" 5 90 "PIN_B0"
D G "PIN_ENC_MAC_WOL" 5 91 "PIN_B1"
D G "ENC_MAC_USE_SPI" 5 92 "TRUE" "due to an errata in the ENC28J60, you should always use HW SPI to assure that SPI clock is over 8MHz!"
D G "mac_enc_spi_tris_init" 5 93 "()  TRISB=(TRISB | 0b11); TRISC = (TRISC & 0b11010111) | 0x10; TRISD=TRISD & 0xF4" "was 0xFC"
D G "TCP_NO_WAIT_FOR_ACK" 5 115 "FALSE"
D G "MY_DEFAULT_IP_ADDR_BYTE1" 5 122 "10" "IP ADDRESS"
D G "MY_DEFAULT_IP_ADDR_BYTE2" 5 123 "10" "This unit's IP address."
D G "MY_DEFAULT_IP_ADDR_BYTE3" 5 124 "5"
D G "MY_DEFAULT_IP_ADDR_BYTE4" 5 125 "15"
D G "MY_DEFAULT_MASK_BYTE1" 5 127 "0xff" "NETMASK"
D G "MY_DEFAULT_MASK_BYTE2" 5 128 "0xff" "Netmask tells the IP / ARP stack which"
D G "MY_DEFAULT_MASK_BYTE3" 5 129 "0xff" "IP's are on your local network."
D G "MY_DEFAULT_MASK_BYTE4" 5 130 "0x00"
D G "MY_DEFAULT_GATE_BYTE1" 5 132 "192" "GATEWAY IP ADDRESS"
D G "MY_DEFAULT_GATE_BYTE2" 5 133 "168" "Gateway acts as a conduit between two networks."
D G "MY_DEFAULT_GATE_BYTE3" 5 134 "100"
D G "MY_DEFAULT_GATE_BYTE4" 5 135 "1"
D G "MY_DEFAULT_MAC_BYTE1" 5 141 "0x00"
D G "MY_DEFAULT_MAC_BYTE2" 5 142 "0x04"
D G "MY_DEFAULT_MAC_BYTE3" 5 143 "0xa3"
D G "MY_DEFAULT_MAC_BYTE4" 5 144 "0x00"
D G "MY_DEFAULT_MAC_BYTE5" 5 145 "0x00"
D G "MY_DEFAULT_MAC_BYTE6" 5 146 "0x00"
D G "MAX_SOCKETS" 5 152 "5"
D G "MAX_UDP_SOCKETS" 5 159 "2"
D G "MAC_TX_BUFFER_SIZE" 5 181 "1024" "do not modify this line"
D G "MAC_TX_BUFFER_COUNT" 5 182 "1" "do not modify this line"
D G "MAC_RX_BUFFER_SIZE" 5 191 "MAC_TX_BUFFER_SIZE" "do not modify this line unless you are certain you know what you're doing"
D G "MY_MAC_BYTE1" 3 295 "AppConfig.MyMACAddr.v[0]"
D G "MY_MAC_BYTE2" 3 296 "AppConfig.MyMACAddr.v[1]"
D G "MY_MAC_BYTE3" 3 297 "AppConfig.MyMACAddr.v[2]"
D G "MY_MAC_BYTE4" 3 298 "AppConfig.MyMACAddr.v[3]"
D G "MY_MAC_BYTE5" 3 299 "AppConfig.MyMACAddr.v[4]"
D G "MY_MAC_BYTE6" 3 300 "AppConfig.MyMACAddr.v[5]"
C G "" 3 302 1 "*"
C G "" 3 302 1 "*"
D G "MY_MASK_BYTE1" 3 307 "AppConfig.MyMask.v[0]"
D G "MY_MASK_BYTE2" 3 308 "AppConfig.MyMask.v[1]"
D G "MY_MASK_BYTE3" 3 309 "AppConfig.MyMask.v[2]"
D G "MY_MASK_BYTE4" 3 310 "AppConfig.MyMask.v[3]"
C G "" 3 312 1 "*"
C G "" 3 312 1 "*"
D G "MY_IP" 3 319 "AppConfig.MyIPAddr"
D G "MY_IP_BYTE1" 3 321 "AppConfig.MyIPAddr.v[0]"
D G "MY_IP_BYTE2" 3 322 "AppConfig.MyIPAddr.v[1]"
D G "MY_IP_BYTE3" 3 323 "AppConfig.MyIPAddr.v[2]"
D G "MY_IP_BYTE4" 3 324 "AppConfig.MyIPAddr.v[3]"
C G "" 3 326 1 "*"
D G "MY_GATE_BYTE1" 3 330 "AppConfig.MyGateway.v[0]"
D G "MY_GATE_BYTE2" 3 331 "AppConfig.MyGateway.v[1]"
D G "MY_GATE_BYTE3" 3 332 "AppConfig.MyGateway.v[2]"
D G "MY_GATE_BYTE4" 3 333 "AppConfig.MyGateway.v[3]"
T G "BOOL" 3 368 "int1"
T G "BUFFER" 3 370 "int8"
T G "WORD" 3 372 "int16"
T G "DWORD" 3 373 "int32"
T G "BYTE_VAL" 3 389 "{int8 Val}"
T G "SWORD_VAL" 3 401 "{int32 Val}"
T G "WORD_VAL" 3 413 "{int16 Val,int8[2] v}" "typedef union _DWORD_VAL"
T G "DWORD_VAL" 3 475 "{DWORD Val,WORD[2] w,int8[4] v}"
D G "LOWER_LSB" 3 478 "(a)    (a).v[0]"
D G "LOWER_MSB" 3 479 "(a)   (a).v[1]"
D G "UPPER_LSB" 3 480 "(a)    (a).v[2]"
D G "UPPER_MSB" 3 481 "(a)    (a).v[3]"
T G "MAC_ADDR" 3 486 "{int8[6] v}"
T G "IP_ADDR" 3 492 "{int8[4] v,DWORD Val}"
T G "NODE_INFO" 3 499 "{MAC_ADDR MACAddr,IP_ADDR IPAddr}"
T G "APP_CONFIG" 3 517 "{IP_ADDR MyIPAddr,MAC_ADDR MyMACAddr,IP_ADDR MyMask,IP_ADDR MyGateway,IP_ADDR PrimaryDNSServer}" "typedef union _STACK_FLAGS"
V G "AppConfig" 3 528 "APP_CONFIG"
D G "StackIsInConfigMode" 3 531 "()   (stackFlags.bits.bInConfigMode)"
C L "StackInit" 3 537 1 "*"
C L "StackInit" 3 537 1 "*"
C L "StackInit" 3 537 1 "*"
C L "StackInit" 3 537 1 "*"
C L "StackInit" 3 537 1 "*"
C L "StackInit" 3 537 1 "*"
C L "StackInit" 3 537 1 "*"
F G "StackInit" 3 552 "void()"
C L "StackInit" 3 555 1 "*"
C L "StackInit" 3 555 1 "*"
C L "StackInit" 3 555 1 "*"
C L "StackInit" 3 555 1 "*"
C L "StackInit" 3 555 1 "*"
C L "StackInit" 3 555 1 "*"
C L "StackInit" 3 555 1 "*"
C L "StackInit" 3 555 1 "*"
C L "StackInit" 3 555 1 "*"
C L "StackInit" 3 555 1 "*"
F G "StackTask" 3 574 "void()"
D G "_STRING" 6 12 ""
D G "_STDDEF" 7 13 ""
D G "ptrdiff_t" 7 18 "unsigned int16"
D G "size_t" 7 21 "unsigned int8"
D G "wchar_t" 7 22 "char"
D G "NULL" 7 23 "0"
D G "offsetof" 7 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 8 12 ""
D G "islower" 8 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 8 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 8 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 8 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 8 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 8 19 "(x)  ((x)==' ')"
D G "isxdigit" 8 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 8 21 "(x)  ((x)<' ')"
D G "isprint" 8 22 "(x)  ((x)>=' ')"
D G "isgraph" 8 23 "(x)  ((x)>' ')"
D G "ispunct" 8 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "StackTask" 6 19 10 "FUNCTION"
F G "memmove" 6 34 "*int8()"
V L "s1" 6 34 "*int8"
V L "s2" 6 34 "*int8"
V L "n" 6 34 "int8"
V L "sc1" 6 36 "*int8"
V L "sc2" 6 37 "*int8"
D G "strcopy" 6 54 "strcpy"
C L "strncpy" 6 19 4 "FUNCTION"
F G "strncpy" 6 61 "*int8()"
V L "s1" 6 61 "*int8"
V L "s2" 6 61 "*int8"
V L "n" 6 61 "int8"
V L "s" 6 63 "*int8"
C L "strcat" 6 19 3 "FUNCTION"
F G "strcat" 6 78 "*int8()"
V L "s1" 6 78 "*int8"
V L "s2" 6 78 "*int8"
V L "s" 6 80 "*int8"
C L "strncat" 6 19 2 "FUNCTION"
F G "strncat" 6 96 "*int8()"
V L "s1" 6 96 "*int8"
V L "s2" 6 96 "*int8"
V L "n" 6 96 "int8"
V L "s" 6 98 "*int8"
C L "memcmp" 6 19 3 "FUNCTION"
F G "memcmp" 6 120 "sint8()"
V L "s1" 6 120 "*int8"
V L "s2" 6 120 "*int8"
V L "n" 6 120 "int8"
V L "su1" 6 122 "*int8"
V L "su2" 6 122 "*int8"
C L "strcmp" 6 19 2 "FUNCTION"
F G "strcmp" 6 134 "sint8()"
V L "s1" 6 134 "*int8"
V L "s2" 6 134 "*int8"
C L "strcoll" 6 19 2 "FUNCTION"
F G "strcoll" 6 144 "sint8()"
V L "s1" 6 144 "*int8"
V L "s2" 6 144 "*int8"
C L "strncmp" 6 19 4 "FUNCTION"
F G "strncmp" 6 157 "sint8()"
V L "s1" 6 157 "*int8"
V L "s2" 6 157 "*int8"
V L "n" 6 157 "int8"
C L "strxfrm" 6 19 3 "FUNCTION"
F G "strxfrm" 6 169 "int8()"
V L "s1" 6 169 "*int8"
V L "s2" 6 169 "*int8"
V L "n" 6 169 "int8"
V L "s" 6 171 "*int8"
V L "n1" 6 172 "int8"
C L "memchr" 6 19 3 "FUNCTION"
F G "memchr" 6 191 "*int8()"
V L "s" 6 191 "*int8"
V L "c" 6 191 "int8"
V L "n" 6 191 "int8"
V L "uc" 6 193 "int8"
V L "su" 6 194 "*int8"
C L "strchr" 6 19 2 "FUNCTION"
F G "strchr" 6 205 "*int8()"
V L "s" 6 205 "*int8"
V L "c" 6 205 "int8"
C L "strcspn" 6 19 4 "FUNCTION"
F G "strcspn" 6 217 "int8()"
V L "s1" 6 217 "*int8"
V L "s2" 6 217 "*int8"
V L "sc1" 6 219 "*int8"
V L "sc2" 6 219 "*int8"
C L "strpbrk" 6 19 4 "FUNCTION"
F G "strpbrk" 6 232 "*int8()"
V L "s1" 6 232 "*int8"
V L "s2" 6 232 "*int8"
V L "sc1" 6 234 "*int8"
V L "sc2" 6 234 "*int8"
C L "strrchr" 6 19 2 "FUNCTION"
F G "strrchr" 6 247 "*int8()"
V L "s" 6 247 "*int8"
V L "c" 6 247 "int8"
V L "p" 6 249 "*int8"
C L "strspn" 6 19 2 "FUNCTION"
F G "strspn" 6 262 "int8()"
V L "s1" 6 262 "*int8"
V L "s2" 6 262 "*int8"
V L "sc1" 6 264 "*int8"
V L "sc2" 6 264 "*int8"
C L "strstr" 6 19 6 "FUNCTION"
F G "strstr" 6 281 "*int8()"
V L "s1" 6 281 "*int8"
V L "s2" 6 281 "*int8"
V L "s" 6 283 "*int8"
V L "t" 6 283 "*int8"
C L "strtok" 6 19 13 "FUNCTION"
F G "strtok" 6 320 "*int8()"
V L "s1" 6 320 "*int8"
V L "s2" 6 320 "*int8"
V L "beg" 6 322 "*int8"
V L "end" 6 322 "*int8"
V L "save" 6 323 "*int8"
C L "strlen" 6 19 6 "FUNCTION"
F G "strlen" 6 369 "int8()"
V L "s" 6 369 "*int8"
V L "sc" 6 371 "*int8"
C L "stricmp" 6 19 2 "FUNCTION"
F G "stricmp" 6 380 "sint8()"
V L "s1" 6 380 "*int8"
V L "s2" 6 380 "*int8"
C L "strlwr" 6 19 3 "FUNCTION"
F G "strlwr" 6 394 "*int8()"
V L "s" 6 394 "*int8"
V L "p" 6 396 "*int8"
D G "_STDLIB" 9 12 ""
D G "RAND_MAX" 9 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 9 25 "1"
T G "div_t" 9 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 9 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 7 3 6 "FUNCTION"
C L "atoi" 9 43 2 "FUNCTION"
C L "atoi" 9 46 1 "*"
C L "atoi" 9 46 1 "*"
F G "atoi" 9 50 "sint8()"
V L "s" 9 50 "*int8" "Syntax: signed int32  atoi32(char * s)"
F G "atoi32" 9 58 "sint32()"
V L "s" 9 58 "*int8"
C L "atoi32" 9 46 3 "FUNCTION"
F G "itoa" 9 79 "*int8()"
V L "num" 9 79 "sint32"
V L "base" 9 79 "int8"
V L "s" 9 79 "*int8" "Standard template: signed int16  atol(char * s)"
C L "itoa" 9 81 1 "*"
C L "itoa" 9 81 1 "*"
F G "atol" 9 85 "sint16()"
V L "s" 9 85 "*int8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
C L "atol" 9 87 1 "*"
F G "strtol" 9 93 "sint16()"
V L "s" 9 93 "*int8"
V L "endptr" 9 93 "*int8"
V L "base" 9 93 "sint8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
C L "strtol" 9 95 1 "*"
F G "strtoul" 9 101 "int16()"
V L "s" 9 101 "*int8"
V L "endptr" 9 101 "*int8"
V L "base" 9 101 "sint8" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 9 95 2 "FUNCTION"
C L "strtoul" 9 103 1 "*"
C L "strtoul" 9 103 1 "*"
C L "strtoul" 9 103 1 "*"
F G "strtof" 9 110 "float()"
V L "s" 9 110 "*int8"
V L "endptr" 9 110 "*int8"
D G "strtof48" 9 116 "(s, e) strtof(s, e)"
D G "strtod" 9 117 "(s, e) strtof(s, e)"
C L "strtof" 9 103 1 "FUNCTION"
C L "strtof" 9 120 1 "*"
D G "atof" 9 124 "(s)   strtof(s, 0)"
C L "strtof" 9 120 1 "FUNCTION"
C L "strtof" 9 143 1 "*"
C L "strtof" 9 143 1 "*"
C L "strtof" 9 143 1 "*"
F G "atoe" 9 149 "float()"
V L "s" 9 149 "*int8"
C L "atoe" 9 143 2 "FUNCTION"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
C L "atoe" 9 160 1 "*"
F G "rand" 9 169 "int16()"
C L "rand" 9 160 1 "FUNCTION"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
C L "rand" 9 171 1 "*"
F G "srand" 9 191 "void()"
V L "seed" 9 191 "int32" "Memory management functions"
C L "srand" 9 171 3 "FUNCTION"
F G "system" 9 205 "sint8()"
V L "string" 9 205 "*int8" "Searching and sorting utilities"
C L "system" 9 171 1 "FUNCTION"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 1 "*"
C L "system" 9 211 4 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
C L "system" 9 229 1 "*"
D G "labs" 9 249 "abs"
F G "div" 9 251 "div_t()"
V L "numer" 9 251 "sint8"
V L "denom" 9 251 "sint8"
F G "ldiv" 9 252 "ldiv_t()"
V L "numer" 9 252 "sint16"
V L "denom" 9 252 "sint16" "Multibyte character functions"
C L "ldiv" 9 229 4 "FUNCTION"
C L "ldiv" 7 2 7 "FUNCTION"
C L "ldiv" 6 2 7 "FUNCTION"
F G "div" 9 274 "div_t()"
V L "numer" 9 274 "sint8"
V L "denom" 9 274 "sint8"
V L "val" 9 276 "div_t"
F G "ldiv" 9 282 "ldiv_t()"
V L "numer" 9 282 "sint16"
V L "denom" 9 282 "sint16"
V L "val" 9 284 "ldiv_t"
F G "atoe" 9 361 "float()"
V L "s" 9 361 "*int8"
V L "pow10" 9 363 "float"
V L "result" 9 364 "float"
V L "sign" 9 365 "int8"
V L "expsign" 9 366 "int8"
V L "c" 9 367 "int8"
V L "ptr" 9 368 "int8"
V L "i" 9 369 "int8"
V L "exp" 9 370 "float"
V L "expcnt" 9 371 "int8"
C L "atoe" 9 397 1 "FUNCTION"
F G "atoi" 9 429 "sint8()"
V L "s" 9 429 "*int8"
V L "result" 9 431 "sint8"
V L "sign" 9 432 "int8"
V L "base" 9 432 "int8"
V L "index" 9 432 "int8"
V L "c" 9 433 "int8"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
C L "atoi" 9 397 1 "FUNCTION"
F G "atol" 9 498 "sint16()"
V L "s" 9 498 "*int8"
V L "result" 9 500 "sint16"
V L "sign" 9 501 "int8"
V L "base" 9 501 "int8"
V L "index" 9 501 "int8"
V L "c" 9 502 "int8"
C L "atol" 9 397 1 "FUNCTION"
C L "atol" 9 397 1 "FUNCTION"
C L "atol" 9 397 1 "FUNCTION"
C L "atol" 9 397 1 "FUNCTION"
C L "mult_with10" 9 397 1 "FUNCTION"
F G "mult_with10" 9 565 "sint32()"
V L "num" 9 565 "int32"
F G "atoi32" 9 571 "sint32()"
V L "s" 9 571 "*int8"
V L "result" 9 573 "sint32"
V L "sign" 9 574 "int8"
V L "base" 9 574 "int8"
V L "index" 9 574 "int8"
V L "c" 9 575 "int8"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
C L "atoi32" 9 397 1 "FUNCTION"
F G "itoa" 9 770 "*int8()"
V L "num" 9 770 "sint32"
V L "base" 9 770 "int8"
V L "s" 9 770 "*int8"
V L "temp" 9 772 "int32"
V L "i" 9 773 "int8"
V L "sign" 9 773 "int8"
V L "cnt" 9 773 "int8"
V L "c" 9 774 "int8"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
C L "itoa" 9 397 1 "FUNCTION"
F G "strtof" 9 807 "float()"
V L "s" 9 807 "*int8"
V L "endptr" 9 807 "*int8"
V L "pow10" 9 809 "float"
V L "result" 9 810 "float"
V L "skip" 9 811 "int1"
V L "sign" 9 811 "int1"
V L "point" 9 811 "int1"
V L "c" 9 812 "int8"
V L "ptr" 9 813 "int8"
F G "strtoul" 9 1025 "int16()"
V L "s" 9 1025 "*int8"
V L "endptr" 9 1025 "*int8"
V L "base" 9 1025 "sint8"
V L "sc" 9 1027 "*int8"
V L "s1" 9 1027 "*int8"
V L "sd" 9 1027 "*int8"
V L "x" 9 1028 "int16"
V L "sign" 9 1029 "int8"
V L "digits" 9 1030 "int8[1]"
C L "strtoul" 9 397 1 "FUNCTION"
C L "strtoul" 9 397 1 "FUNCTION"
C L "strtoul" 9 397 1 "FUNCTION"
F G "strtol" 9 1087 "sint16()"
V L "s" 9 1087 "*int8"
V L "endptr" 9 1087 "*int8"
V L "base" 9 1087 "sint8"
V L "sc" 9 1089 "*int8"
V L "s1" 9 1089 "*int8"
V L "sd" 9 1089 "*int8"
V L "x" 9 1090 "sint16"
V L "sign" 9 1091 "int8"
V L "digits" 9 1092 "int8[1]"
C L "strtol" 9 397 1 "FUNCTION"
C L "strtol" 9 397 1 "FUNCTION"
C L "strtol" 9 397 1 "FUNCTION"
F G "system" 9 1150 "sint8()"
V L "string" 9 1150 "*int8"
F G "mblen" 9 1155 "int8(*int8 string)"
V L "s" 9 1155 "*int8"
V L "n" 9 1155 "int8"
F G "mbtowc" 9 1160 "int8()"
V L "pwc" 9 1160 "*int8"
V L "s" 9 1160 "*int8"
V L "n" 9 1160 "int8"
F G "wctomb" 9 1166 "int8()"
V L "s" 9 1166 "*int8"
V L "wchar" 9 1166 "int8"
F G "mbstowcs" 9 1172 "int8()"
V L "pwcs" 9 1172 "*int8"
V L "s" 9 1172 "*int8"
V L "n" 9 1172 "int8"
F G "wcstombs" 9 1178 "int8()"
V L "s" 9 1178 "*int8"
V L "pwcs" 9 1178 "*int8"
V L "n" 9 1178 "int8"
V G "_Randseed" 9 1188 "int32"
F G "rand" 9 1190 "int16()"
F G "srand" 9 1196 "void()"
V L "seed" 9 1196 "int32"
T G "*_Cmpfun" 9 1206 "sint8(int32 seed)"
V L "p1" 9 1206 "*int8"
V L "p2" 9 1206 "*int8"
F G "qsort" 9 1213 "void()"
V L "qdata" 9 1213 "*int8"
V L "qitems" 9 1213 "int8"
V L "qsize" 9 1213 "int8"
V L "cmp" 9 1213 "_Cmpfun"
V L "m" 9 1214 "int8"
V L "j" 9 1214 "int8"
V L "i" 9 1214 "int8"
V L "l" 9 1214 "int8"
V L "done" 9 1215 "int1"
V L "t" 9 1216 "int8[16]"
F G "bsearch" 9 1241 "*int8()"
V L "key" 9 1241 "*int8"
V L "base" 9 1241 "*int8"
V L "num" 9 1241 "int8"
V L "width" 9 1241 "int8"
V L "cmp" 9 1241 "_Cmpfun"
V L "p" 9 1243 "*int8"
V L "q" 9 1243 "*int8"
V L "n" 9 1244 "int8"
V L "pivot" 9 1245 "int8"
V L "val" 9 1246 "sint8"
C L "bsearch" 9 397 1 "FUNCTION"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 10 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
D G "HELPERS_H" 11 44 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
F G "ReadStringUART" 11 53 "int8()"
V L "Dest" 11 53 "*int8"
V L "BufferLen" 11 53 "int8"
F G "hexatob" 11 54 "int8()"
V L "AsciiChars" 11 54 "WORD_VAL"
F G "btohexa_high" 11 55 "int8()"
V L "b" 11 55 "int8"
F G "btohexa_low" 11 56 "int8()"
V L "b" 11 56 "int8"
F G "swaps" 11 58 "WORD()"
V L "v" 11 58 "WORD_VAL"
F G "swapl" 11 59 "DWORD()"
V L "v" 11 59 "DWORD_VAL"
F G "CalcIPChecksum" 11 61 "WORD()"
V L "buffer" 11 61 "*int8"
V L "len" 11 61 "WORD"
F G "CalcIPBufferChecksum" 11 62 "WORD()"
V L "len" 11 62 "WORD" "*                  MAC Module Defs for Microchip Stack"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
C L "CalcIPBufferChecksum" 12 1 1 "*"
D G "MAC_H" 12 41 ""
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 2 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
D G "MAC_IP" 12 45 " (0u)"
D G "MAC_ARP" 12 46 " (0x6u)"
D G "MAC_UNKNOWN" 12 47 " (0x0ffu)"
D G "INVALID_BUFFER" 12 49 " (0xffu)"
C L "CalcIPBufferChecksum" 12 51 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
D G "ENC28J60_H" 14 42 ""
T G "TXSTATUS" 14 68 "{int8[7] v}"
T G "RXSTATUS" 14 91 "{int8[4] v}" "* Register locations"
D G "ERDPTL" 14 97 "0x00"
D G "ERDPTH" 14 98 "0x01"
D G "EWRPTL" 14 99 "0x02"
D G "EWRPTH" 14 100 "0x03"
D G "ETXSTL" 14 101 "0x04"
D G "ETXSTH" 14 102 "0x05"
D G "ETXNDL" 14 103 "0x06"
D G "ETXNDH" 14 104 "0x07"
D G "ERXSTL" 14 105 "0x08"
D G "ERXSTH" 14 106 "0x09"
D G "ERXNDL" 14 107 "0x0A"
D G "ERXNDH" 14 108 "0x0B"
D G "ERXRDPTL" 14 109 "0x0C"
D G "ERXRDPTH" 14 110 "0x0D"
D G "ERXWRPTL" 14 111 "0x0E"
D G "ERXWRPTH" 14 112 "0x0F"
D G "EDMASTL" 14 113 "0x10"
D G "EDMASTH" 14 114 "0x11"
D G "EDMANDL" 14 115 "0x12"
D G "EDMANDH" 14 116 "0x13"
D G "EDMADSTL" 14 117 "0x14"
D G "EDMADSTH" 14 118 "0x15"
D G "EDMACSL" 14 119 "0x16"
D G "EDMACSH" 14 120 "0x17"
D G "EIE" 14 124 "0x1B"
D G "EIR" 14 125 "0x1C"
D G "ESTAT" 14 126 "0x1D"
D G "ECON2" 14 127 "0x1E"
D G "ECON1" 14 128 "0x1F"
D G "EHT0" 14 131 "0x100"
D G "EHT1" 14 132 "0x101"
D G "EHT2" 14 133 "0x102"
D G "EHT3" 14 134 "0x103"
D G "EHT4" 14 135 "0x104"
D G "EHT5" 14 136 "0x105"
D G "EHT6" 14 137 "0x106"
D G "EHT7" 14 138 "0x107"
D G "EPMM0" 14 139 "0x108"
D G "EPMM1" 14 140 "0x109"
D G "EPMM2" 14 141 "0x10A"
D G "EPMM3" 14 142 "0x10B"
D G "EPMM4" 14 143 "0x10C"
D G "EPMM5" 14 144 "0x10D"
D G "EPMM6" 14 145 "0x10E"
D G "EPMM7" 14 146 "0x10F"
D G "EPMCSL" 14 147 "0x110"
D G "EPMCSH" 14 148 "0x111"
D G "EPMOL" 14 151 "0x114"
D G "EPMOH" 14 152 "0x115"
D G "ERXFCON" 14 155 "0x118"
D G "EPKTCNT" 14 156 "0x119"
D G "MACON1" 14 165 "0x200"
D G "MACON2" 14 166 "0x201"
D G "MACON3" 14 168 "0x202"
D G "MACON4" 14 169 "0x203"
D G "MABBIPG" 14 170 "0x204"
D G "MAIPGL" 14 172 "0x206"
D G "MAIPGH" 14 173 "0x207"
D G "MACLCON1" 14 174 "0x208"
D G "MACLCON2" 14 175 "0x209"
D G "MAMXFLL" 14 176 "0x20A"
D G "MAMXFLH" 14 177 "0x20B"
D G "MICMD" 14 184 "0x212"
D G "MIREGADR" 14 186 "0x214"
D G "MIWRL" 14 188 "0x216"
D G "MIWRH" 14 189 "0x217"
D G "MIRDL" 14 190 "0x218"
D G "MIRDH" 14 191 "0x219"
D G "MAADR5" 14 200 "0x300"
D G "MAADR6" 14 201 "0x301"
D G "MAADR3" 14 202 "0x302"
D G "MAADR4" 14 203 "0x303"
D G "MAADR1" 14 204 "0x304"
D G "MAADR2" 14 205 "0x305"
D G "EBSTSD" 14 206 "0x306"
D G "EBSTCON" 14 207 "0x307"
D G "EBSTCSL" 14 208 "0x308"
D G "EBSTCSH" 14 209 "0x309"
D G "MISTAT" 14 210 "0x30A"
D G "EREVID" 14 218 "0x312"
D G "ECOCON" 14 221 "0x315"
D G "EFLOCON" 14 223 "0x317"
D G "EPAUSL" 14 224 "0x318"
D G "EPAUSH" 14 225 "0x319"
C L "CalcIPBufferChecksum" 14 1 7 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
T G "REG" 14 406 "{int8 Val}" "* PH Register Locations"
D G "PHCON1" 14 412 "0x00"
D G "PHSTAT1" 14 413 "0x01"
D G "PHID1" 14 414 "0x02"
D G "PHID2" 14 415 "0x03"
D G "PHCON2" 14 416 "0x10"
D G "PHSTAT2" 14 417 "0x11"
D G "PHIE" 14 418 "0x12"
D G "PHIR" 14 419 "0x13"
D G "PHLCON" 14 420 "0x14"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 14 1 1 "FUNCTION"
T G "PHYREG" 14 546 "{int16 Val,WORD_VAL VAL}" "* Individual Register Bits"
D G "EIE_INTIE" 14 555 " (1<<7)"
D G "EIE_PKTIE" 14 556 " (1<<6)"
D G "EIE_DMAIE" 14 557 " (1<<5)"
D G "EIE_LINKIE" 14 558 " (1<<4)"
D G "EIE_TXIE" 14 559 " (1<<3)"
D G "EIE_TXERIE" 14 560 " (1<<1)"
D G "EIE_RXERIE" 14 561 " (1)"
D G "EIR_PKTIF" 14 564 " (1<<6)"
D G "EIR_DMAIF" 14 565 " (1<<5)"
D G "EIR_LINKIF" 14 566 " (1<<4)"
D G "EIR_TXIF" 14 567 " (1<<3)"
D G "EIR_TXERIF" 14 568 " (1<<1)"
D G "EIR_RXERIF" 14 569 " (1)"
D G "ESTAT_INT" 14 572 " (1<<7)"
D G "ESTAT_BUFFER" 14 573 " (1<<6)"
D G "ESTAT_LATECOL" 14 574 " (1<<4)"
D G "ESTAT_RXBUSY" 14 575 " (1<<2)"
D G "ESTAT_TXABRT" 14 576 " (1<<1)"
D G "ESTAT_CLKRDY" 14 577 " (1)"
D G "ECON2_AUTOINC" 14 580 " (1<<7)"
D G "ECON2_PKTDEC" 14 581 " (1<<6)"
D G "ECON2_PWRSV" 14 582 " (1<<5)"
D G "ECON2_VRPS" 14 583 " (1<<3)"
D G "ECON1_TXRST" 14 586 " (1<<7)"
D G "ECON1_RXRST" 14 587 " (1<<6)"
D G "ECON1_DMAST" 14 588 " (1<<5)"
D G "ECON1_CSUMEN" 14 589 " (1<<4)"
D G "ECON1_TXRTS" 14 590 " (1<<3)"
D G "ECON1_RXEN" 14 591 " (1<<2)"
D G "ECON1_BSEL1" 14 592 " (1<<1)"
D G "ECON1_BSEL0" 14 593 " (1)"
D G "ERXFCON_UCEN" 14 596 " (1<<7)"
D G "ERXFCON_ANDOR" 14 597 " (1<<6)"
D G "ERXFCON_CRCEN" 14 598 " (1<<5)"
D G "ERXFCON_PMEN" 14 599 " (1<<4)"
D G "ERXFCON_MPEN" 14 600 " (1<<3)"
D G "ERXFCON_HTEN" 14 601 " (1<<2)"
D G "ERXFCON_MCEN" 14 602 " (1<<1)"
D G "ERXFCON_BCEN" 14 603 " (1)"
D G "MACON1_TXPAUS" 14 606 " (1<<3)"
D G "MACON1_RXPAUS" 14 607 " (1<<2)"
D G "MACON1_PASSALL" 14 608 " (1<<1)"
D G "MACON1_MARXEN" 14 609 " (1)"
D G "MACON3_PADCFG2" 14 612 " (1<<7)"
D G "MACON3_PADCFG1" 14 613 " (1<<6)"
D G "MACON3_PADCFG0" 14 614 " (1<<5)"
D G "MACON3_TXCRCEN" 14 615 " (1<<4)"
D G "MACON3_PHDRLEN" 14 616 " (1<<3)"
D G "MACON3_HFRMEN" 14 617 " (1<<2)"
D G "MACON3_FRMLNEN" 14 618 " (1<<1)"
D G "MACON3_FULDPX" 14 619 " (1)"
D G "MACON4_DEFER" 14 622 " (1<<6)"
D G "MACON4_BPEN" 14 623 " (1<<5)"
D G "MACON4_NOBKOFF" 14 624 " (1<<4)"
D G "MICMD_MIISCAN" 14 628 " (1<<1)"
D G "MICMD_MIIRD" 14 629 " (1)"
D G "EBSTCON_PSV2" 14 632 " (1<<7)"
D G "EBSTCON_PSV1" 14 633 " (1<<6)"
D G "EBSTCON_PSV0" 14 634 " (1<<5)"
D G "EBSTCON_PSEL" 14 635 " (1<<4)"
D G "EBSTCON_TMSEL1" 14 636 " (1<<3)"
D G "EBSTCON_TMSEL0" 14 637 " (1<<2)"
D G "EBSTCON_TME" 14 638 " (1<<1)"
D G "EBSTCON_BISTST" 14 639 " (1)"
D G "MISTAT_NVALID" 14 642 " (1<<2)"
D G "MISTAT_SCAN" 14 643 " (1<<1)"
D G "MISTAT_BUSY" 14 644 " (1)"
D G "ECOCON_COCON2" 14 647 " (1<<2)"
D G "ECOCON_COCON1" 14 648 " (1<<1)"
D G "ECOCON_COCON0" 14 649 " (1)"
D G "EFLOCON_FULDPXS" 14 652 " (1<<2)"
D G "EFLOCON_FCEN1" 14 653 " (1<<1)"
D G "EFLOCON_FCEN0" 14 654 " (1)"
D G "PHCON1_PRST" 14 661 " (1ul<<15)"
D G "PHCON1_PLOOPBK" 14 662 " (1ul<<14)"
D G "PHCON1_PPWRSV" 14 663 " (1ul<<11)"
D G "PHCON1_PDPXMD" 14 664 " (1ul<<8)"
D G "PHSTAT1_PFDPX" 14 667 " (1ul<<12)"
D G "PHSTAT1_PHDPX" 14 668 " (1ul<<11)"
D G "PHSTAT1_LLSTAT" 14 669 " (1ul<<2)"
D G "PHSTAT1_JBSTAT" 14 670 " (1ul<<1)"
D G "PHID2_PID24" 14 673 " (1ul<<15)"
D G "PHID2_PID23" 14 674 " (1ul<<14)"
D G "PHID2_PID22" 14 675 " (1ul<<13)"
D G "PHID2_PID21" 14 676 " (1ul<<12)"
D G "PHID2_PID20" 14 677 " (1ul<<11)"
D G "PHID2_PID19" 14 678 " (1ul<<10)"
D G "PHID2_PPN5" 14 679 " (1ul<<9)"
D G "PHID2_PPN4" 14 680 " (1ul<<8)"
D G "PHID2_PPN3" 14 681 " (1ul<<7)"
D G "PHID2_PPN2" 14 682 " (1ul<<6)"
D G "PHID2_PPN1" 14 683 " (1ul<<5)"
D G "PHID2_PPN0" 14 684 " (1ul<<4)"
D G "PHID2_PREV3" 14 685 " (1ul<<3)"
D G "PHID2_PREV2" 14 686 " (1ul<<2)"
D G "PHID2_PREV1" 14 687 " (1ul<<1)"
D G "PHID2_PREV0" 14 688 " (1ul)"
D G "PHCON2_FRCLNK" 14 691 " (1ul<<14)"
D G "PHCON2_TXDIS" 14 692 " (1ul<<13)"
D G "PHCON2_JABBER" 14 693 " (1ul<<10)"
D G "PHCON2_HDLDIS" 14 694 " (1ul<<8)"
D G "PHSTAT2_TXSTAT" 14 697 " (1ul<<13)"
D G "PHSTAT2_RXSTAT" 14 698 " (1ul<<12)"
D G "PHSTAT2_COLSTAT" 14 699 " (1ul<<11)"
D G "PHSTAT2_LSTAT" 14 700 " (1ul<<10)"
D G "PHSTAT2_DPXSTAT" 14 701 " (1ul<<9)"
D G "PHSTAT2_PLRITY" 14 702 " (1ul<<5)"
D G "PHIE_PLNKIE" 14 705 " (1ul<<4)"
D G "PHIE_PGEIE" 14 706 " (1ul<<1)"
D G "PHIR_PLNKIF" 14 709 " (1ul<<4)"
D G "PHIR_PGIF" 14 710 " (1ul<<2)"
D G "PHLCON_LACFG3" 14 713 " (1ul<<11)"
D G "PHLCON_LACFG2" 14 714 " (1ul<<10)"
D G "PHLCON_LACFG1" 14 715 " (1ul<<9)"
D G "PHLCON_LACFG0" 14 716 " (1ul<<8)"
D G "PHLCON_LBCFG3" 14 717 " (1ul<<7)"
D G "PHLCON_LBCFG2" 14 718 " (1ul<<6)"
D G "PHLCON_LBCFG1" 14 719 " (1ul<<5)"
D G "PHLCON_LBCFG0" 14 720 " (1ul<<4)"
D G "PHLCON_LFRQ1" 14 721 " (1ul<<3)"
D G "PHLCON_LFRQ0" 14 722 " (1ul<<2)"
D G "PHLCON_STRCH" 14 723 " (1ul<<1)"
C L "CalcIPBufferChecksum" 12 64 1 "FUNCTION"
E G "HALF" 12 67 "0"
E G "FULL" 12 68 "1"
E G "USE_PHY" 12 69 "2"
T G "DUPLEX" 12 69 "_DUPLEX"
E G "Divide1" 12 73 "0"
E G "Divide2" 12 74 "1"
E G "Divide3" 12 75 "2"
E G "Divide4" 12 76 "3"
E G "Divide8" 12 77 "4"
T G "CLK_CONFIG" 12 77 "_CLK_CONFIG"
F G "MACSetDuplex" 12 78 "void()"
V L "DuplexState" 12 78 "DUPLEX"
F G "CalcIPBufferChecksum" 12 79 "WORD()"
V L "len" 12 79 "WORD"
F G "MACPowerDown" 12 81 "void(WORD len)"
F G "MACPowerUp" 12 82 "void()"
F G "MACCalcRxChecksum" 12 83 "WORD()"
V L "offset" 12 83 "WORD"
V L "len" 12 83 "WORD"
F G "MACCalcTxChecksum" 12 84 "WORD()"
V L "offset" 12 84 "WORD"
V L "len" 12 84 "WORD"
F G "MACCopyRxToTx" 12 85 "void()"
V L "RxOffset" 12 85 "WORD"
V L "TxOffset" 12 85 "WORD"
V L "len" 12 85 "WORD"
F G "WritePHYReg" 12 86 "void()"
V L "Register" 12 86 "int8"
V L "Data" 12 86 "WORD"
F G "ReadPHYReg" 12 87 "PHYREG()"
V L "Register" 12 87 "int8"
F G "SetRXHashTableEntry" 12 88 "void()"
V L "DestMACAddr" 12 88 "MAC_ADDR" "* Macro:           void SetLEDConfig(WORD NewConfig)"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
C L "SetRXHashTableEntry" 12 91 1 "*"
D G "SetLEDConfig" 12 139 "(NewConfig)      WritePHYReg(PHLCON, NewConfig)"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
C L "SetRXHashTableEntry" 12 142 1 "*"
D G "GetLEDConfig" 12 188 "()      ReadPHYReg(PHLCON).Val"
F G "MACInit" 12 193 "void()"
F G "MACIsLinked" 12 194 "int8()"
F G "MACGetHeader" 12 196 "int8()"
V L "remote" 12 196 "*MAC_ADDR"
V L "type" 12 196 "*int8"
F G "MACSetRxBuffer" 12 197 "void()"
V L "offset" 12 197 "WORD"
F G "MACGet" 12 198 "int8()"
F G "MACGetArray" 12 199 "WORD()"
V L "val" 12 199 "*int8"
V L "len" 12 199 "WORD"
F G "MACDiscardRx" 12 200 "void()"
F G "MACGetFreeRxSize" 12 201 "WORD()"
F G "MACPutHeader" 12 203 "void()"
V L "remote" 12 203 "*MAC_ADDR"
V L "type" 12 204 "int8"
V L "dataLen" 12 205 "WORD"
F G "MACIsTxReady" 12 206 "int8()"
V L "HighPriority" 12 206 "int8"
F G "MACSetTxBuffer" 12 207 "void()"
V L "buffer" 12 207 "BUFFER"
V L "offset" 12 207 "WORD"
F G "MACPut" 12 208 "void()"
V L "val" 12 208 "int8"
F G "MACPutArray" 12 209 "void()"
V L "val" 12 209 "*int8"
V L "len" 12 209 "WORD"
F G "MACDiscardTx" 12 210 "void()"
V L "buffer" 12 210 "BUFFER"
F G "MACFlush" 12 211 "void()"
F G "MACGetTxBuffer" 12 212 "BUFFER()"
V L "HighPriority" 12 212 "int8" "extern *"
V G "CurrentTxBuffer" 12 215 "BUFFER" "* Function:        BYTE hexatob(WORD_VAL AsciiChars)"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
C L "MACGetTxBuffer" 10 51 1 "*"
F G "hexatob" 10 67 "int8()"
V L "AsciiChars" 10 67 "WORD_VAL" "Convert lowercase to uppercase"
C L "hexatob" 10 51 1 "FUNCTION"
C L "hexatob" 10 51 1 "FUNCTION"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
C L "btohexa_high" 10 90 1 "*"
F G "btohexa_high" 10 108 "int8(WORD_VAL AsciiChars)"
V L "b" 10 108 "int8"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
C L "btohexa_low" 10 114 1 "*"
F G "btohexa_low" 10 132 "int8(int8 b)"
V L "b" 10 132 "int8"
F G "swaps" 10 138 "WORD(int8 b)"
V L "v" 10 138 "WORD_VAL"
V L "new" 10 140 "WORD_VAL"
F G "swapl" 10 148 "DWORD()"
V L "v" 10 148 "DWORD_VAL"
V L "new" 10 150 "DWORD_VAL"
F G "CalcIPChecksum" 10 160 "WORD()"
V L "buffer" 10 160 "*int8"
V L "count" 10 160 "WORD"
V L "i" 10 162 "WORD"
V L "val" 10 163 "*WORD"
V L "tempSum" 10 173 "{DWORD Val}"
V L "sum" 10 173 "{DWORD Val}"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
C G "" 10 198 1 "*"
F G "strupr" 10 257 "*int8()"
V L "s" 10 257 "*int8"
V L "c" 10 259 "int8"
V L "t" 10 260 "*int8"
F G "delay_s" 10 272 "void()"
V L "s" 10 272 "int8"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
D G "TICK_INCLUDE" 15 44 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
D G "TICK_H" 16 43 ""
T G "TICKTYPE" 16 45 "int16" "* This value is used by TCP to implement timeout actions."
D G "TICKS_PER_SECOND" 16 50 "10"
D G "CYCLES_PER_TICKS_PER_SECOND" 16 57 "getenv("CLOCK")/(4 * 16 * TICKS_PER_SECOND)"
D G "TICK_COUNTER" 16 68 "0xFFFF-CYCLES_PER_TICKS_PER_SECOND"
D G "TICK_SECOND" 16 82 "TICKS_PER_SECOND"
D G "TickGetDiff" 16 85 "(a, b)       ((TICKTYPE)(a < b) ? (((TICKTYPE)0xffff - b) + a + 1) : (a - b))"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
C L "TickInit" 16 88 1 "*"
F G "TickInit" 16 103 "void()"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
C L "TickInit" 16 107 1 "*"
F G "TickGet" 16 122 "TICKTYPE()"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 1 "*"
C L "TickGet" 16 125 2 "*"
V G "TickCount" 15 50 "TICKTYPE"
C L "TickGet" 15 50 1 "FUNCTION"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
C L "TickGet" 15 53 1 "*"
F G "TickInit" 15 68 "void()"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
C L "TickGet" 15 78 1 "*"
F G "TickGet" 15 93 "TICKTYPE()"
V L "ret" 15 95 "int16"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
C G "" 15 102 1 "*"
V G "second_counter" 15 117 "int8"
V G "second_counter_intermediate" 15 118 "int8"
F G "Tick_Isr" 15 126 "void()"
C L "Tick_Isr" 15 102 1 "FUNCTION"
C L "Tick_Isr" 15 102 1 "FUNCTION"
C L "Tick_Isr" 15 102 1 "FUNCTION"
D G "debug_stack" 2 73 ""
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
D G "THIS_IS_MAC_LAYER" 17 47 ""
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 2 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
D G "debug_mac" 17 61 ""
D G "SPISelectEthernet" 17 76 "()		output_low(PIN_ENC_MAC_CS)" "changed by ccs"
D G "SPIUnselectEthernet" 17 77 "()	output_high(PIN_ENC_MAC_CS)" "changed by ccs"
D G "HALF_DUPLEX" 17 98 ""
D G "LOW" 17 103 "(a) 					(a & 0xFF)"
D G "HIGH" 17 104 "(a) 				((a>>8) & 0xFF)"
D G "RAMSIZE" 17 107 "8192ul"
D G "TXSTART" 17 108 " (RAMSIZE-(MAC_TX_BUFFER_COUNT * (MAC_TX_BUFFER_SIZE + 8ul)))"
D G "RXSTART" 17 109 " (0ul)						" "Should be an even memory address"
D G "RXSTOP" 17 110 " ((TXSTART-2ul) | 0x0001ul)	" "Odd for errata workaround"
D G "RXSIZE" 17 111 " (RXSTOP-RXSTART+1ul)"
D G "WCR" 17 114 " (0b010<<5)			" "Write Control Register command"
D G "BFS" 17 115 " (0b100<<5)			" "Bit Field Set command"
D G "BFC" 17 116 " (0b101<<5)			" "Bit Field Clear command"
D G "RCR" 17 117 " (0b000<<5)			" "Read Control Register command"
D G "RBM" 17 118 " ((0b001<<5) | 0x1A)	" "Read Buffer Memory command"
D G "WBM" 17 119 " ((0b011<<5) | 0x1A)" "Write Buffer Memory command"
D G "SR" 17 120 " ((0b111<<5) | 0x1F)	" "System Reset command does not use an address."
D G "ETHER_IP" 17 123 " (0x00u)"
D G "ETHER_ARP" 17 124 " (0x06u)"
D G "MAXFRAMEC" 17 126 " (1500u+sizeof(ETHER_HEADER)+4u)"
T G "ETHER_HEADER" 17 135 "{MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}" "A header appended at the start of all RX frames by the hardware"
T G "ENC_PREAMBLE" 17 146 "{int16 NextPacketPointer,RXSTATUS StatusVector,MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}"
T G "DATA_BUFFER" 17 157 "{WORD_VAL StartAddress,WORD_VAL EndAddress}"
F G "MACSetDuplex" 17 159 "void()"
V L "DuplexState" 17 159 "DUPLEX" "Prototypes of functions intended for MAC layer use only."
F G "BankSel" 17 162 "void(DUPLEX DuplexState)"
V L "Register" 17 162 "WORD"
F G "ReadETHReg" 17 163 "REG()"
V L "Address" 17 163 "int8"
F G "ReadMACReg" 17 164 "REG()"
V L "Address" 17 164 "int8"
F G "WriteReg" 17 165 "void()"
V L "Address" 17 165 "int8"
V L "Data" 17 165 "int8"
F G "BFCReg" 17 166 "void()"
V L "Address" 17 166 "int8"
V L "Data" 17 166 "int8"
F G "BFSReg" 17 167 "void()"
V L "Address" 17 167 "int8"
V L "Data" 17 167 "int8"
F G "SendSystemReset" 17 168 "void()"
C L "SendSystemReset" 17 79 4 "FUNCTION"
V G "NextPacketLocation" 17 187 "WORD_VAL"
V G "CurrentPacketLocation" 17 188 "WORD_VAL"
V G "WasDiscarded" 17 189 "BOOL"
V G "ENCRevID" 17 190 "int8" "ENCSPIInit() added by CCS."
C L "SendSystemReset" 17 79 1 "FUNCTION"
F G "ENCSPIInit" 17 194 "void()"
C L "ENCSPIInit" 17 79 1 "FUNCTION"
C L "ENCSPIInit" 17 79 1 "FUNCTION"
C L "ENCSPIInit" 17 79 5 "FUNCTION"
C L "ENCSPIInit" 17 79 1 "FUNCTION"
C L "ENCSPIXfer" 17 79 2 "FUNCTION"
F G "ENCSPIXfer" 17 218 "int8()"
V L "c" 17 218 "int8"
C L "MACInit" 17 234 1 "*"
C L "MACInit" 17 234 1 "*"
C L "MACInit" 17 234 1 "*"
C L "MACInit" 17 234 1 "*"
C L "MACInit" 17 234 1 "*"
C L "MACInit" 17 234 1 "*"
C L "MACInit" 17 234 1 "*"
C L "MACInit" 17 234 1 "*"
C L "MACInit" 17 234 1 "*"
F G "MACInit" 17 251 "void()"
V L "i" 17 253 "int8"
C L "MACInit" 17 234 4 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 2 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 7 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 3 "FUNCTION"
C L "MACInit" 17 234 3 "FUNCTION"
C L "MACInit" 17 234 3 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 2 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 1 "FUNCTION"
C L "MACInit" 17 234 2 "FUNCTION"
C L "MACIsLinked" 17 234 1 "FUNCTION"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
C L "MACIsLinked" 17 381 1 "*"
F G "MACIsLinked" 17 400 "int8()"
C L "MACIsLinked" 17 381 5 "FUNCTION"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
C L "MACIsTxReady" 17 410 1 "*"
F G "MACIsTxReady" 17 430 "int8()"
V L "HighPriority" 17 430 "int8"
F G "MACGetTxBuffer" 17 463 "BUFFER(int8 HighPriority)"
V L "HighPriority" 17 463 "int8"
F G "MACDiscardTx" 17 495 "void(int8 HighPriority)"
V L "buffer" 17 495 "BUFFER"
C L "MACDiscardRx" 17 507 1 "*"
C L "MACDiscardRx" 17 507 1 "*"
C L "MACDiscardRx" 17 507 1 "*"
C L "MACDiscardRx" 17 507 1 "*"
C L "MACDiscardRx" 17 507 1 "*"
C L "MACDiscardRx" 17 507 1 "*"
C L "MACDiscardRx" 17 507 1 "*"
C L "MACDiscardRx" 17 507 1 "*"
C L "MACDiscardRx" 17 507 1 "*"
F G "MACDiscardRx" 17 524 "void(BUFFER buffer)"
V L "NewRXRDLocation" 17 526 "WORD_VAL" "Make sure the current packet was not already discarded"
C L "MACDiscardRx" 17 507 4 "FUNCTION"
C L "MACDiscardRx" 17 507 1 "FUNCTION"
C L "MACDiscardRx" 17 507 3 "FUNCTION"
C L "MACGetFreeRxSize" 17 558 1 "*"
C L "MACGetFreeRxSize" 17 558 1 "*"
C L "MACGetFreeRxSize" 17 558 1 "*"
C L "MACGetFreeRxSize" 17 558 1 "*"
C L "MACGetFreeRxSize" 17 558 1 "*"
C L "MACGetFreeRxSize" 17 558 1 "*"
C L "MACGetFreeRxSize" 17 558 1 "*"
C L "MACGetFreeRxSize" 17 558 1 "*"
F G "MACGetFreeRxSize" 17 574 "WORD()"
V L "ReadPT" 17 576 "WORD_VAL"
V L "WritePT" 17 576 "WORD_VAL" "Read the Ethernet hardware buffer write pointer.  Because packets can be"
C L "MACGetFreeRxSize" 17 558 3 "FUNCTION"
C L "MACGetFreeRxSize" 17 558 1 "FUNCTION"
C L "MACGetFreeRxSize" 17 558 1 "FUNCTION"
C L "MACGetFreeRxSize" 17 558 2 "FUNCTION"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
C L "MACGetHeader" 17 615 1 "*"
F G "MACGetHeader" 17 638 "int8()"
V L "remote" 17 638 "*MAC_ADDR"
V L "type" 17 638 "*int8"
V L "header" 17 640 "ENC_PREAMBLE" "Test if at least one packet has been received and is waiting"
C L "MACGetHeader" 17 615 1 "FUNCTION"
C L "MACGetHeader" 17 615 1 "FUNCTION"
C L "MACGetHeader" 17 615 1 "FUNCTION"
C L "MACGetHeader" 17 615 1 "FUNCTION"
C L "MACGetHeader" 17 615 2 "FUNCTION"
C L "MACGetHeader" 17 615 3 "FUNCTION"
C L "MACGetHeader" 17 615 1 "FUNCTION"
C L "MACGetHeader" 17 615 1 "FUNCTION"
C L "MACGetHeader" 17 615 3 "FUNCTION"
C L "MACGetHeader" 17 615 1 "FUNCTION"
C L "MACGetHeader" 17 615 1 "FUNCTION"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
C L "MACPutHeader" 17 704 1 "*"
F G "MACPutHeader" 17 730 "void(*int8 type)"
V L "remote" 17 730 "*MAC_ADDR"
V L "type" 17 731 "int8"
V L "dataLen" 17 732 "WORD"
C L "MACPutHeader" 17 704 1 "FUNCTION"
C L "MACPutHeader" 17 704 1 "FUNCTION"
C L "MACPutHeader" 17 704 1 "FUNCTION"
C L "MACPutHeader" 17 704 2 "FUNCTION"
C L "MACPutHeader" 17 704 1 "FUNCTION"
C L "MACPutHeader" 17 704 1 "FUNCTION"
C L "MACPutHeader" 17 704 1 "FUNCTION"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
C L "MACFlush" 17 772 1 "*"
F G "MACFlush" 17 795 "void(*MAC_ADDR remote,int8 type,WORD dataLen)"
C L "MACFlush" 17 772 2 "FUNCTION"
C L "MACFlush" 17 772 5 "FUNCTION"
C L "MACFlush" 17 772 1 "FUNCTION"
V L "ReadPtrSave" 17 830 "WORD_VAL"
V L "TXEnd" 17 831 "WORD_VAL"
V L "TXStatus" 17 832 "TXSTATUS"
V L "i" 17 833 "int8" "Cancel the previous transmission if it has become stuck set"
C L "MACFlush" 17 772 1 "FUNCTION"
C L "MACFlush" 17 772 1 "FUNCTION"
C L "MACFlush" 17 772 1 "FUNCTION"
C L "MACFlush" 17 772 3 "FUNCTION"
C L "MACFlush" 17 772 1 "FUNCTION"
C L "MACFlush" 17 772 1 "FUNCTION"
C L "MACFlush" 17 772 1 "FUNCTION"
C L "MACFlush" 17 772 1 "FUNCTION"
C L "MACFlush" 17 772 1 "FUNCTION"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
C L "MACSetRxBuffer" 17 891 1 "*"
F G "MACSetRxBuffer" 17 914 "void()"
V L "offset" 17 914 "WORD"
V L "ReadPT" 17 916 "WORD_VAL" "Determine the address of the beginning of the entire packet"
C L "MACSetRxBuffer" 17 891 1 "FUNCTION"
C L "MACSetRxBuffer" 17 891 1 "FUNCTION"
C L "MACSetRxBuffer" 17 891 1 "FUNCTION"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
C L "MACSetTxBuffer" 17 935 1 "*"
F G "MACSetTxBuffer" 17 957 "void()"
V L "buffer" 17 957 "BUFFER"
V L "offset" 17 957 "WORD"
C L "MACSetTxBuffer" 17 935 4 "FUNCTION"
C L "MACSetTxBuffer" 17 935 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 935 2 "FUNCTION"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
C L "MACCalcRxChecksum" 17 983 1 "*"
F G "MACCalcRxChecksum" 17 1002 "WORD(BUFFER buffer,WORD offset)"
V L "offset" 17 1002 "WORD"
V L "len" 17 1002 "WORD"
V L "temp" 17 1004 "WORD_VAL" "Add the offset requested by firmware plus the Ethernet header"
C L "MACCalcRxChecksum" 17 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 17 983 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
C L "MACCalcTxChecksum" 17 1040 1 "*"
F G "MACCalcTxChecksum" 17 1059 "WORD(WORD len)"
V L "offset" 17 1059 "WORD"
V L "len" 17 1059 "WORD"
V L "temp" 17 1061 "WORD_VAL" "Program the start address of the DMA, after adjusting for the Ethernet"
C L "MACCalcTxChecksum" 17 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 17 1040 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
C L "CalcIPBufferChecksum" 17 1092 1 "*"
F G "CalcIPBufferChecksum" 17 1116 "WORD(WORD len)"
V L "len" 17 1116 "WORD"
V L "temp" 17 1118 "WORD_VAL" "Take care of special cases which the DMA cannot be used for"
C L "CalcIPBufferChecksum" 17 1092 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1092 2 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1092 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1092 1 "FUNCTION"
C L "CalcIPBufferChecksum" 17 1092 1 "FUNCTION"
C L "MACGet" 17 1092 1 "FUNCTION"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 1 "*"
C L "MACGet" 17 1176 4 "*"
C L "MACGet" 17 1361 1 "*"
C L "MACGet" 17 1361 1 "*"
C L "MACGet" 17 1361 1 "*"
C L "MACGet" 17 1361 1 "*"
C L "MACGet" 17 1361 1 "*"
C L "MACGet" 17 1361 1 "*"
C L "MACGet" 17 1361 1 "*"
C L "MACGet" 17 1361 1 "*"
C L "MACGet" 17 1361 1 "*"
C L "MACGet" 17 1361 1 "*"
F G "MACGet" 17 1379 "int8()" "SPISelectEthernet();"
C L "MACGet" 17 1361 9 "FUNCTION"
V L "c" 17 1394 "int8"
C L "MACGetArray" 17 1361 1 "FUNCTION"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
C L "MACGetArray" 17 1404 1 "*"
F G "MACGetArray" 17 1425 "WORD()"
V L "val" 17 1425 "*int8"
V L "len" 17 1425 "WORD" "int16 i;"
C L "MACGetArray" 17 1404 14 "FUNCTION"
C L "MACGetArray" 17 1427 5 "*val"
V L "i" 17 1455 "int16"
C L "MACPut" 17 1427 1 "FUNCTION"
C L "MACPut" 17 1471 1 "*"
C L "MACPut" 17 1471 1 "*"
C L "MACPut" 17 1471 1 "*"
C L "MACPut" 17 1471 1 "*"
C L "MACPut" 17 1471 1 "*"
C L "MACPut" 17 1471 1 "*"
C L "MACPut" 17 1471 1 "*"
C L "MACPut" 17 1471 1 "*"
C L "MACPut" 17 1471 1 "*"
C L "MACPut" 17 1471 1 "*"
F G "MACPut" 17 1489 "void(WORD len)"
V L "val" 17 1489 "int8" "SPISelectEthernet();"
C L "MACPut" 17 1471 7 "FUNCTION"
C L "MACPutArray" 17 1471 1 "FUNCTION"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
C L "MACPutArray" 17 1508 1 "*"
F G "MACPutArray" 17 1527 "void(int8 val)"
V L "val" 17 1527 "*int8"
V L "len" 17 1527 "WORD" "Select the chip and send the proper opcode"
C L "MACPutArray" 17 1508 14 "FUNCTION"
C L "SendSystemReset" 17 1508 1 "FUNCTION"
C L "SendSystemReset" 17 1560 1 "*"
C L "SendSystemReset" 17 1560 1 "*"
C L "SendSystemReset" 17 1560 1 "*"
C L "SendSystemReset" 17 1560 1 "*"
C L "SendSystemReset" 17 1560 1 "*"
C L "SendSystemReset" 17 1560 1 "*"
C L "SendSystemReset" 17 1560 1 "*"
C L "SendSystemReset" 17 1560 1 "*"
C L "SendSystemReset" 17 1560 1 "*"
C L "SendSystemReset" 17 1560 1 "*"
F G "SendSystemReset" 17 1578 "void(*int8 val,WORD len)"
C L "SendSystemReset" 17 1560 5 "FUNCTION"
C L "ReadETHReg" 17 1560 1 "FUNCTION"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
C L "ReadETHReg" 17 1593 1 "*"
F G "ReadETHReg" 17 1615 "REG(*int8 val,WORD len)"
V L "Address" 17 1615 "int8"
V L "c" 17 1617 "int8" "Select the chip and send the Read Control Register opcode/address"
C L "ReadETHReg" 17 1593 10 "FUNCTION"
C L "ReadMACReg" 17 1593 1 "FUNCTION"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
C L "ReadMACReg" 17 1642 1 "*"
F G "ReadMACReg" 17 1664 "REG(WORD len)"
V L "Address" 17 1664 "int8"
V L "c" 17 1666 "int8" "SPISelectEthernet();"
C L "ReadMACReg" 17 1642 13 "FUNCTION"
C L "ReadPHYReg" 17 1642 1 "FUNCTION"
C L "ReadPHYReg" 17 1700 1 "*"
C L "ReadPHYReg" 17 1700 1 "*"
C L "ReadPHYReg" 17 1700 1 "*"
C L "ReadPHYReg" 17 1700 1 "*"
C L "ReadPHYReg" 17 1700 1 "*"
C L "ReadPHYReg" 17 1700 1 "*"
C L "ReadPHYReg" 17 1700 1 "*"
C L "ReadPHYReg" 17 1700 1 "*"
F G "ReadPHYReg" 17 1716 "PHYREG()"
V L "Register" 17 1716 "int8"
V L "Result" 17 1718 "PHYREG" "Set the right address and start the register read operation"
C L "ReadPHYReg" 17 1700 2 "FUNCTION"
C L "ReadPHYReg" 17 1700 1 "FUNCTION"
C L "ReadPHYReg" 17 1700 1 "FUNCTION"
C L "WriteReg" 17 1700 1 "FUNCTION"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
C L "WriteReg" 17 1741 1 "*"
F G "WriteReg" 17 1766 "void()"
V L "Address" 17 1766 "int8"
V L "Data" 17 1766 "int8" "SPISelectEthernet();"
C L "WriteReg" 17 1741 7 "FUNCTION"
C L "BFCReg" 17 1741 1 "FUNCTION"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
C L "BFCReg" 17 1785 1 "*"
F G "BFCReg" 17 1807 "void(int8 Address,int8 Data)"
V L "Address" 17 1807 "int8"
V L "Data" 17 1807 "int8" "SPISelectEthernet();"
C L "BFCReg" 17 1785 7 "FUNCTION"
C L "BFSReg" 17 1785 1 "FUNCTION"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
C L "BFSReg" 17 1826 1 "*"
F G "BFSReg" 17 1848 "void(int8 Address,int8 Data)"
V L "Address" 17 1848 "int8"
V L "Data" 17 1848 "int8" "SPISelectEthernet();"
C L "BFSReg" 17 1826 7 "FUNCTION"
C L "WritePHYReg" 17 1826 1 "FUNCTION"
C L "WritePHYReg" 17 1867 1 "*"
C L "WritePHYReg" 17 1867 1 "*"
C L "WritePHYReg" 17 1867 1 "*"
C L "WritePHYReg" 17 1867 1 "*"
C L "WritePHYReg" 17 1867 1 "*"
C L "WritePHYReg" 17 1867 1 "*"
C L "WritePHYReg" 17 1867 1 "*"
C L "WritePHYReg" 17 1867 1 "*"
C L "WritePHYReg" 17 1867 1 "*"
F G "WritePHYReg" 17 1884 "void(int8 Address,int8 Data)"
V L "Register" 17 1884 "int8"
V L "Data" 17 1884 "WORD" "Write the register address"
C L "WritePHYReg" 17 1867 2 "FUNCTION"
C L "WritePHYReg" 17 1867 1 "FUNCTION"
C L "BankSel" 17 1867 1 "FUNCTION"
C L "BankSel" 17 1901 1 "*"
C L "BankSel" 17 1901 1 "*"
C L "BankSel" 17 1901 1 "*"
C L "BankSel" 17 1901 1 "*"
C L "BankSel" 17 1901 1 "*"
C L "BankSel" 17 1901 1 "*"
C L "BankSel" 17 1901 1 "*"
C L "BankSel" 17 1901 1 "*"
C L "BankSel" 17 1901 1 "*"
F G "BankSel" 17 1918 "void(int8 Register,WORD Data)"
V L "Register" 17 1918 "WORD"
C L "MACSetDuplex" 17 1901 1 "FUNCTION"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 1925 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
C L "MACSetDuplex" 17 2040 1 "*"
F G "MACSetDuplex" 17 2063 "void(WORD Register,WORD Data)"
V L "DuplexState" 17 2063 "DUPLEX"
V L "Register" 17 2065 "REG"
V L "PhyReg" 17 2066 "PHYREG" "Disable receive logic and abort any packets currently being transmitted"
C L "MACSetDuplex" 17 2040 1 "FUNCTION"
C L "MACSetDuplex" 17 2040 1 "FUNCTION"
C L "MACSetDuplex" 17 2040 4 "FUNCTION"
C L "MACSetDuplex" 17 2040 1 "FUNCTION"
C L "MACPowerDown" 17 2040 1 "FUNCTION"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
C L "MACPowerDown" 17 2100 1 "*"
F G "MACPowerDown" 17 2119 "void()"
C L "MACPowerDown" 17 2100 1 "FUNCTION"
C L "MACPowerDown" 17 2100 2 "FUNCTION"
C L "MACPowerDown" 17 2100 1 "FUNCTION"
C L "MACPowerDown" 17 2100 1 "FUNCTION"
C L "MACPowerUp" 17 2100 1 "FUNCTION"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
C L "MACPowerUp" 17 2136 1 "*"
F G "MACPowerUp" 17 2155 "void()"
C L "MACPowerUp" 17 2136 1 "FUNCTION"
C L "MACPowerUp" 17 2136 2 "FUNCTION"
C L "MACPowerUp" 17 2136 1 "FUNCTION"
C L "SetCLKOUT" 17 2136 1 "FUNCTION"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
C L "SetCLKOUT" 17 2169 1 "*"
F G "SetCLKOUT" 17 2191 "void()"
V L "NewConfig" 17 2191 "int8"
C L "GetCLKOUT" 17 2169 1 "FUNCTION"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
C L "GetCLKOUT" 17 2198 1 "*"
F G "GetCLKOUT" 17 2220 "int8()"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
D G "UDP_H" 20 41 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
T G "UDP_PORT" 20 46 "WORD"
T G "UDP_SOCKET" 20 47 "int8"
T G "UDP_SOCKET_INFO" 20 62 "{NODE_INFO remoteNode,UDP_PORT remotePort,UDP_PORT localPort,WORD TxCount,WORD RxCount,BUFFER TxBuffer,WORD TxOffset}"
D G "INVALID_UDP_SOCKET" 20 64 " (0xff)"
D G "INVALID_UDP_PORT" 20 65 " (0L)"
C G "" 20 67 1 "*"
C G "" 20 67 1 "*"
V G "activeUDPSocket" 20 71 "UDP_SOCKET"
V G "UDPSocketInfo" 20 72 "UDP_SOCKET_INFO[2]"
T G "UDP_HEADER" 20 81 "{UDP_PORT SourcePort,UDP_PORT DestinationPort,WORD Length,WORD Checksum}" "* Function:        void UDPInit(void)"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
C L "UDPInit" 20 84 1 "*"
F G "UDPInit" 20 99 "void()"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
C L "UDPInit" 20 102 1 "*"
F G "UDPOpen" 20 132 "UDP_SOCKET()"
V L "localPort" 20 132 "UDP_PORT"
V L "remoteNode" 20 133 "*NODE_INFO"
V L "remotePort" 20 134 "UDP_PORT" "* Function:        void UDPClose(UDP_SOCKET s)"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
C L "UDPOpen" 20 137 1 "*"
F G "UDPClose" 20 154 "void()"
V L "s" 20 154 "UDP_SOCKET" "* Macro:           BOOL UDPIsPutReady(UDP_SOCKET s)"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 1 "*"
C L "UDPClose" 20 157 2 "*"
F G "UDPIsPutReady" 20 175 "int8()"
V L "s" 20 175 "int8"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
C L "UDPPut" 20 181 1 "*"
F G "UDPPut" 20 206 "int8()"
V L "v" 20 206 "int8" "* Function:        BOOL UDPFlush(void)"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
C L "UDPPut" 20 209 1 "*"
F G "UDPFlush" 20 228 "void()"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
C L "UDPFlush" 20 232 1 "*"
F G "UDPIsGetReady" 20 253 "int8()"
V L "s" 20 253 "UDP_SOCKET" "* Function:        BOOL UDPGet(BYTE *v)"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
C L "UDPIsGetReady" 20 257 1 "*"
F G "UDPGet" 20 275 "int8()"
V L "v" 20 275 "*int8" "* Function:        void UDPDiscard(void)"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
C L "UDPGet" 20 278 1 "*"
F G "UDPDiscard" 20 294 "void()"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
C L "UDPDiscard" 20 298 1 "*"
F G "UDPProcess" 20 318 "int8()"
V L "remoteNode" 20 318 "*NODE_INFO"
V L "localIP" 20 319 "*IP_ADDR"
V L "len" 20 320 "WORD" "* Macro:           UDPSetTxBuffer(a, b)"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
C L "UDPProcess" 20 322 1 "*"
D G "UDPSetTxBuffer" 20 338 "(a, b) (UDPSocketInfo[activeUDPSocket].TxOffset = b,  IPSetTxBuffer(a, b+sizeof(UDP_HEADER)))"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
C L "UDPProcess" 20 341 1 "*"
D G "UDPSetRxBuffer" 20 356 "(a) IPSetRxBuffer(a+sizeof(UDP_HEADER))"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
C L "UDPProcess" 21 1 1 "*"
D G "DHCP_H" 21 44 ""
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 2 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
C L "UDPProcess" 3 1 1 "*"
E G "SM_DHCP_INIT_FIRST_TIME" 21 52 "0"
E G "SM_DHCP_INIT" 21 53 "1"
E G "SM_DHCP_RESET_WAIT" 21 54 "2"
E G "SM_DHCP_BROADCAST" 21 55 "3"
E G "SM_DHCP_DISCOVER" 21 56 "4"
E G "SM_DHCP_REQUEST" 21 57 "5"
E G "SM_DHCP_BIND" 21 58 "6"
E G "SM_DHCP_BOUND" 21 59 "7"
E G "SM_DHCP_DISABLED" 21 60 "8"
T G "SM_DHCP" 21 60 "_SM_DHCP"
V G "smDHCPState" 21 62 "SM_DHCP"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
C L "UDPProcess" 21 64 1 "*"
D G "DHCPDisable" 21 82 "()       (smDHCPState = SM_DHCP_DISABLED)"
D G "DHCPIsDisabled" 21 84 "()      (smDHCPState == SM_DHCP_DISABLED)"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
C L "UDPProcess" 21 87 1 "*"
F G "DHCPTask" 21 118 "void()"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
C L "DHCPTask" 21 120 1 "*"
D G "DHCPIsBound" 21 136 "()       (DHCPState.bits.bIsBound)"
T G "DHCP_STATE" 21 146 "{}"
V G "DHCPState" 21 149 "DHCP_STATE" "* Macro:           void DHCPReset(void)"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
C L "DHCPTask" 21 151 1 "*"
F G "DHCPReset" 21 168 "void()"
D G "HTTP_USE_CHUNKS" 22 22 "FALSE"
D G "HTTP_USE_DOUBLE_ESCAPE" 22 26 "FALSE"
D G "HTTP_USE_CONTENT_TYPE" 22 30 "FALSE"
D G "HTTP_PORT" 22 34 "80"
D G "HTTP_NUM_SOCKETS" 22 38 "1"
D G "HTTP_GET_PARAM_MAX_SIZE" 22 42 "254"
F G "HTTP_Init" 22 45 "void()"
F G "HTTP_Task" 22 46 "void()"
C L "HTTP_Task" 22 48 4 "*"
F G "http_get_page" 22 57 "int32()"
V L "file_str" 22 57 "*int8"
F G "http_format_char" 22 60 "int8()"
V L "file" 22 60 "int32"
V L "id" 22 60 "int8"
V L "str" 22 60 "*int8"
V L "max_ret" 22 60 "int8"
F G "http_exec_cgi" 22 61 "void()"
V L "file" 22 61 "int32"
V L "key" 22 61 "*int8"
V L "val" 22 61 "*int8" "**** CALLBACKS END ******///"
C L "http_exec_cgi" 2 140 3 "FUNCTION"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 23 1 1 "*"
C L "http_exec_cgi" 6 2 7 "FUNCTION"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 2 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 11 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
C L "http_exec_cgi" 24 1 1 "*"
D G "IP_H" 24 45 ""
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 2 "*"
C L "http_exec_cgi" 3 1 1 "*"
C L "http_exec_cgi" 3 1 1 "*"
D G "IP_PROT_ICMP" 24 50 " (1)"
D G "IP_PROT_TCP" 24 51 " (6)"
D G "IP_PROT_UDP" 24 52 " (17)"
C L "http_exec_cgi" 24 55 1 "*"
T G "IP_HEADER" 24 71 "{int8 VersionIHL,int8 TypeOfService,WORD TotalLength,WORD Identification,WORD FragmentInfo,int8 TimeToLive,int8 Protocol,WORD HeaderChecksum,IP_ADDR SourceAddress,IP_ADDR DestAddress}" "* Function:        BOOL IPIsTxReady(BOOL HighPriority)"
C L "http_exec_cgi" 24 74 1 "*"
C L "http_exec_cgi" 24 74 1 "*"
C L "http_exec_cgi" 24 74 1 "*"
C L "http_exec_cgi" 24 74 1 "*"
C L "http_exec_cgi" 24 74 1 "*"
D G "IPIsTxReady" 24 89 "(HighPriority)       MACIsTxReady(HighPriority)"
C L "http_exec_cgi" 24 92 1 "*"
C L "http_exec_cgi" 24 92 1 "*"
C L "http_exec_cgi" 24 92 1 "*"
C L "http_exec_cgi" 24 92 1 "*"
C L "http_exec_cgi" 24 92 1 "*"
C L "http_exec_cgi" 24 92 1 "*"
C L "http_exec_cgi" 24 92 1 "*"
D G "IPSetTxBuffer" 24 108 "(a, b) MACSetTxBuffer(a, b+sizeof(IP_HEADER))"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
C L "http_exec_cgi" 24 112 1 "*"
F G "IPPutHeader" 24 136 "WORD()"
V L "remote" 24 136 "*NODE_INFO"
V L "protocol" 24 137 "int8"
V L "len" 24 138 "WORD" "* Macro:           IPPutArray(a, b)"
C L "IPPutHeader" 24 141 1 "*"
C L "IPPutHeader" 24 141 1 "*"
C L "IPPutHeader" 24 141 1 "*"
C L "IPPutHeader" 24 141 1 "*"
C L "IPPutHeader" 24 141 1 "*"
D G "IPPutArray" 24 156 "(a, b)    MACPutArray(a, b)"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
F G "IPGetHeader" 24 187 "int8()"
V L "localIP" 24 187 "*IP_ADDR"
V L "remote" 24 188 "*NODE_INFO"
V L "protocol" 24 189 "*int8"
V L "len" 24 190 "*WORD" "* Macro:           IPDiscard()"
C L "IPGetHeader" 24 193 1 "*"
C L "IPGetHeader" 24 193 1 "*"
C L "IPGetHeader" 24 193 1 "*"
C L "IPGetHeader" 24 193 1 "*"
C L "IPGetHeader" 24 193 1 "*"
D G "IPDiscard" 24 208 "()         MACDiscard()"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
D G "IPGetArray" 24 227 "(a, b)    MACGetArray(a, b)"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
F G "IPSetRxBuffer" 24 248 "void()"
V L "Offset" 24 248 "WORD" "This is left shifted by 4.  Actual value is 0x04."
D G "IPv4" 23 55 " (0x40u)"
D G "IP_VERSION" 23 56 "IPv4"
D G "debug_ip" 23 58 ""
D G "IP_IHL" 23 64 " (0x05)"
D G "IP_SERVICE_NW_CTRL" 23 66 " (0x07)"
D G "IP_SERVICE_IN_CTRL" 23 67 " (0x06)"
D G "IP_SERVICE_ECP" 23 68 " (0x05)"
D G "IP_SERVICE_OVR" 23 69 " (0x04)"
D G "IP_SERVICE_FLASH" 23 70 " (0x03)"
D G "IP_SERVICE_IMM" 23 71 " (0x02)"
D G "IP_SERVICE_PRIOR" 23 72 " (0x01)"
D G "IP_SERVICE_ROUTINE" 23 73 " (0x00)"
D G "IP_SERVICE_N_DELAY" 23 75 " (0x00)"
D G "IP_SERCICE_L_DELAY" 23 76 " (0x08)"
D G "IP_SERVICE_N_THRPT" 23 77 " (0x00)"
D G "IP_SERVICE_H_THRPT" 23 78 " (0x10)"
D G "IP_SERVICE_N_RELIB" 23 79 " (0x00)"
D G "IP_SERVICE_H_RELIB" 23 80 " (0x20)"
D G "IP_SERVICE" 23 82 " (IP_SERVICE_ROUTINE | IP_SERVICE_N_DELAY)"
D G "MY_IP_TTL" 23 84 " (100)" "Time-To-Live in Seconds"
V G "_Identifier" 23 89 "WORD"
V G "IPHeaderLen" 23 90 "int8"
F G "SwapIPHeader" 23 92 "void()"
V L "h" 23 92 "*IP_HEADER" "* Function:        BOOL IPGetHeader( IP_ADDR    *localIP,"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
F G "IPGetHeader" 23 123 "int8()"
V L "localIP" 23 123 "*IP_ADDR"
V L "remote" 23 124 "*NODE_INFO"
V L "protocol" 23 125 "*int8"
V L "len" 23 126 "*WORD"
V L "CalcChecksum" 23 128 "WORD_VAL"
V L "header" 23 129 "IP_HEADER"
C L "IPGetHeader" 23 97 1 "FUNCTION"
C L "IPGetHeader" 23 97 1 "FUNCTION"
C L "IPGetHeader" 23 97 4 "FUNCTION"
C L "IPGetHeader" 23 97 1 "FUNCTION"
C L "IPGetHeader" 23 97 2 "FUNCTION"
C L "IPGetHeader" 23 97 1 "FUNCTION"
C L "IPGetHeader" 23 97 2 "FUNCTION"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
F G "IPPutHeader" 23 238 "WORD(*int8 protocol,*WORD len)"
V L "remote" 23 238 "*NODE_INFO"
V L "protocol" 23 239 "int8"
V L "len" 23 240 "WORD"
V L "header" 23 242 "IP_HEADER"
C L "IPPutHeader" 23 220 1 "FUNCTION"
C L "IPPutHeader" 23 220 1 "FUNCTION"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
F G "IPSetRxBuffer" 23 294 "void(int8 protocol,WORD len)"
V L "Offset" 23 294 "WORD"
F G "SwapIPHeader" 23 301 "void(WORD Offset,WORD len)"
V L "h" 23 301 "*IP_HEADER"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
D G "TCP_H" 26 40 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
T G "TCP_SOCKET" 26 45 "int8"
T G "TCP_PORT" 26 46 "WORD" "* Maximum number of times a connection be retried before"
D G "MAX_RETRY_COUNTS" 26 56 " (3)"
D G "INVALID_SOCKET" 26 58 " (0xfe)"
D G "UNKNOWN_SOCKET" 26 59 " (0xff)"
D G "REMOTE_HOST" 26 61 "(s)      (TCB[s].remote)"
C G "" 26 63 1 "*"
E G "TCP_LISTEN" 26 69 "0"
E G "TCP_SYN_SENT" 26 70 "1"
E G "TCP_SYN_RECEIVED" 26 71 "2"
E G "TCP_ESTABLISHED" 26 72 "3"
E G "TCP_FIN_WAIT_1" 26 73 "4"
E G "TCP_FIN_WAIT_2" 26 74 "5"
E G "TCP_CLOSING" 26 75 "6"
E G "TCP_TIME_WAIT" 26 76 "7"
E G "TCP_CLOSE_WAIT" 26 77 "8"
E G "TCP_LAST_ACK" 26 78 "9"
E G "TCP_CLOSED" 26 79 "10"
T G "TCP_STATE" 26 79 "_TCP_STATE" "* Socket info."
C G "" 26 81 1 "*"
T G "SOCKET_INFO" 26 115 "{TCP_STATE smState,NODE_INFO remote,TCP_PORT localPort,TCP_PORT remotePort,BUFFER TxBuffer,WORD TxCount,WORD RxCount,WORD RemoteWindow,DWORD SND_SEQ,DWORD SND_ACK,int8 RetryCount,TICKTYPE startTick,TICKTYPE TimeOut}" "* Function:        void TCPInit(void)"
C L "TCPInit" 26 117 1 "*"
C L "TCPInit" 26 117 1 "*"
C L "TCPInit" 26 117 1 "*"
C L "TCPInit" 26 117 1 "*"
C L "TCPInit" 26 117 1 "*"
C L "TCPInit" 26 117 1 "*"
C L "TCPInit" 26 117 1 "*"
F G "TCPInit" 26 133 "void()"
C L "TCPInit" 26 137 1 "*"
C L "TCPInit" 26 137 1 "*"
C L "TCPInit" 26 137 1 "*"
C L "TCPInit" 26 137 1 "*"
C L "TCPInit" 26 137 1 "*"
C L "TCPInit" 26 137 1 "*"
C L "TCPInit" 26 137 1 "*"
C L "TCPInit" 26 137 1 "*"
F G "TCPListen" 26 153 "TCP_SOCKET()"
V L "port" 26 153 "TCP_PORT" "* Function:        TCP_SOCKET TCPConnect(NODE_INFO* remote,"
C L "TCPListen" 26 157 1 "*"
C L "TCPListen" 26 157 1 "*"
C L "TCPListen" 26 157 1 "*"
C L "TCPListen" 26 157 1 "*"
C L "TCPListen" 26 157 1 "*"
C L "TCPListen" 26 157 1 "*"
C L "TCPListen" 26 157 1 "*"
C L "TCPListen" 26 157 1 "*"
F G "TCPConnect" 26 174 "TCP_SOCKET()"
V L "remote" 26 174 "*NODE_INFO"
V L "port" 26 174 "TCP_PORT" "* Function:        BOOL TCPIsConnected(TCP_SOCKET s)"
C L "TCPConnect" 26 177 1 "*"
C L "TCPConnect" 26 177 1 "*"
C L "TCPConnect" 26 177 1 "*"
C L "TCPConnect" 26 177 1 "*"
C L "TCPConnect" 26 177 1 "*"
C L "TCPConnect" 26 177 1 "*"
C L "TCPConnect" 26 177 1 "*"
C L "TCPConnect" 26 177 1 "*"
C L "TCPConnect" 26 177 1 "*"
C L "TCPConnect" 26 177 1 "*"
F G "TCPIsConnected" 26 196 "int8()"
V L "s" 26 196 "TCP_SOCKET" "* Function:        void TCPDisconnect(TCP_SOCKET s)"
C L "TCPIsConnected" 26 199 1 "*"
C L "TCPIsConnected" 26 199 1 "*"
C L "TCPIsConnected" 26 199 1 "*"
C L "TCPIsConnected" 26 199 1 "*"
C L "TCPIsConnected" 26 199 1 "*"
C L "TCPIsConnected" 26 199 1 "*"
C L "TCPIsConnected" 26 199 1 "*"
F G "TCPDisconnect" 26 215 "void()"
V L "s" 26 215 "TCP_SOCKET" "* Function:        BOOL TCPIsPutReady(TCP_SOCKET s)"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
C L "TCPDisconnect" 26 218 1 "*"
F G "TCPIsPutReady" 26 240 "int8()"
V L "s" 26 240 "TCP_SOCKET" "* Function:        BOOL TCPPut(TCP_SOCKET s, BYTE byte)"
C L "TCPIsPutReady" 26 243 1 "*"
C L "TCPIsPutReady" 26 243 1 "*"
C L "TCPIsPutReady" 26 243 1 "*"
C L "TCPIsPutReady" 26 243 1 "*"
C L "TCPIsPutReady" 26 243 1 "*"
C L "TCPIsPutReady" 26 243 1 "*"
C L "TCPIsPutReady" 26 243 1 "*"
C L "TCPIsPutReady" 26 243 1 "*"
F G "TCPPut" 26 260 "int8()"
V L "socket" 26 260 "TCP_SOCKET"
V L "data" 26 260 "int8" "* Function:        BOOL TCPFlush(TCP_SOCKET s)"
C L "TCPPut" 26 263 1 "*"
C L "TCPPut" 26 263 1 "*"
C L "TCPPut" 26 263 1 "*"
C L "TCPPut" 26 263 1 "*"
C L "TCPPut" 26 263 1 "*"
C L "TCPPut" 26 263 1 "*"
C L "TCPPut" 26 263 1 "*"
F G "TCPFlush" 26 279 "int8()"
V L "socket" 26 279 "TCP_SOCKET" "* Function:        BOOL TCPIsGetReady(TCP_SOCKET s)"
C L "TCPFlush" 26 281 1 "*"
C L "TCPFlush" 26 281 1 "*"
C L "TCPFlush" 26 281 1 "*"
C L "TCPFlush" 26 281 1 "*"
C L "TCPFlush" 26 281 1 "*"
C L "TCPFlush" 26 281 1 "*"
C L "TCPFlush" 26 281 1 "*"
F G "TCPIsGetReady" 26 297 "int8()"
V L "s" 26 297 "TCP_SOCKET" "* Function:        BOOL TCPGet(TCP_SOCKET s, BYTE *byte)"
C L "TCPIsGetReady" 26 300 1 "*"
C L "TCPIsGetReady" 26 300 1 "*"
C L "TCPIsGetReady" 26 300 1 "*"
C L "TCPIsGetReady" 26 300 1 "*"
C L "TCPIsGetReady" 26 300 1 "*"
C L "TCPIsGetReady" 26 300 1 "*"
C L "TCPIsGetReady" 26 300 1 "*"
C L "TCPIsGetReady" 26 300 1 "*"
C L "TCPIsGetReady" 26 300 1 "*"
F G "TCPGet" 26 318 "int8()"
V L "socket" 26 318 "TCP_SOCKET"
V L "data" 26 318 "*int8" "* Function:        WORD TCPGetArray(TCP_SOCKET s, BYTE *buffer,"
C L "TCPGet" 26 321 1 "*"
C L "TCPGet" 26 321 1 "*"
C L "TCPGet" 26 321 1 "*"
C L "TCPGet" 26 321 1 "*"
C L "TCPGet" 26 321 1 "*"
C L "TCPGet" 26 321 1 "*"
C L "TCPGet" 26 321 1 "*"
C L "TCPGet" 26 321 1 "*"
C L "TCPGet" 26 321 1 "*"
C L "TCPGet" 26 321 1 "*"
F G "TCPGetArray" 26 340 "WORD()"
V L "s" 26 340 "TCP_SOCKET"
V L "buff" 26 340 "*int8"
V L "count" 26 340 "WORD" "* Function:        BOOL TCPDiscard(TCP_SOCKET s)"
C L "TCPGetArray" 26 343 1 "*"
C L "TCPGetArray" 26 343 1 "*"
C L "TCPGetArray" 26 343 1 "*"
C L "TCPGetArray" 26 343 1 "*"
C L "TCPGetArray" 26 343 1 "*"
C L "TCPGetArray" 26 343 1 "*"
C L "TCPGetArray" 26 343 1 "*"
C L "TCPGetArray" 26 343 1 "*"
F G "TCPDiscard" 26 360 "int8()"
V L "socket" 26 360 "TCP_SOCKET" "* Function:        BOOL TCPProcess(NODE_INFO* remote,"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
C L "TCPDiscard" 26 363 1 "*"
F G "TCPProcess" 26 383 "int8()"
V L "remote" 26 383 "*NODE_INFO"
V L "localIP" 26 384 "*IP_ADDR"
V L "len" 26 385 "WORD" "* Function:        void TCPTick(void)"
C L "TCPProcess" 26 388 1 "*"
C L "TCPProcess" 26 388 1 "*"
C L "TCPProcess" 26 388 1 "*"
C L "TCPProcess" 26 388 1 "*"
C L "TCPProcess" 26 388 1 "*"
C L "TCPProcess" 26 388 1 "*"
C L "TCPProcess" 26 388 1 "*"
F G "TCPTick" 26 404 "void()"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
C L "TCPTick" 12 1 1 "*"
D G "debug_tcp" 25 81 "(a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u)"
D G "MAX_TCP_DATA_LEN" 25 86 " (MAC_TX_BUFFER_SIZE - 54)"
D G "TCP_START_TIMEOUT_VAL" 25 89 " (TICKS_PER_SECOND * (TICKTYPE)3)"
D G "FIN" 25 92 " (0x01)"
D G "SYN" 25 93 " (0x02)"
D G "RST" 25 94 " (0x04)"
D G "PSH" 25 95 " (0x08)"
D G "ACK" 25 96 " (0x10)"
D G "URG" 25 97 " (0x20)"
C L "TCPTick" 25 82 1 "FUNCTION"
T G "TCP_HEADER" 25 133 "{WORD SourcePort,WORD DestPort,DWORD SeqNumber,DWORD AckNumber}" "TCP Options as defined by RFC"
D G "TCP_OPTIONS_END_OF_LIST" 25 137 " (0x00)"
D G "TCP_OPTIONS_NO_OP" 25 138 " (0x01)"
D G "TCP_OPTIONS_MAX_SEG_SIZE" 25 139 " (0x02)"
T G "TCP_OPTIONS" 25 145 "{int8 Kind,int8 Length,WORD_VAL MaxSegSize}"
D G "SwapPseudoTCPHeader" 25 147 "(h)  (h.TCPLength = swaps(h.TCPLength))"
C L "TCPTick" 25 82 1 "FUNCTION"
T G "PSEUDO_HEADER" 25 157 "{IP_ADDR SourceAddress,IP_ADDR DestAddress,int8 Zero,int8 Protocol,WORD TCPLength}"
D G "LOCAL_PORT_START_NUMBER" 25 159 " (1024)"
D G "LOCAL_PORT_END_NUMBER" 25 160 " (5000)"
C L "TCPTick" 25 82 1 "FUNCTION"
V G "_NextPort" 25 163 "WORD"
C L "TCPTick" 25 82 12 "FUNCTION"
V G "TCB" 25 180 "SOCKET_INFO[5]" "#pragma udata bla   // Return to any other RAM section   //not needed in ccs"
F G "HandleTCPSeg" 25 183 "void()"
V L "s" 25 183 "TCP_SOCKET"
V L "remote" 25 184 "*NODE_INFO"
V L "h" 25 185 "*TCP_HEADER"
V L "len" 25 186 "WORD"
F G "TransmitTCP" 25 188 "void()"
V L "remote" 25 188 "*NODE_INFO"
V L "localPort" 25 189 "TCP_PORT"
V L "remotePort" 25 190 "TCP_PORT"
V L "tseq" 25 191 "DWORD"
V L "tack" 25 192 "DWORD"
V L "flags" 25 193 "int8"
V L "buff" 25 194 "BUFFER"
V L "len" 25 195 "WORD"
F G "FindMatching_TCP_Socket" 25 197 "TCP_SOCKET()"
V L "h" 25 197 "*TCP_HEADER"
V L "remote" 25 198 "*NODE_INFO"
F G "SwapTCPHeader" 25 199 "void()"
V L "header" 25 199 "*TCP_HEADER"
F G "CloseSocket" 25 200 "void()"
V L "ps" 25 200 "*SOCKET_INFO"
D G "SendTCP" 25 202 "(remote, localPort, remotePort, seq, ack, flags)              TransmitTCP(remote, localPort, remotePort, seq, ack, flags,                      INVALID_BUFFER, 0)"
C L "CloseSocket" 25 208 1 "*"
C L "CloseSocket" 25 208 1 "*"
C L "CloseSocket" 25 208 1 "*"
C L "CloseSocket" 25 208 1 "*"
C L "CloseSocket" 25 208 1 "*"
C L "CloseSocket" 25 208 1 "*"
C L "CloseSocket" 25 208 1 "*"
C L "CloseSocket" 25 208 1 "*"
V G "TCPInit_RandSeed" 25 224 "int16"
F G "TCPInit" 25 225 "void()"
V L "s" 25 227 "TCP_SOCKET"
V L "ps" 25 228 "*SOCKET_INFO" "Initialize all sockets."
C L "TCPInit" 25 208 1 "FUNCTION"
C L "TCPListen" 25 279 1 "*"
C L "TCPListen" 25 279 1 "*"
C L "TCPListen" 25 279 1 "*"
C L "TCPListen" 25 279 1 "*"
C L "TCPListen" 25 279 1 "*"
C L "TCPListen" 25 279 1 "*"
C L "TCPListen" 25 279 1 "*"
C L "TCPListen" 25 279 1 "*"
F G "TCPListen" 25 295 "TCP_SOCKET()"
V L "port" 25 295 "TCP_PORT"
V L "s" 25 297 "TCP_SOCKET"
V L "ps" 25 298 "*SOCKET_INFO"
C L "TCPListen" 25 279 2 "FUNCTION"
C L "TCPListen" 25 279 1 "FUNCTION"
C L "TCPListen" 25 279 1 "FUNCTION"
C L "TCPConnect" 25 341 1 "*"
C L "TCPConnect" 25 341 1 "*"
C L "TCPConnect" 25 341 1 "*"
C L "TCPConnect" 25 341 1 "*"
C L "TCPConnect" 25 341 1 "*"
C L "TCPConnect" 25 341 1 "*"
C L "TCPConnect" 25 341 1 "*"
C L "TCPConnect" 25 341 1 "*"
C L "TCPConnect" 25 341 1 "*"
F G "TCPConnect" 25 358 "TCP_SOCKET()"
V L "remote" 25 358 "*NODE_INFO"
V L "remotePort" 25 358 "TCP_PORT"
V L "s" 25 360 "TCP_SOCKET"
V L "ps" 25 361 "*SOCKET_INFO"
V L "lbFound" 25 362 "BOOL"
C L "TCPConnect" 25 341 1 "FUNCTION"
C L "TCPConnect" 25 341 1 "FUNCTION"
C L "TCPConnect" 25 341 2 "FUNCTION"
C L "TCPConnect" 25 341 1 "FUNCTION"
C L "TCPConnect" 25 341 1 "FUNCTION"
C L "TCPConnect" 25 341 2 "FUNCTION"
C L "TCPConnect" 25 341 1 "FUNCTION"
C L "TCPConnect" 25 341 1 "FUNCTION"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
C L "TCPIsConnected" 25 424 1 "*"
F G "TCPIsConnected" 25 443 "int8()"
V L "s" 25 443 "TCP_SOCKET"
C L "TCPDisconnect" 25 450 1 "*"
C L "TCPDisconnect" 25 450 1 "*"
C L "TCPDisconnect" 25 450 1 "*"
C L "TCPDisconnect" 25 450 1 "*"
C L "TCPDisconnect" 25 450 1 "*"
C L "TCPDisconnect" 25 450 1 "*"
C L "TCPDisconnect" 25 450 1 "*"
C L "TCPDisconnect" 25 450 1 "*"
F G "TCPDisconnect" 25 466 "void(TCP_SOCKET s)"
V L "s" 25 466 "TCP_SOCKET"
V L "ps" 25 468 "*SOCKET_INFO"
C L "TCPDisconnect" 25 450 3 "FUNCTION"
C L "TCPDisconnect" 25 450 1 "FUNCTION"
C L "TCPDisconnect" 25 450 1 "FUNCTION"
C L "TCPDisconnect" 25 450 1 "FUNCTION"
C L "TCPFlush" 25 500 1 "*"
C L "TCPFlush" 25 500 1 "*"
C L "TCPFlush" 25 500 1 "*"
C L "TCPFlush" 25 500 1 "*"
C L "TCPFlush" 25 500 1 "*"
C L "TCPFlush" 25 500 1 "*"
C L "TCPFlush" 25 500 1 "*"
C L "TCPFlush" 25 500 1 "*"
F G "TCPFlush" 25 516 "int8()"
V L "s" 25 516 "TCP_SOCKET"
V L "ps" 25 518 "*SOCKET_INFO"
C L "TCPFlush" 25 500 1 "FUNCTION"
C L "TCPFlush" 25 500 1 "FUNCTION"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
C L "TCPIsPutReady" 25 556 1 "*"
F G "TCPIsPutReady" 25 578 "int8()"
V L "s" 25 578 "TCP_SOCKET"
F G "TCPPutAvailable" 25 590 "int16(TCP_SOCKET s)"
V L "s" 25 590 "TCP_SOCKET"
V L "txCount" 25 592 "int16"
V L "txAvail" 25 592 "int16"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
C L "TCPPutArray" 25 609 1 "*"
F G "TCPPutArray" 25 629 "WORD()"
V L "s" 25 629 "TCP_SOCKET"
V L "ptr" 25 629 "*int8"
V L "len" 25 629 "WORD"
V L "ps" 25 631 "*SOCKET_INFO"
V L "n" 25 632 "WORD"
C L "TCPPutArray" 25 609 1 "FUNCTION"
C L "TCPPutArray" 25 609 1 "FUNCTION"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
C L "TCPPut" 25 674 1 "*"
F G "TCPPut" 25 693 "int8()"
V L "s" 25 693 "TCP_SOCKET"
V L "byte" 25 693 "int8"
V L "ps" 25 695 "*SOCKET_INFO"
V L "tempCount" 25 696 "WORD"
C L "TCPPut" 25 674 1 "FUNCTION"
C L "TCPPut" 25 674 1 "FUNCTION"
C L "TCPDiscard" 25 732 1 "*"
C L "TCPDiscard" 25 732 1 "*"
C L "TCPDiscard" 25 732 1 "*"
C L "TCPDiscard" 25 732 1 "*"
C L "TCPDiscard" 25 732 1 "*"
C L "TCPDiscard" 25 732 1 "*"
C L "TCPDiscard" 25 732 1 "*"
C L "TCPDiscard" 25 732 1 "*"
C L "TCPDiscard" 25 732 1 "*"
F G "TCPDiscard" 25 749 "int8()"
V L "s" 25 749 "TCP_SOCKET"
V L "ps" 25 751 "*SOCKET_INFO"
C L "TCPDiscard" 25 732 1 "FUNCTION"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
C L "TCPGetArray" 25 768 1 "*"
F G "TCPGetArray" 25 787 "WORD()"
V L "s" 25 787 "TCP_SOCKET"
V L "buff" 25 787 "*int8"
V L "count" 25 787 "WORD"
V L "ps" 25 789 "*SOCKET_INFO"
C L "TCPGetArray" 25 768 1 "FUNCTION"
C L "TCPGet" 25 813 1 "*"
C L "TCPGet" 25 813 1 "*"
C L "TCPGet" 25 813 1 "*"
C L "TCPGet" 25 813 1 "*"
C L "TCPGet" 25 813 1 "*"
C L "TCPGet" 25 813 1 "*"
C L "TCPGet" 25 813 1 "*"
C L "TCPGet" 25 813 1 "*"
C L "TCPGet" 25 813 1 "*"
C L "TCPGet" 25 813 1 "*"
F G "TCPGet" 25 831 "int8(*int8 buff,WORD count)"
V L "s" 25 831 "TCP_SOCKET"
V L "data" 25 831 "*int8"
V L "ps" 25 833 "*SOCKET_INFO"
C L "TCPGet" 25 813 2 "FUNCTION"
C L "TCPIsGetReady" 25 864 1 "*"
C L "TCPIsGetReady" 25 864 1 "*"
C L "TCPIsGetReady" 25 864 1 "*"
C L "TCPIsGetReady" 25 864 1 "*"
C L "TCPIsGetReady" 25 864 1 "*"
C L "TCPIsGetReady" 25 864 1 "*"
C L "TCPIsGetReady" 25 864 1 "*"
C L "TCPIsGetReady" 25 864 1 "*"
F G "TCPIsGetReady" 25 880 "int8(*int8 data)"
V L "s" 25 880 "TCP_SOCKET" "* A socket is said to be "Get" ready when it has already"
C L "TCPIsGetReady" 25 882 1 "*"
C L "TCPIsGetReady" 25 882 1 "*"
C L "TCPIsGetReady" 25 882 1 "*"
C L "TCPIsGetReady" 25 882 1 "*"
C L "DebugTCPDisplayState" 25 882 1 "FUNCTION"
F G "DebugTCPDisplayState" 25 894 "void(TCP_SOCKET s)"
V L "st" 25 894 "TCP_STATE"
C L "TCPTick" 25 913 1 "*"
C L "TCPTick" 25 913 1 "*"
C L "TCPTick" 25 913 1 "*"
C L "TCPTick" 25 913 1 "*"
C L "TCPTick" 25 913 1 "*"
C L "TCPTick" 25 913 1 "*"
C L "TCPTick" 25 913 1 "*"
C L "TCPTick" 25 913 1 "*"
F G "TCPTick" 25 929 "void()"
V L "s" 25 931 "TCP_SOCKET"
V L "diffTicks" 25 932 "TICKTYPE"
V L "tick" 25 933 "TICKTYPE"
V L "ps" 25 934 "*SOCKET_INFO"
V L "seq" 25 935 "DWORD"
V L "flags" 25 936 "int8" "BYTE debugLastState;"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 2 "FUNCTION"
C L "TCPTick" 25 913 3 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 2 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 2 "FUNCTION"
C L "TCPTick" 25 913 4 "FUNCTION"
C L "TCPTick" 25 913 3 "FUNCTION"
C L "TCPTick" 25 913 3 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 2 "FUNCTION"
C L "TCPTick" 25 913 2 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 1 "FUNCTION"
C L "TCPTick" 25 913 6 "FUNCTION"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
C L "TCPProcess" 25 1127 1 "*"
F G "TCPProcess" 25 1147 "int8()"
V L "remote" 25 1147 "*NODE_INFO"
V L "localIP" 25 1147 "*IP_ADDR"
V L "len" 25 1147 "WORD"
V L "TCPHeader" 25 1149 "TCP_HEADER"
V L "pseudoHeader" 25 1150 "PSEUDO_HEADER"
V L "socket" 25 1151 "TCP_SOCKET"
V L "checksum1" 25 1152 "WORD_VAL"
V L "checksum2" 25 1153 "WORD_VAL"
V L "optionsSize" 25 1154 "int8" "Calculate IP pseudoheader checksum."
C L "TCPProcess" 25 1127 2 "FUNCTION"
C L "TCPProcess" 25 1127 1 "FUNCTION"
C L "TCPProcess" 25 1127 1 "FUNCTION"
C L "TCPProcess" 25 1127 1 "FUNCTION"
C L "TCPProcess" 25 1127 1 "FUNCTION"
C L "TCPProcess" 25 1127 1 "FUNCTION"
C L "TCPProcess" 25 1127 3 "FUNCTION"
C L "TCPProcess" 25 1127 12 "FUNCTION"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
C L "TransmitTCP" 25 1225 1 "*"
F G "TransmitTCP" 25 1256 "void()"
V L "remote" 25 1256 "*NODE_INFO"
V L "localPort" 25 1257 "TCP_PORT"
V L "remotePort" 25 1258 "TCP_PORT"
V L "tseq" 25 1259 "DWORD"
V L "tack" 25 1260 "DWORD"
V L "flags" 25 1261 "int8"
V L "buff" 25 1262 "BUFFER"
V L "len" 25 1263 "WORD"
V L "checkSum" 25 1265 "WORD_VAL"
V L "header" 25 1266 "TCP_HEADER"
V L "options" 25 1267 "TCP_OPTIONS"
V L "pseudoHeader" 25 1268 "PSEUDO_HEADER" "Make sure that this Tx buffer isn't currently being transmitted"
C L "TransmitTCP" 25 1225 4 "FUNCTION"
C L "TransmitTCP" 25 1225 2 "FUNCTION"
C L "TransmitTCP" 25 1225 1 "FUNCTION"
C L "TransmitTCP" 25 1225 1 "FUNCTION"
C L "TransmitTCP" 25 1225 1 "FUNCTION"
C L "TransmitTCP" 25 1225 1 "FUNCTION"
C L "TransmitTCP" 25 1225 1 "FUNCTION"
C L "TransmitTCP" 25 1225 1 "FUNCTION"
C L "TransmitTCP" 25 1225 1 "FUNCTION"
C L "TransmitTCP" 25 1225 5 "FUNCTION"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
C L "FindMatching_TCP_Socket" 25 1393 1 "*"
F G "FindMatching_TCP_Socket" 25 1413 "TCP_SOCKET(DWORD tack,int8 flags,BUFFER buff,WORD len)"
V L "h" 25 1413 "*TCP_HEADER"
V L "remote" 25 1413 "*NODE_INFO"
V L "ps" 25 1415 "*SOCKET_INFO"
V L "s" 25 1416 "TCP_SOCKET"
V L "partialMatch" 25 1417 "TCP_SOCKET"
C L "FindMatching_TCP_Socket" 25 1393 1 "FUNCTION"
C L "FindMatching_TCP_Socket" 25 1393 2 "FUNCTION"
C L "SwapTCPHeader" 25 1462 1 "*"
C L "SwapTCPHeader" 25 1462 1 "*"
C L "SwapTCPHeader" 25 1462 1 "*"
C L "SwapTCPHeader" 25 1462 1 "*"
C L "SwapTCPHeader" 25 1462 1 "*"
C L "SwapTCPHeader" 25 1462 1 "*"
C L "SwapTCPHeader" 25 1462 1 "*"
F G "SwapTCPHeader" 25 1477 "void(WORD len)"
V L "header" 25 1477 "*TCP_HEADER"
C L "CloseSocket" 25 1490 1 "*"
C L "CloseSocket" 25 1490 1 "*"
C L "CloseSocket" 25 1490 1 "*"
C L "CloseSocket" 25 1490 1 "*"
C L "CloseSocket" 25 1490 1 "*"
C L "CloseSocket" 25 1490 1 "*"
C L "CloseSocket" 25 1490 1 "*"
C L "CloseSocket" 25 1490 1 "*"
C L "CloseSocket" 25 1490 1 "*"
F G "CloseSocket" 25 1507 "void(*TCP_HEADER header)"
V L "ps" 25 1507 "*SOCKET_INFO"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
C L "HandleTCPSeg" 25 1545 1 "*"
F G "HandleTCPSeg" 25 1568 "void(*SOCKET_INFO ps)"
V L "s" 25 1568 "TCP_SOCKET"
V L "remote" 25 1569 "*NODE_INFO"
V L "h" 25 1570 "*TCP_HEADER"
V L "len" 25 1571 "WORD"
V L "ack" 25 1573 "DWORD"
V L "seq" 25 1574 "DWORD"
V L "prevAck" 25 1575 "DWORD"
V L "prevSeq" 25 1575 "DWORD"
V L "ps" 25 1576 "*SOCKET_INFO"
V L "flags" 25 1577 "int8" "BYTE debugLastState;"
V L "temp" 25 1579 "sint32"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 5 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 3 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 3 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 3 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 3 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 4 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 6 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 2 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 1 "FUNCTION"
C L "HandleTCPSeg" 25 1545 7 "FUNCTION"
C L "HandleTCPSeg" 25 1545 6 "FUNCTION"
C L "HandleTCPSeg" 25 1545 6 "FUNCTION"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
D G "ICMP_H" 28 46 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "MAX_ICMP_DATA" 28 54 " (64)"
D G "MAX_ICMP_DATA_LEN" 28 56 " (MAX_ICMP_DATA)"
E G "ICMP_ECHO_REPLY" 28 62 "0"
E G "ICMP_ECHO_REQUEST" 28 63 "8"
T G "ICMP_CODE" 28 63 "_ICMP_CODE"
T G "ICMP_REQUESTS" 28 63 "_ICMP_CODE" "* Function:        BOOL ICMPIsTxReady()"
C G "" 28 66 1 "*"
C G "" 28 66 1 "*"
C G "" 28 66 1 "*"
C G "" 28 66 1 "*"
C G "" 28 66 1 "*"
D G "ICMPIsTxReady" 28 81 "()     MACIsTxReady(TRUE)"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
C L "ICMPPut" 28 84 1 "*"
F G "ICMPPut" 28 108 "void()"
V L "remote" 28 108 "*NODE_INFO"
V L "code" 28 109 "ICMP_CODE"
V L "data" 28 110 "*int8"
V L "len" 28 111 "int8"
V L "id" 28 112 "WORD"
V L "seq" 28 113 "WORD" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
C L "ICMPPut" 28 116 1 "*"
F G "ICMPGet" 28 140 "int8()"
V L "code" 28 140 "*ICMP_CODE"
V L "data" 28 141 "*int8"
V L "len" 28 142 "*int8"
V L "id" 28 143 "*WORD"
V L "seq" 28 144 "*WORD" "*                  IP Defs for Microchip TCP/IP Stack"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
D G "debug_icmp" 27 57 ""
C L "ICMPGet" 27 58 2 "FUNCTION"
C L "ICMPGet" 27 62 1 "*"
T G "ICMP_PACKET" 27 73 "{int8 Type,int8 Code,WORD Checksum,WORD Identifier,WORD SequenceNumber,int8[64] Data}"
D G "ICMP_HEADER_SIZE" 27 74 " (sizeof(ICMP_PACKET) - MAX_ICMP_DATA)"
F G "SwapICMPPacket" 27 76 "void()"
V L "p" 27 76 "*ICMP_PACKET" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
C L "SwapICMPPacket" 27 79 1 "*"
F G "ICMPGet" 27 103 "int8()"
V L "code" 27 103 "*ICMP_CODE"
V L "data" 27 104 "*int8"
V L "len" 27 105 "*int8"
V L "id" 27 106 "*WORD"
V L "seq" 27 107 "*WORD"
V L "packet" 27 109 "ICMP_PACKET"
V L "CalcChecksum" 27 110 "WORD"
V L "ReceivedChecksum" 27 111 "WORD"
C L "ICMPGet" 27 79 1 "FUNCTION"
C L "ICMPGet" 27 79 4 "FUNCTION"
C L "ICMPGet" 27 79 1 "FUNCTION"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
C L "ICMPPut" 27 158 1 "*"
F G "ICMPPut" 27 182 "void()"
V L "remote" 27 182 "*NODE_INFO"
V L "code" 27 183 "ICMP_CODE"
V L "data" 27 184 "*int8"
V L "len" 27 185 "int8"
V L "id" 27 186 "WORD"
V L "seq" 27 187 "WORD"
V L "packet" 27 189 "ICMP_PACKET"
V L "ICMPLen" 27 190 "WORD"
V L "MyTxBuffer" 27 191 "BUFFER"
C L "ICMPPut" 27 158 2 "FUNCTION"
C L "ICMPPut" 27 158 1 "FUNCTION"
C L "SwapICMPPacket" 27 236 1 "*"
C L "SwapICMPPacket" 27 236 1 "*"
C L "SwapICMPPacket" 27 236 1 "*"
C L "SwapICMPPacket" 27 236 1 "*"
C L "SwapICMPPacket" 27 236 1 "*"
C L "SwapICMPPacket" 27 236 1 "*"
C L "SwapICMPPacket" 27 236 1 "*"
F G "SwapICMPPacket" 27 251 "void(int8 len,WORD id,WORD seq)"
V L "p" 27 251 "*ICMP_PACKET"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
D G "debug_udp" 29 86 ""
C L "FindMatching_UDP_Socket" 29 87 1 "FUNCTION"
F G "FindMatching_UDP_Socket" 29 89 "UDP_SOCKET(*ICMP_PACKET p,WORD id,WORD seq)"
V L "h" 29 89 "*UDP_HEADER"
V L "remoteNode" 29 89 "*NODE_INFO"
V L "localIP" 29 89 "*IP_ADDR" "* Function:        void UDPInit(void)"
C L "FindMatching_UDP_Socket" 29 91 1 "*"
C L "FindMatching_UDP_Socket" 29 91 1 "*"
C L "FindMatching_UDP_Socket" 29 91 1 "*"
C L "FindMatching_UDP_Socket" 29 91 1 "*"
C L "FindMatching_UDP_Socket" 29 91 1 "*"
C L "FindMatching_UDP_Socket" 29 91 1 "*"
F G "UDPInit" 29 106 "void()"
V L "s" 29 108 "UDP_SOCKET"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
C L "UDPOpen" 29 116 1 "*"
F G "UDPOpen" 29 142 "UDP_SOCKET()"
V L "localPort" 29 142 "UDP_PORT"
V L "remoteNode" 29 143 "*NODE_INFO"
V L "remotePort" 29 144 "UDP_PORT"
V L "s" 29 146 "UDP_SOCKET"
V L "p" 29 147 "*UDP_SOCKET_INFO"
C L "UDPOpen" 29 116 1 "FUNCTION"
C L "UDPOpen" 29 116 1 "FUNCTION"
C L "UDPOpen" 29 116 3 "FUNCTION"
C L "UDPClose" 29 186 1 "*"
C L "UDPClose" 29 186 1 "*"
C L "UDPClose" 29 186 1 "*"
C L "UDPClose" 29 186 1 "*"
C L "UDPClose" 29 186 1 "*"
C L "UDPClose" 29 186 1 "*"
C L "UDPClose" 29 186 1 "*"
C L "UDPClose" 29 186 1 "*"
C L "UDPClose" 29 186 1 "*"
F G "UDPClose" 29 203 "void(UDP_PORT remotePort)"
V L "s" 29 203 "UDP_SOCKET"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
C L "UDPPut" 29 211 1 "*"
F G "UDPPut" 29 236 "int8(UDP_SOCKET s)"
V L "v" 29 236 "int8"
V L "p" 29 238 "*UDP_SOCKET_INFO" "WORD temp;"
V L "tempOffset" 29 240 "WORD"
V L "tempCount" 29 241 "WORD"
C L "UDPPut" 29 211 3 "FUNCTION"
C L "UDPPut" 29 211 1 "FUNCTION"
C L "UDPPut" 29 211 5 "FUNCTION"
C L "UDPPut" 29 211 2 "FUNCTION"
D G "SIZEOF_MAC_HEADER" 29 291 " (14)"
D G "MAX_UDP_DATA" 29 298 " (MAC_TX_BUFFER_SIZE - sizeof(IP_HEADER) - sizeof(UDP_HEADER) )"
C L "UDPPut" 29 211 2 "FUNCTION"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
C L "UDPFlush" 29 317 1 "*"
F G "UDPFlush" 29 336 "void()"
V L "h" 29 338 "UDP_HEADER"
V L "p" 29 339 "*UDP_SOCKET_INFO" "Wait for TX hardware to become available (finish transmitting"
C L "UDPFlush" 29 317 1 "FUNCTION"
C L "UDPFlush" 29 317 1 "FUNCTION"
C L "UDPFlush" 29 371 1 "*"
C L "UDPFlush" 29 371 1 "FUNCTION"
C L "UDPFlush" 29 371 1 "FUNCTION"
C L "UDPFlush" 29 371 2 "FUNCTION"
C L "UDPFlush" 29 371 2 "FUNCTION"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
C L "UDPIsGetReady" 29 400 1 "*"
F G "UDPIsGetReady" 29 421 "int8()"
V L "s" 29 421 "UDP_SOCKET"
C L "UDPGet" 29 427 1 "*"
C L "UDPGet" 29 427 1 "*"
C L "UDPGet" 29 427 1 "*"
C L "UDPGet" 29 427 1 "*"
C L "UDPGet" 29 427 1 "*"
C L "UDPGet" 29 427 1 "*"
C L "UDPGet" 29 427 1 "*"
C L "UDPGet" 29 427 1 "*"
C L "UDPGet" 29 427 1 "*"
C L "UDPGet" 29 427 1 "*"
F G "UDPGet" 29 445 "int8(UDP_SOCKET s)"
V L "v" 29 445 "*int8" "CALLER MUST MAKE SURE THAT THERE IS ENOUGH DATA BYTE IN BUFFER"
C L "UDPGet" 29 427 2 "FUNCTION"
C L "UDPGet" 29 427 2 "FUNCTION"
C L "UDPDiscard" 29 475 1 "*"
C L "UDPDiscard" 29 475 1 "*"
C L "UDPDiscard" 29 475 1 "*"
C L "UDPDiscard" 29 475 1 "*"
C L "UDPDiscard" 29 475 1 "*"
C L "UDPDiscard" 29 475 1 "*"
C L "UDPDiscard" 29 475 1 "*"
C L "UDPDiscard" 29 475 1 "*"
F G "UDPDiscard" 29 491 "void(*int8 v)"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 501 1 "*"
C G "" 29 521 1 "*"
T G "UDP_PSEUDO_HEADER" 29 531 "{IP_ADDR SourceAddress,IP_ADDR DestAddress,int8 Zero,int8 Protocol,WORD Length}"
D G "SwapPseudoHeader" 29 533 "(h)  (h.Length = swaps(h.Length))"
F G "UDPProcess" 29 535 "int8()"
V L "remoteNode" 29 535 "*NODE_INFO"
V L "localIP" 29 535 "*IP_ADDR"
V L "len" 29 535 "WORD"
V L "h" 29 537 "UDP_HEADER"
V L "s" 29 538 "UDP_SOCKET"
V L "pseudoHeader" 29 539 "UDP_PSEUDO_HEADER"
V L "checksum" 29 540 "WORD_VAL" "* Retrieve UDP header."
C L "UDPProcess" 29 521 1 "FUNCTION"
C L "UDPProcess" 29 521 1 "FUNCTION"
C L "UDPProcess" 29 521 1 "FUNCTION"
C L "UDPProcess" 29 521 1 "FUNCTION"
C L "UDPProcess" 29 521 1 "FUNCTION"
C L "UDPProcess" 29 521 2 "FUNCTION"
C L "UDPProcess" 29 602 1 "*"
C L "UDPProcess" 29 602 1 "*"
C L "UDPProcess" 29 602 8 "FUNCTION"
C G "" 29 628 1 "*"
C G "" 29 628 1 "*"
C G "" 29 628 1 "*"
C G "" 29 628 1 "*"
C G "" 29 628 1 "*"
C G "" 29 628 1 "*"
C G "" 29 628 1 "*"
C G "" 29 628 1 "*"
C G "" 29 628 1 "*"
C G "" 29 628 1 "*"
D G "BROADCAST_ADDRESS" 29 647 " (0xffffffffL)"
F G "FindMatching_UDP_Socket" 29 648 "UDP_SOCKET()"
V L "h" 29 648 "*UDP_HEADER"
V L "remoteNode" 29 649 "*NODE_INFO"
V L "localIP" 29 650 "*IP_ADDR"
V L "s" 29 652 "UDP_SOCKET"
V L "partialMatch" 29 653 "UDP_SOCKET"
V L "p" 29 654 "*UDP_SOCKET_INFO"
C L "FindMatching_UDP_Socket" 29 661 1 "*"
C L "FindMatching_UDP_Socket" 29 661 1 "*"
C L "FindMatching_UDP_Socket" 29 661 1 "*"
C L "FindMatching_UDP_Socket" 29 661 1 "*"
C L "FindMatching_UDP_Socket" 29 661 1 "*"
C L "FindMatching_UDP_Socket" 29 661 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
D G "debug_dhcp" 30 79 "(a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u)"
D G "DHCP_TIMEOUT" 30 82 " (2 * TICKS_PER_SECOND)"
D G "DHCP_CLIENT_PORT" 30 85 " (68u)"
D G "DHCP_SERVER_PORT" 30 86 " (67u)"
D G "BOOT_REQUEST" 30 88 " (1u)"
D G "BOOT_REPLY" 30 89 " (2u)"
D G "HW_TYPE" 30 90 " (1u)"
D G "LEN_OF_HW_TYPE" 30 91 " (6u)"
D G "DHCP_MESSAGE_TYPE" 30 93 " (53u)"
D G "DHCP_MESSAGE_TYPE_LEN" 30 94 " (1u)"
D G "DHCP_UNKNOWN_MESSAGE" 30 96 " (0u)"
D G "DHCP_DISCOVER_MESSAGE" 30 98 " (1u)"
D G "DHCP_OFFER_MESSAGE" 30 99 " (2u)"
D G "DHCP_REQUEST_MESSAGE" 30 100 " (3u)"
D G "DHCP_DECLINE_MESSAGE" 30 101 " (4u)"
D G "DHCP_ACK_MESSAGE" 30 102 " (5u)"
D G "DHCP_NAK_MESSAGE" 30 103 " (6u)"
D G "DHCP_RELEASE_MESSAGE" 30 104 " (7u)"
D G "DHCP_SERVER_IDENTIFIER" 30 106 " (54u)"
D G "DHCP_SERVER_IDENTIFIER_LEN" 30 107 " (4u)"
D G "DHCP_PARAM_REQUEST_LIST" 30 109 " (55u)"
D G "DHCP_PARAM_REQUEST_LIST_LEN" 30 110 " (4u)"
D G "DHCP_PARAM_REQUEST_IP_ADDRESS" 30 111 " (50u)"
D G "DHCP_PARAM_REQUEST_IP_ADDRESS_LEN" 30 112 " (4u)"
D G "DHCP_SUBNET_MASK" 30 113 " (1u)"
D G "DHCP_ROUTER" 30 114 " (3u)"
D G "DHCP_DNS" 30 115 " (6u)"
D G "DHCP_HOST_NAME" 30 116 " (12u)"
D G "DHCP_IP_LEASE_TIME" 30 117 " (51u)"
D G "DHCP_END_OPTION" 30 118 " (255u)"
D G "HALF_HOUR" 30 120 " (WORD)((WORD)60 * (WORD)30)"
V G "DHCPSocket" 30 122 "UDP_SOCKET"
V G "DHCPServerID" 30 124 "DWORD_VAL"
V G "DHCPLeaseTime" 30 125 "DWORD_VAL"
V G "tempIPAddress" 30 127 "IP_ADDR"
V G "tempGateway" 30 128 "IP_ADDR"
V G "tempMask" 30 129 "IP_ADDR" "static BYTE tempHostName[16];"
V G "ValidValues" 30 146 "{}"
F G "_DHCPReceive" 30 148 "int8()"
F G "_DHCPSend" 30 149 "void()"
V L "messageType" 30 149 "int8"
V G "DHCPBindCount" 30 151 "int8"
D G "USARTPut" 30 155 "(a)"
F G "DHCPReset" 30 157 "void()"
C L "DHCPReset" 30 80 1 "FUNCTION"
F G "DebugDHCPDisplayState" 30 173 "void()"
V L "st" 30 173 "int8"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
C L "DHCPTask" 30 189 1 "*"
F G "DHCPTask" 30 220 "void()"
V L "DHCPServerNode" 30 222 "NODE_INFO"
V L "lastTryTick" 30 223 "TICKTYPE"
V L "DHCPRecvReturnValue" 30 224 "int8"
V L "tickDiff" 30 225 "TICKTYPE" "static int8 debugLastState;"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 2 "FUNCTION"
C L "DHCPTask" 30 189 3 "FUNCTION"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 3 "FUNCTION"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 7 "FUNCTION"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 1 "FUNCTION"
C L "DHCPTask" 30 189 2 "FUNCTION"
C L "DHCPTask" 30 189 2 "FUNCTION"
C L "DHCPTask" 30 189 2 "FUNCTION"
C L "DHCPTask" 30 189 6 "FUNCTION"
C L "_DHCPReceive" 30 189 32 "FUNCTION"
F G "_DHCPReceive" 30 433 "int8()"
V L "v" 30 435 "int8"
V L "i" 30 436 "int8"
V L "j" 30 436 "int8"
V L "type" 30 437 "int8"
V L "lbDone" 30 438 "BOOL"
V L "tempServerID" 30 439 "DWORD_VAL" "Assume unknown message until proven otherwise."
C L "_DHCPReceive" 30 189 2 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 3 "FUNCTION"
C L "_DHCPReceive" 30 189 2 "FUNCTION"
C L "_DHCPReceive" 30 189 2 "FUNCTION"
C L "_DHCPReceive" 30 189 2 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 17 "FUNCTION"
C L "_DHCPReceive" 30 189 2 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 2 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 2 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
C L "_DHCPReceive" 30 189 2 "FUNCTION"
C L "_DHCPReceive" 30 189 1 "FUNCTION"
F G "_DHCPSend" 30 716 "void()"
V L "messageType" 30 716 "int8"
V L "i" 30 718 "int8"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 2 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 1 "FUNCTION"
C L "_DHCPSend" 30 189 8 "FUNCTION"
C L "_DHCPSend" 30 189 3 "FUNCTION"
C L "_DHCPSend" 30 189 2 "FUNCTION"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 31 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
D G "ARP_H" 32 44 ""
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "ARP_REPLY" 32 52 " (0x00)"
D G "ARP_REQUEST" 32 53 " (0x01)"
D G "ARP_UNKNOWN" 32 54 " (0x02)"
C L "ARPGet" 32 57 1 "*"
C L "ARPGet" 32 57 1 "*"
C L "ARPGet" 32 57 1 "*"
C L "ARPGet" 32 57 1 "*"
C L "ARPGet" 32 57 1 "*"
C L "ARPGet" 32 57 1 "*"
C L "ARPGet" 32 57 1 "*"
C L "ARPGet" 32 57 1 "*"
C L "ARPGet" 32 57 1 "*"
F G "ARPGet" 32 74 "int8()"
V L "remote" 32 74 "*NODE_INFO"
V L "opCode" 32 74 "*int8" "* Macro:           ARPIsRxReady()"
C L "ARPGet" 32 77 1 "*"
C L "ARPGet" 32 77 1 "*"
C L "ARPGet" 32 77 1 "*"
C L "ARPGet" 32 77 1 "*"
C L "ARPGet" 32 77 1 "*"
C L "ARPGet" 32 77 1 "*"
D G "ARPIsTxReady" 32 93 "()      MACIsTxReady(TRUE)"
C L "ARPGet" 32 97 1 "*"
C L "ARPGet" 32 97 1 "*"
C L "ARPGet" 32 97 1 "*"
C L "ARPGet" 32 97 1 "*"
C L "ARPGet" 32 97 1 "*"
C L "ARPGet" 32 97 1 "*"
C L "ARPGet" 32 97 1 "*"
C L "ARPGet" 32 97 1 "*"
F G "ARPPut" 32 113 "int8()"
V L "remote" 32 113 "*NODE_INFO"
V L "opCode" 32 113 "int8" "*                  ARP Server Defs for Microchip TCP/IP Stack"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
C L "ARPPut" 33 1 1 "*"
D G "ARP_TSK_H" 33 45 ""
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 2 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 3 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 12 1 1 "*"
C L "ARPPut" 33 51 1 "*"
C L "ARPPut" 33 51 1 "*"
C L "ARPPut" 33 51 1 "*"
C L "ARPPut" 33 51 1 "*"
C L "ARPPut" 33 51 1 "*"
C L "ARPPut" 33 51 1 "*"
C L "ARPPut" 33 51 1 "*"
F G "ARPInit" 33 66 "void()"
C L "ARPInit" 33 69 1 "*"
C L "ARPInit" 33 69 1 "*"
C L "ARPInit" 33 69 1 "*"
C L "ARPInit" 33 69 1 "*"
C L "ARPInit" 33 69 1 "*"
C L "ARPInit" 33 69 1 "*"
C L "ARPInit" 33 69 1 "*"
F G "ARPProcess" 33 84 "int8()"
C L "ARPProcess" 33 87 1 "*"
C L "ARPProcess" 33 87 1 "*"
C L "ARPProcess" 33 87 1 "*"
C L "ARPProcess" 33 87 1 "*"
C L "ARPProcess" 33 87 1 "*"
C L "ARPProcess" 33 87 1 "*"
C L "ARPProcess" 33 87 1 "*"
F G "ARPResolve" 33 102 "void()"
V L "IPAddr" 33 102 "*IP_ADDR" "* Function:        BOOL ARPIsResolved(IP_ADDR* IPAddr,"
C L "ARPResolve" 33 105 1 "*"
C L "ARPResolve" 33 105 1 "*"
C L "ARPResolve" 33 105 1 "*"
C L "ARPResolve" 33 105 1 "*"
C L "ARPResolve" 33 105 1 "*"
C L "ARPResolve" 33 105 1 "*"
C L "ARPResolve" 33 105 1 "*"
C L "ARPResolve" 33 105 1 "*"
C L "ARPResolve" 33 105 1 "*"
F G "ARPIsResolved" 33 123 "int8()"
V L "IPAddr" 33 123 "*IP_ADDR"
V L "MACAddr" 33 123 "*MAC_ADDR"
D G "debug_arptask" 31 56 ""
C L "ARPIsResolved" 31 57 1 "FUNCTION"
C L "ARPIsResolved" 31 59 1 "*"
E G "SM_ARP_IDLE" 31 65 "0"
E G "SM_ARP_REPLY" 31 66 "1"
T G "ARP_STATE" 31 66 "_ARP_STATE" "* This ARP task caches one ARP response."
V G "smARP" 31 72 "ARP_STATE"
V G "Cache" 31 74 "NODE_INFO" "* Function:        void ARPInit(void)"
C L "ARPIsResolved" 31 77 1 "*"
C L "ARPIsResolved" 31 77 1 "*"
C L "ARPIsResolved" 31 77 1 "*"
C L "ARPIsResolved" 31 77 1 "*"
C L "ARPIsResolved" 31 77 1 "*"
C L "ARPIsResolved" 31 77 1 "*"
F G "ARPInit" 31 92 "void()"
C L "ARPProcess" 31 108 1 "*"
C L "ARPProcess" 31 108 1 "*"
C L "ARPProcess" 31 108 1 "*"
C L "ARPProcess" 31 108 1 "*"
C L "ARPProcess" 31 108 1 "*"
C L "ARPProcess" 31 108 1 "*"
C L "ARPProcess" 31 108 1 "*"
F G "ARPProcess" 31 123 "int8()"
V L "remoteNode" 31 125 "NODE_INFO"
V L "opCode" 31 126 "int8"
C L "ARPProcess" 31 108 2 "FUNCTION"
C L "ARPResolve" 31 160 1 "*"
C L "ARPResolve" 31 160 1 "*"
C L "ARPResolve" 31 160 1 "*"
C L "ARPResolve" 31 160 1 "*"
C L "ARPResolve" 31 160 1 "*"
C L "ARPResolve" 31 160 1 "*"
F G "ARPResolve" 31 173 "void()"
V L "IPAddr" 31 173 "*IP_ADDR"
V L "remoteNode" 31 175 "NODE_INFO"
C L "ARPIsResolved" 31 184 1 "*"
C L "ARPIsResolved" 31 184 1 "*"
C L "ARPIsResolved" 31 184 1 "*"
C L "ARPIsResolved" 31 184 1 "*"
C L "ARPIsResolved" 31 184 1 "*"
C L "ARPIsResolved" 31 184 1 "*"
C L "ARPIsResolved" 31 184 1 "*"
C L "ARPIsResolved" 31 184 1 "*"
C L "ARPIsResolved" 31 184 1 "*"
C L "ARPIsResolved" 31 184 1 "*"
F G "ARPIsResolved" 31 202 "int8()"
V L "IPAddr" 31 202 "*IP_ADDR"
V L "MACAddr" 31 202 "*MAC_ADDR"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 34 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 2 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "debug_arp" 34 53 ""
D G "ARP_OPERATION_REQ" 34 57 "0x01u"
D G "ARP_OPERATION_RESP" 34 58 "0x02u"
D G "HW_ETHERNET" 34 61 " (0x0001u)"
D G "ARP_IP" 34 62 " (0x0800u)"
T G "ARP_PACKET" 34 78 "{WORD HardwareType,WORD Protocol,int8 MACAddrLen,int8 ProtocolLen,WORD Operation,MAC_ADDR SenderMACAddr,IP_ADDR SenderIPAddr,MAC_ADDR TargetMACAddr,IP_ADDR TargetIPAddr}" "Helper function"
F G "SwapARPPacket" 34 81 "void()"
V L "p" 34 81 "*ARP_PACKET" "* Function:        BOOL ARPGet(NODE_INFO* remote, BYTE* opCode)"
C L "SwapARPPacket" 34 84 1 "*"
C L "SwapARPPacket" 34 84 1 "*"
C L "SwapARPPacket" 34 84 1 "*"
C L "SwapARPPacket" 34 84 1 "*"
C L "SwapARPPacket" 34 84 1 "*"
C L "SwapARPPacket" 34 84 1 "*"
C L "SwapARPPacket" 34 84 1 "*"
C L "SwapARPPacket" 34 84 1 "*"
F G "ARPGet" 34 101 "int8()"
V L "remote" 34 101 "*NODE_INFO"
V L "opCode" 34 101 "*int8"
V L "packet" 34 103 "ARP_PACKET" "MACGetArray((int8*)&packet, sizeof(packet));"
C L "ARPPut" 34 144 1 "*"
C L "ARPPut" 34 144 1 "*"
C L "ARPPut" 34 144 1 "*"
C L "ARPPut" 34 144 1 "*"
C L "ARPPut" 34 144 1 "*"
C L "ARPPut" 34 144 1 "*"
C L "ARPPut" 34 144 1 "*"
C L "ARPPut" 34 144 1 "*"
C L "ARPPut" 34 144 1 "*"
F G "ARPPut" 34 161 "int8()"
V L "remote" 34 161 "*NODE_INFO"
V L "opCode" 34 161 "int8"
V L "packet" 34 163 "ARP_PACKET"
V L "MyTxBuffer" 34 165 "BUFFER"
C L "ARPPut" 34 144 1 "FUNCTION"
C L "ARPPut" 34 144 2 "FUNCTION"
C L "ARPPut" 34 144 1 "FUNCTION"
C L "SwapARPPacket" 34 222 1 "*"
C L "SwapARPPacket" 34 222 1 "*"
C L "SwapARPPacket" 34 222 1 "*"
C L "SwapARPPacket" 34 222 1 "*"
C L "SwapARPPacket" 34 222 1 "*"
C L "SwapARPPacket" 34 222 1 "*"
C L "SwapARPPacket" 34 222 1 "*"
F G "SwapARPPacket" 34 237 "void()"
V L "p" 34 237 "*ARP_PACKET"
C L "HTTP_Init" 35 3 101 "FUNCTION"
C L "HTTP_Init" 22 2 15 "FUNCTION"
F G "HTTP_Init" 22 45 "void(*ARP_PACKET p)"
F G "HTTP_Task" 22 46 "void(*ARP_PACKET p)"
C L "HTTP_Task" 22 48 4 "*"
F G "http_get_page" 22 57 "int32(*ARP_PACKET p)"
V L "file_str" 22 57 "*int8"
F G "http_format_char" 22 60 "int8(*int8 file_str)"
V L "file" 22 60 "int32"
V L "id" 22 60 "int8"
V L "str" 22 60 "*int8"
V L "max_ret" 22 60 "int8"
F G "http_exec_cgi" 22 61 "void(int32 file,int8 id,*int8 str,int8 max_ret)"
V L "file" 22 61 "int32"
V L "key" 22 61 "*int8"
V L "val" 22 61 "*int8" "**** CALLBACKS END ******///"
D G "debug_http" 35 135 "(a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u)"
V G "http_404_error" 35 137 "int8[1]"
V G "http_500_error" 35 138 "int8[1]"
C L "http_exec_cgi" 35 134 1 "FUNCTION"
F G "http_parse_cgi_str" 35 141 "void()"
V L "file" 35 141 "int32"
V L "cgistr" 35 141 "*int8"
V G "http_socket" 35 143 "int8[1]"
E G "HTTP_DISABLED" 35 147 "255"
E G "HTTP_IGNORE" 35 148 "256"
E G "HTTP_LISTEN_WAIT" 35 149 "257"
E G "HTTP_CONNECTED" 35 150 "258"
E G "HTTP_GET_HEADERS" 35 151 "259"
E G "HTTP_GET_POST" 35 152 "260"
E G "HTTP_GET_POST_CONTINUE" 35 153 "261"
E G "HTTP_SEND_RESPONSE" 35 154 "262"
E G "HTTP_SEND_RESPONSE_CONTINUE" 35 155 "263"
E G "HTTP_CLOSE" 35 156 "264"
E G "HTTP_CLOSE_WAITING" 35 157 "265"
E G "HTTP_CLOSED" 35 158 "266"
V G "http_state" 35 158 "[1]"
C L "http_parse_cgi_str" 35 134 3 "FUNCTION"
F G "http_escape_chars" 35 163 "*int8()"
V L "str" 35 163 "*int8"
V L "ostr" 35 165 "*int8"
V L "new" 35 166 "int8[3]"
V L "c" 35 167 "int8"
V L "val" 35 168 "int8"
F G "http_parse_cgi_string" 35 192 "void()"
V L "file" 35 192 "int32"
V L "ptr" 35 192 "*int8"
V L "pKey" 35 194 "*int8"
V L "pValue" 35 194 "*int8"
V L "c" 35 194 "int8"
V G "_httpPutcSocket" 35 222 "int8"
D G "tcp_http_tx_left" 35 224 "()  TCPPutAvailable(_httpPutcSocket)"
F G "set_tcp_http_putc" 35 226 "void()"
V L "newSocket" 35 226 "int8"
F G "tcp_http_putc" 35 231 "int8()"
V L "c" 35 231 "int8"
V G "lastHTTPPutConstPos" 35 236 "int32[1]"
V G "lastHTTPPutVarPos" 35 237 "*int8[1]"
D G "TCPPutFileChunkStart" 35 251 "(x)"
D G "TCPPutFileChunkStop" 35 252 "()"
E G "TCP_PUT_CONST_EC_FINISH" 35 258 "0"
E G "TCP_PUT_CONST_EC_CONTINUE" 35 259 "1"
E G "TCP_PUT_CONST_EC_ESCAPE" 35 260 "2"
T G "TCP_PUT_CONST_EC" 35 260 "" "TCPPutFileVarChunk(ptr)"
C L "TCPPutFileVarChunk" 35 134 9 "FUNCTION"
F G "TCPPutFileVarChunk" 35 279 "TCP_PUT_CONST_EC()"
V L "retPtr" 35 279 "*int16"
V L "txLeft" 35 281 "int16"
V L "n" 35 281 "int16"
V L "ptr" 35 282 "*int8"
V L "ec" 35 282 "int8"
C L "TCPPutFileParseConst" 35 134 9 "FUNCTION"
F G "TCPPutFileParseConst" 35 345 "int8()"
V L "retAddy" 35 345 "*int32"
V L "n" 35 345 "*int16"
V L "doSend" 35 345 "int8"
V L "stopC" 35 347 "int8"
V L "checkC" 35 347 "int8"
V L "fileSize" 35 348 "int16"
V L "max" 35 348 "int16"
V L "addy" 35 349 "int32"
V L "premature" 35 350 "int1"
C L "TCPPutFileParseConst" 35 134 1 "FUNCTION"
C L "TCPPutFileParseConst" 35 134 1 "FUNCTION"
C L "TCPPutFileConstChunk" 35 134 9 "FUNCTION"
F G "TCPPutFileConstChunk" 35 418 "TCP_PUT_CONST_EC()"
V L "retAddy" 35 418 "*int32"
V L "stopC" 35 420 "int8"
V L "addy" 35 421 "int32"
V L "fileSize" 35 422 "int16"
V L "txLeft" 35 422 "int16"
V L "ec" 35 423 "TCP_PUT_CONST_EC"
C L "TCPPutFileConstChunk" 35 134 1 "FUNCTION"
C L "TCPPutFileConstChunk" 35 134 3 "FUNCTION"
F G "TCPPutFileConstGetEscape" 35 473 "int8()"
V L "addy" 35 473 "int32"
V L "ret" 35 483 "int8"
F G "tcp_http_put_file" 35 490 "int8()"
V L "which" 35 490 "int8"
V L "errorCode" 35 490 "int16"
V L "file" 35 490 "int32"
V L "contentType" 35 490 "*int8"
V L "str" 35 492 "int8[40]"
V L "socket" 35 493 "int8"
V L "ec" 35 494 "int8"
V L "escaped" 35 495 "int8"
V L "HTTP_PUT_FILE_INIT" 35 500 "0"
V L "HTTP_PUT_FILE_CONTINUE" 35 501 "1"
V L "HTTP_PUT_FILE_CHUNK_END" 35 502 "2"
V L "HTTP_PUT_FILE_DONE" 35 503 "3"
V L "status" 35 503 ""
C L "HTTP_Init" 35 134 1 "FUNCTION"
F G "HTTP_Init" 35 607 "void()"
V L "i" 35 608 "int8"
F G "HTTP_Task" 35 632 "void()"
V L "tokens_header" 35 633 "int8[1]"
V L "tokens_get" 35 634 "int8[1]"
V L "http_get_str" 35 635 "int8[1]"
V L "http_post_str" 35 636 "int8[1]"
V L "http_len_str" 35 637 "int8[1]"
C L "HTTP_Task" 35 134 2 "FUNCTION"
V L "buffer" 35 641 "int8[1][254]"
V L "i" 35 643 "int8[1]"
V L "HTTP_REQ_GET" 35 644 "1"
V L "HTTP_REQ_POST" 35 644 "2"
V L "HTTP_REQ_UNKOWN" 35 644 "0"
V L "http_cmd" 35 644 "[1]"
V L "http_page_req" 35 645 "int32[1]"
V L "http_post_len" 35 646 "int16[1]"
V L "http_timer" 35 647 "int16[1]"
V L "doneSend" 35 652 "int1"
V L "postContinue" 35 652 "int1"
V L "c" 35 654 "int8"
V L "pKey" 35 654 "*int8"
V L "pValue" 35 654 "*int8"
V L "hs" 35 655 "int8"
V L "currSocket" 35 655 "int8"
C L "HTTP_Task" 35 134 1 "FUNCTION"
C L "HTTP_Task" 35 134 2 "FUNCTION"
C L "HTTP_Task" 35 134 1 "FUNCTION"
C L "HTTP_Task" 35 134 1 "FUNCTION"
C L "HTTP_Task" 35 134 1 "FUNCTION"
C L "HTTP_Task" 35 134 3 "FUNCTION"
C L "HTTP_Task" 35 134 1 "FUNCTION"
C L "HTTP_Task" 35 134 1 "FUNCTION"
C L "HTTP_Task" 35 134 1 "FUNCTION"
C L "HTTP_Task" 35 134 2 "FUNCTION"
C L "HTTP_Task" 35 134 4 "FUNCTION"
C L "HTTP_Task" 35 134 8 "FUNCTION"
C L "HTTP_Task" 35 134 3 "FUNCTION"
C L "HTTP_Task" 35 134 1 "FUNCTION"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
C G "" 36 3 1 "*"
D G "ANNONCE_H" 36 38 ""
C L "InitAnnounce" 36 3 5 "FUNCTION"
F G "InitAnnounce" 36 51 "void()"
V L "c" 36 51 "int8" "AnnounceEnable()"
C L "InitAnnounce" 36 3 2 "FUNCTION"
F G "AnnounceEnable" 36 59 "void()"
C L "AnnounceEnable" 36 3 2 "FUNCTION"
F G "AnnounceDisable" 36 66 "void()"
C L "AnnounceDisable" 37 1 1 "FUNCTION"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 37 3 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 38 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
C L "AnnounceDisable" 18 1 1 "*"
D G "STACK_USE_ANNOUNCE_REPEAT" 37 45 "TRUE"
D G "STACK_ANNOUNCE_RATE" 37 49 "5" "every 5 seconds"
D G "ANNOUNCE_STR_MAX_SIZE" 37 53 "30"
D G "STACK_ANNOUNCE_PORT" 37 57 "6123"
V G "g_AnnounceMessage" 37 60 "int8[30]"
V G "g_AnnounceEnabled" 37 61 "int1"
V G "g_AnnounceTick" 37 62 "TICKTYPE"
F G "AnnounceEnable" 37 68 "void()"
F G "AnnounceDisable" 37 77 "void()"
F G "InitAnnounce" 37 82 "void()"
V L "c" 37 82 "int8"
V L "i" 37 84 "int8"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
C L "AnnounceIP" 37 95 1 "*"
F G "AnnounceIP" 37 121 "int8()"
V L "MySocket" 37 123 "UDP_SOCKET"
V L "Remote" 37 124 "NODE_INFO"
C L "AnnounceIP" 37 95 1 "FUNCTION"
C L "AnnounceIP" 37 95 3 "FUNCTION"
C L "AnnounceIP" 37 95 1 "FUNCTION"
C L "AnnounceIP" 37 95 1 "FUNCTION"
C L "AnnounceIP" 37 95 4 "FUNCTION"
C L "AnnounceIP" 37 95 1 "FUNCTION"
C L "AnnounceIP" 37 95 1 "FUNCTION"
C L "AnnounceTask" 37 95 4 "FUNCTION"
F G "AnnounceTask" 37 177 "void()"
V L "currTick" 37 179 "TICKTYPE"
C G "" 2 212 1 "*"
E G "SM_STACK_IDLE" 2 218 "0"
E G "SM_STACK_MAC" 2 219 "1"
E G "SM_STACK_IP" 2 220 "2"
E G "SM_STACK_ICMP" 2 221 "3"
E G "SM_STACK_ICMP_REPLY" 2 222 "4"
E G "SM_STACK_ARP" 2 223 "5"
E G "SM_STACK_TCP" 2 224 "6"
E G "SM_STACK_UDP" 2 225 "7"
T G "SM_STACK" 2 225 "_SM_STACK"
V G "smStack" 2 227 "SM_STACK"
V G "remoteNode" 2 229 "NODE_INFO" "* Function:        void StackInit(void)"
C L "StackInit" 2 232 1 "*"
C L "StackInit" 2 232 1 "*"
C L "StackInit" 2 232 1 "*"
C L "StackInit" 2 232 1 "*"
C L "StackInit" 2 232 1 "*"
C L "StackInit" 2 232 1 "*"
F G "StackInit" 2 247 "void()"
C L "StackInit" 2 252 1 "*"
C L "StackInit" 2 252 1 "*"
D G "DebugDisplayVals" 2 318 "()"
C L "StackTask" 2 320 1 "*"
C L "StackTask" 2 320 1 "*"
C L "StackTask" 2 320 1 "*"
C L "StackTask" 2 320 1 "*"
C L "StackTask" 2 320 1 "*"
C L "StackTask" 2 320 1 "*"
C L "StackTask" 2 320 1 "*"
C L "StackTask" 2 320 1 "*"
C L "StackTask" 2 320 1 "*"
C L "StackTask" 2 320 1 "*"
F G "StackTask" 2 339 "void()"
V L "dataCount" 2 341 "WORD"
V L "data" 2 344 "int8[64]"
V L "ICMPId" 2 345 "WORD"
V L "ICMPSeq" 2 346 "WORD"
V L "tempLocalIP" 2 348 "IP_ADDR"
V L "type" 2 358 "{int8 MACFrameType,int8 IPFrameType,ICMP_CODE ICMPCode}"
V L "lbContinue" 2 361 "BOOL"
C L "StackTask" 2 320 4 "FUNCTION"
C L "StackTask" 2 320 1 "FUNCTION"
C L "StackTask" 2 320 1 "FUNCTION"
C L "StackTask" 2 584 1 "*"
C L "StackTask" 2 584 1 "*"
C L "StackTask" 2 584 1 "*"
C L "StackTask" 2 584 1 "*"
D G "ANALOG_PORT_CONFIG" 39 56 "AN0"
D G "ADC_CHAN_0" 39 57 "0"
D G "USER_BUTTON1" 39 58 "PIN_A4"
D G "BUTTON_PRESSED" 39 59 "(p)  (!input(p))"
D G "USER_LED1" 39 60 "PIN_A5"
D G "USER_LED2" 39 61 "PIN_B4"
D G "USER_LED3" 39 62 "PIN_B5"
D G "STACK_USE_EEPROM" 39 144 "TRUE"
V G "lcd_io" 40 46 "{int4 empty,int4 data}"
V G "lcd_lat" 40 46 "{int4 empty,int4 data}"
V G "lcd_tris" 40 46 "{int4 empty,int4 data}"
D G "lcd_type" 40 56 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "lcd_line_two" 40 57 "0x40" "LCD RAM address for the second line"
V G "LCD_INIT_STRING" 40 60 "int8[4]"
C L "lcd_read_byte" 40 2 4 "FUNCTION"
F G "lcd_read_byte" 40 69 "int8()"
V L "low" 40 70 "int8"
V L "high" 40 70 "int8"
C L "lcd_read_byte" 40 2 1 "FUNCTION"
C L "lcd_read_byte" 40 2 1 "FUNCTION"
F G "lcd_send_nibble" 40 88 "void()"
V L "n" 40 88 "int8"
F G "lcd_send_byte" 40 97 "void()"
V L "address" 40 97 "int8"
V L "n" 40 97 "int8"
F G "lcd_init" 40 112 "void()"
V L "i" 40 113 "int8"
C L "lcd_init" 40 2 1 "FUNCTION"
F G "lcd_gotoxy" 40 131 "void()"
V L "x" 40 131 "int8"
V L "y" 40 131 "int8"
V L "address" 40 132 "int8"
F G "lcd_putc" 40 142 "void()"
V L "c" 40 142 "int8"
F G "lcd_getc" 40 153 "int8()"
V L "x" 40 153 "int8"
V L "y" 40 153 "int8"
V L "value" 40 154 "int8"
C L "lcd_getc" 40 2 1 "FUNCTION"
D G "EEPROM_SELECT" 39 189 "PIN_B3"
D G "EEPROM_DI" 39 190 "PIN_C5"
D G "EEPROM_DO" 39 191 "PIN_C4"
D G "EEPROM_CLK" 39 192 "PIN_C3"
D G "EEPROM_USE_SPI" 39 193 "ENC_MAC_USE_SPI"
D G "EEPROM_ADDRESS" 41 48 "long"
F G "init_ext_eeprom" 41 54 "void()"
V L "i" 41 55 "int1"
C L "init_ext_eeprom" 41 2 1 "FUNCTION"
F G "ext_eeprom_ready" 41 63 "int8()"
V L "cmd" 41 64 "int8[1]"
V L "i" 41 64 "int8"
V L "data" 41 64 "int8"
C L "ext_eeprom_ready" 41 2 1 "FUNCTION"
C L "ext_eeprom_ready" 41 2 1 "FUNCTION"
C L "ext_eeprom_ready" 41 2 1 "FUNCTION"
C L "ext_eeprom_ready" 41 2 1 "FUNCTION"
C L "ext_eeprom_ready" 41 2 1 "FUNCTION"
F G "write_ext_eeprom" 41 86 "void()"
V L "address" 41 86 "int16"
V L "data" 41 86 "int8"
V L "cmd" 41 88 "int8[4]"
V L "i" 41 89 "int8"
C L "write_ext_eeprom" 41 2 1 "FUNCTION"
C L "write_ext_eeprom" 41 2 1 "FUNCTION"
C L "write_ext_eeprom" 41 2 1 "FUNCTION"
C L "write_ext_eeprom" 41 2 1 "FUNCTION"
C L "write_ext_eeprom" 41 2 1 "FUNCTION"
C L "write_ext_eeprom" 41 2 1 "FUNCTION"
C L "write_ext_eeprom" 41 2 1 "FUNCTION"
C L "write_ext_eeprom" 41 2 1 "FUNCTION"
C L "write_ext_eeprom" 41 2 1 "FUNCTION"
F G "read_ext_eeprom" 41 117 "int8()"
V L "address" 41 117 "int16"
V L "i" 41 118 "int8"
V L "data" 41 118 "int8"
V L "cmd" 41 119 "int8[3]"
C L "read_ext_eeprom" 41 2 1 "FUNCTION"
C L "read_ext_eeprom" 41 2 1 "FUNCTION"
C L "read_ext_eeprom" 41 2 1 "FUNCTION"
C L "read_ext_eeprom" 41 2 1 "FUNCTION"
C L "read_ext_eeprom" 41 2 1 "FUNCTION"
C L "read_ext_eeprom" 41 2 1 "FUNCTION"
D G "EE_ISP_PHONENUMBER" 39 241 "0" "size=64"
D G "EE_ISP_USERNAME" 39 242 "64" "size=64"
D G "EE_ISP_PASSWORD" 39 243 "128" "size=64"
D G "EE_NIC_DHCP" 39 245 "192" "size=1"
D G "EE_NIC_GATEWAY" 39 246 "193" "size=4"
D G "EE_NIC_IP" 39 247 "197" "size=4"
D G "EE_NIC_NETMASK" 39 248 "201" "size=4"
D G "EE_NIC_MAC" 39 249 "205" "size=6"
D G "EE_DNS" 39 250 "211" "size=4"
D G "EE_SMTP_PORT" 39 252 "215" "size=2   [TCP Port]"
D G "EE_SMTP_HOSTNAME" 39 253 "217" "size=64  [E-mail SMTP server hostname]"
D G "EE_SMTP_TO" 39 254 "281" "size=64  [E-mail To address]"
D G "EE_SMTP_FROM" 39 255 "345" "size=64  [E-mail From address]"
D G "EE_SMTP_SUBJECT" 39 256 "409" "size=64  [E-mail Subject]"
D G "EE_SMTP_BODY" 39 257 "473" "size=64  [E-mail Body]"
D G "EE_UDP_DEST_IP" 39 259 "537" "size=4   [destination IP address for UDP example]"
D G "EE_UDP_DEST_PORT" 39 260 "541" "size=2   [destination port for UDP example]"
D G "EE_UDP_SRC_PORT" 39 261 "543" "size=2    [source port for UDP example]"
D G "EE_MAGIC" 39 263 "545"
D G "EE_LAST" 39 264 "546"
D G "EE_MAX" 39 265 "0x7FFF"
D G "MPFS_START_POSITION" 39 267 "EE_LAST+2"
C L "display_ip_lcd" 39 240 3 "FUNCTION"
F G "display_ip_lcd" 39 302 "void()"
C L "write_ext_eeprom_string" 39 240 2 "FUNCTION"
F G "write_ext_eeprom_string" 39 375 "void()"
V L "address" 39 375 "int16"
V L "str" 39 375 "*int8"
F G "write_ext_eeprom16" 39 384 "void()"
V L "address" 39 384 "int16"
V L "data" 39 384 "int16"
F G "read_ext_eeprom16" 39 390 "int16()"
V L "address" 39 390 "int16"
V L "result" 39 396 "{int8[2] b,int16 val}"
F G "read_ext_eeprom_string" 39 404 "void()"
V L "address" 39 404 "int16"
V L "str" 39 404 "*int8"
V L "max" 39 404 "int8"
V L "c" 39 405 "int8"
F G "read_ext_eeprom_ip" 39 414 "void()"
V L "address" 39 414 "int16"
V L "ip" 39 414 "*IP_ADDR"
V L "temp" 39 415 "IP_ADDR"
F G "write_ext_eeprom_ip" 39 423 "void()"
V L "address" 39 423 "int16"
V L "ip" 39 423 "*IP_ADDR"
V L "temp" 39 424 "IP_ADDR"
C L "clear_ee" 39 240 1 "FUNCTION"
F G "clear_ee" 39 433 "void()"
V L "i" 39 434 "int16"
F G "init_eeprom_defaults" 39 472 "void()"
C L "init" 39 240 1 "FUNCTION"
F G "init" 39 498 "void()"
C L "init" 39 240 1 "FUNCTION"
C L "init" 39 240 3 "FUNCTION"
C L "init" 39 240 1 "FUNCTION"
F G "set_port_bit" 39 731 "int8()"
V L "ptr" 39 731 "*int8"
V L "fullPin" 39 731 "int16"
V L "new" 39 731 "int8"
V L "port" 39 733 "int8"
V L "pin" 39 733 "int8"
V L "old" 39 734 "int1"
F G "get_port_bit" 39 754 "int8()"
V L "ptr" 39 754 "*int8"
V L "fullPin" 39 754 "int16"
V L "port" 39 756 "int8"
V L "pin" 39 756 "int8"
D G "set_tris_variable" 39 770 "(fullPin, new) set_port_bit(0xF92, fullPin, new)"
D G "set_lat_variable" 39 771 "(fullPin, new) set_port_bit(0xF89, fullPin, new)"
D G "input_variable" 39 772 "(fullPin) get_port_bit(0xF80, fullPin)"
D G "output_float_variable" 39 779 "(x) set_tris_variable(x,1)"
D G "output_drive_variable" 39 780 "(x) set_tris_variable(x,0)"
D G "output_low_variable" 39 782 "(x) set_lat_variable(x,0)"
D G "output_high_variable" 39 783 "(x) set_lat_variable(x,1)"
F G "get_pin_string" 39 785 "void()"
V L "fullPin" 39 785 "int16"
V L "str" 39 785 "*int8"
V L "port" 39 787 "int8"
V L "pin" 39 787 "int8"
F G "hardware_io_test_pin" 39 799 "int8()"
V L "pin1" 39 799 "int16"
V L "pin2" 39 799 "int16"
V L "fail" 39 801 "int8"
V L "str" 39 802 "int8[8]"
V L "oldTRIS1" 39 803 "int1"
V L "oldTRIS2" 39 803 "int1"
V L "oldLAT1" 39 803 "int1"
V L "oldLAT2" 39 803 "int1"
F G "hardware_test" 39 854 "void()"
V L "fail_nic" 39 856 "int1"
V L "fail_ee" 39 856 "int1"
V L "fail_pins" 39 857 "int1"
C L "ui_disp_ip_user" 42 2 24 "FUNCTION"
F G "ui_disp_ip_user" 42 32 "void()"
V L "ip" 42 32 "*IP_ADDR"
F G "ui_disp_mac_user" 42 36 "void()"
V L "mac" 42 36 "*MAC_ADDR"
F G "ui_settings" 42 48 "void()"
V L "disp" 42 50 "int1"
F G "fget_string" 42 136 "void()"
V L "s" 42 136 "*int8"
V L "max" 42 136 "int8"
V L "len" 42 137 "int8"
V L "c" 42 138 "int8"
C L "fget_string" 42 2 1 "FUNCTION"
F G "fget_int" 42 169 "int8()"
V L "initial" 42 169 "int8"
V L "s" 42 170 "int8[4]"
V L "i" 42 171 "sint8"
F G "fget_long" 42 181 "int16()"
V L "initial" 42 181 "int16"
V L "s" 42 182 "int8[6]"
V L "i" 42 183 "int16"
F G "fgethex" 42 193 "int8()"
V L "initial" 42 193 "int8"
V L "hex" 42 194 "int8[5]"
V L "ret" 42 195 "int8"
F G "ui_ip_to_ee" 42 207 "void()"
V L "address" 42 207 "int16"
V L "ip" 42 208 "IP_ADDR"
V L "i" 42 209 "int8"
F G "ui_setup" 42 247 "void()"
V L "dhcp" 42 248 "int8"
V L "i" 42 249 "int8"
V L "addy" 42 250 "int16"
F G "ui_menu" 42 361 "void()"
F G "ui_handle" 42 403 "void()"
V L "c" 42 405 "int8"
C G "" 0 200 14 "*"
V G "HTML_INDEX_PAGE" 0 216 "int8[1]"
V G "HTML_ANALOG_PAGE" 0 235 "int8[1]"
C G "" 0 247 1 "*"
V G "g_HTTPMessageStack" 0 249 "int8[20]"
V G "g_HTTPLCDMessage" 0 250 "int8[20]"
V G "g_LEDState" 0 251 "int8[2]"
C L "http_get_page" 0 247 2 "FUNCTION"
F G "http_get_page" 0 255 "int32()"
V L "file_str" 0 255 "*int8"
V L "file_loc" 0 257 "int32"
V L "index" 0 258 "int8[1]"
V L "about" 0 259 "int8[1]"
C L "http_format_char_checked" 0 247 2 "FUNCTION"
F G "http_format_char_checked" 0 272 "int8()"
V L "flag" 0 272 "int8"
V L "str" 0 272 "*int8"
V L "len" 0 274 "int8"
C L "http_format_char" 0 247 12 "FUNCTION"
F G "http_format_char" 0 297 "int8()"
V L "file" 0 297 "int32"
V L "id" 0 297 "int8"
V L "str" 0 297 "*int8"
V L "max_ret" 0 297 "int8"
V L "new_str" 0 298 "int8[25]"
V L "len" 0 299 "int8"
V L "i" 0 300 "int8"
C L "http_exec_cgi" 0 247 4 "FUNCTION"
F G "http_exec_cgi" 0 391 "void()"
V L "file" 0 391 "int32"
V L "key" 0 391 "*int8"
V L "val" 0 391 "*int8"
V L "led1_key" 0 392 "int8[1]"
V L "led2_key" 0 393 "int8[1]"
V L "lcd_key" 0 394 "int8[1]"
V L "msgStack_key" 0 395 "int8[1]"
V L "v" 0 396 "int8" "#if defined(USER_LED1)"
C L "http_exec_cgi" 0 247 2 "FUNCTION"
C L "http_exec_cgi" 0 247 1 "FUNCTION"
F G "splash" 0 427 "void()"
F G "main" 0 441 "void()"
C L "main" 0 247 1 "FUNCTION"
C L "main" 0 247 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
