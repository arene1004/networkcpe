D G "__PCH__" 0 0 ""4.100""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""08-Á.¤.-10""
D G "__TIME__" 0 0 ""19:04:24"" "Standard Header file for the PIC18F458 device ////////////////"
d G "PIN_A0" 2 22 "31744"
d G "PIN_A1" 2 23 "31745"
d G "PIN_A2" 2 24 "31746"
d G "PIN_A3" 2 25 "31747"
d G "PIN_A4" 2 26 "31748"
d G "PIN_A5" 2 27 "31749"
d G "PIN_A6" 2 28 "31750"
d G "PIN_B0" 2 30 "31752"
d G "PIN_B1" 2 31 "31753"
d G "PIN_B2" 2 32 "31754"
d G "PIN_B3" 2 33 "31755"
d G "PIN_B4" 2 34 "31756"
d G "PIN_B5" 2 35 "31757"
d G "PIN_B6" 2 36 "31758"
d G "PIN_B7" 2 37 "31759"
d G "PIN_C0" 2 39 "31760"
d G "PIN_C1" 2 40 "31761"
d G "PIN_C2" 2 41 "31762"
d G "PIN_C3" 2 42 "31763"
d G "PIN_C4" 2 43 "31764"
d G "PIN_C5" 2 44 "31765"
d G "PIN_C6" 2 45 "31766"
d G "PIN_C7" 2 46 "31767"
d G "PIN_D0" 2 48 "31768"
d G "PIN_D1" 2 49 "31769"
d G "PIN_D2" 2 50 "31770"
d G "PIN_D3" 2 51 "31771"
d G "PIN_D4" 2 52 "31772"
d G "PIN_D5" 2 53 "31773"
d G "PIN_D6" 2 54 "31774"
d G "PIN_D7" 2 55 "31775"
d G "PIN_E0" 2 57 "31776"
d G "PIN_E1" 2 58 "31777"
d G "PIN_E2" 2 59 "31778"
d G "FALSE" 2 62 "0"
d G "TRUE" 2 63 "1"
d G "BYTE" 2 65 "int8"
d G "BOOLEAN" 2 66 "int1"
d G "getc" 2 68 "getch"
d G "fgetc" 2 69 "getch"
d G "getchar" 2 70 "getch"
d G "putc" 2 71 "putchar"
d G "fputc" 2 72 "putchar"
d G "fgets" 2 73 "gets"
d G "fputs" 2 74 "puts"
d G "WDT_TIMEOUT" 2 80 "7"
d G "MCLR_FROM_SLEEP" 2 81 "11"
d G "MCLR_FROM_RUN" 2 82 "15"
d G "NORMAL_POWER_UP" 2 83 "12"
d G "BROWNOUT_RESTART" 2 84 "14"
d G "WDT_FROM_SLEEP" 2 85 "3"
d G "RESET_INSTRUCTION" 2 86 "0"
d G "T0_INTERNAL" 2 92 "0"
d G "T0_EXT_L_TO_H" 2 93 "32"
d G "T0_EXT_H_TO_L" 2 94 "48"
d G "T0_DIV_1" 2 96 "8"
d G "T0_DIV_2" 2 97 "0"
d G "T0_DIV_4" 2 98 "1"
d G "T0_DIV_8" 2 99 "2"
d G "T0_DIV_16" 2 100 "3"
d G "T0_DIV_32" 2 101 "4"
d G "T0_DIV_64" 2 102 "5"
d G "T0_DIV_128" 2 103 "6"
d G "T0_DIV_256" 2 104 "7"
d G "T0_OFF" 2 106 "0x80"
d G "T0_8_BIT" 2 108 "0x40"
d G "RTCC_INTERNAL" 2 110 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 2 111 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 2 112 "48"
d G "RTCC_DIV_1" 2 113 "8"
d G "RTCC_DIV_2" 2 114 "0"
d G "RTCC_DIV_4" 2 115 "1"
d G "RTCC_DIV_8" 2 116 "2"
d G "RTCC_DIV_16" 2 117 "3"
d G "RTCC_DIV_32" 2 118 "4"
d G "RTCC_DIV_64" 2 119 "5"
d G "RTCC_DIV_128" 2 120 "6"
d G "RTCC_DIV_256" 2 121 "7"
d G "RTCC_OFF" 2 122 "0x80"
d G "RTCC_8_BIT" 2 123 "0x40"
d G "WDT_ON" 2 134 "0x100"
d G "WDT_OFF" 2 135 "0"
d G "T1_DISABLED" 2 142 "0"
d G "T1_INTERNAL" 2 143 "0x85"
d G "T1_EXTERNAL" 2 144 "0x87"
d G "T1_EXTERNAL_SYNC" 2 145 "0x83"
d G "T1_CLK_OUT" 2 147 "8"
d G "T1_DIV_BY_1" 2 149 "0"
d G "T1_DIV_BY_2" 2 150 "0x10"
d G "T1_DIV_BY_4" 2 151 "0x20"
d G "T1_DIV_BY_8" 2 152 "0x30"
d G "T2_DISABLED" 2 157 "0"
d G "T2_DIV_BY_1" 2 158 "4"
d G "T2_DIV_BY_4" 2 159 "5"
d G "T2_DIV_BY_16" 2 160 "6"
d G "T3_DISABLED" 2 166 "0"
d G "T3_INTERNAL" 2 167 "0x85"
d G "T3_EXTERNAL" 2 168 "0x87"
d G "T3_EXTERNAL_SYNC" 2 169 "0x83"
d G "T3_DIV_BY_1" 2 171 "0"
d G "T3_DIV_BY_2" 2 172 "0x10"
d G "T3_DIV_BY_4" 2 173 "0x20"
d G "T3_DIV_BY_8" 2 174 "0x30"
d G "T3_CCP1_TO_2" 2 177 "0x48"
d G "T3_CCP2" 2 178 "0x8"
d G "CCP_OFF" 2 184 "0"
d G "CCP_CAPTURE_FE" 2 185 "4"
d G "CCP_CAPTURE_RE" 2 186 "5"
d G "CCP_CAPTURE_DIV_4" 2 187 "6"
d G "CCP_CAPTURE_DIV_16" 2 188 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 189 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 190 "9"
d G "CCP_COMPARE_INT" 2 191 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 192 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 193 "0xB"
d G "CCP_PWM" 2 194 "0xC"
d G "CCP_PWM_PLUS_1" 2 195 "0x1c"
d G "CCP_PWM_PLUS_2" 2 196 "0x2c"
d G "CCP_PWM_PLUS_3" 2 197 "0x3c"
d G "CCP_PWM_H_H" 2 203 "0x0c"
d G "CCP_PWM_H_L" 2 204 "0x0d"
d G "CCP_PWM_L_H" 2 205 "0x0e"
d G "CCP_PWM_L_L" 2 206 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 208 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 209 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 210 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 212 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 213 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 214 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 215 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 216 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 217 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 218 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 220 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 221 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 222 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 224 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 225 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 226 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 228 "0x80000000"
d G "PSP_ENABLED" 2 238 "0x10"
d G "PSP_DISABLED" 2 239 "0"
d G "SPI_MASTER" 2 246 "0x20"
d G "SPI_SLAVE" 2 247 "0x24"
d G "SPI_L_TO_H" 2 248 "0"
d G "SPI_H_TO_L" 2 249 "0x10"
d G "SPI_CLK_DIV_4" 2 250 "0"
d G "SPI_CLK_DIV_16" 2 251 "1"
d G "SPI_CLK_DIV_64" 2 252 "2"
d G "SPI_CLK_T2" 2 253 "3"
d G "SPI_SS_DISABLED" 2 254 "1"
d G "SPI_SAMPLE_AT_END" 2 256 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 257 "0x4000"
d G "UART_ADDRESS" 2 263 "2"
d G "UART_DATA" 2 264 "4"
d G "D1_D0_D3_D0" 2 268 "0x0Bff04"
d G "D1_D0_D3_D2_OUT_ON_E1_E2" 2 269 "0x0FF903"
d G "D1_D0_D3_D0_OUT_ON_E1_E2" 2 270 "0x0BF905"
d G "NC_NC_NC_NC" 2 271 "0x00ff07"
d G "D1_D0_D3_D2" 2 272 "0x0Fff02"
d G "D1_D0_NC_NC_OUT_ON_E1" 2 273 "0x03FD01"
d G "D1_VR_D3_VR" 2 274 "0x0Aff06"
d G "D0_VR_D2_VR" 2 275 "0x05ff0e"
d G "CP1_INVERT" 2 276 "0x0000010"
d G "CP2_INVERT" 2 277 "0x0000020"
d G "VREF_LOW" 2 285 "0xa0"
d G "VREF_HIGH" 2 286 "0x80"
d G "VREF_F5" 2 288 "0x40"
d G "VREF_COMP" 2 289 "0x10"
d G "LVD_LVDIN" 2 294 "0x1F"
d G "LVD_45" 2 295 "0x1E"
d G "LVD_42" 2 296 "0x1D"
d G "LVD_40" 2 297 "0x1C"
d G "LVD_38" 2 298 "0x1B"
d G "LVD_36" 2 299 "0x1A"
d G "LVD_35" 2 300 "0x19"
d G "LVD_33" 2 301 "0x18"
d G "LVD_30" 2 302 "0x17"
d G "LVD_28" 2 303 "0x16"
d G "LVD_27" 2 304 "0x15"
d G "LVD_25" 2 305 "0x14"
d G "LVD_23" 2 306 "0x13"
d G "LVD_21" 2 307 "0x12"
d G "LVD_19" 2 308 "0x11"
d G "OSC_TIMER1" 2 313 "1"
d G "OSC_NORMAL" 2 314 "0"
d G "ADC_OFF" 2 321 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 322 "0x10000"
d G "ADC_CLOCK_DIV_4" 2 323 "0x4000"
d G "ADC_CLOCK_DIV_8" 2 324 "0x0040"
d G "ADC_CLOCK_DIV_16" 2 325 "0x4040"
d G "ADC_CLOCK_DIV_32" 2 326 "0x0080"
d G "ADC_CLOCK_DIV_64" 2 327 "0x4080"
d G "ADC_CLOCK_INTERNAL" 2 328 "0x00c0" "Internal 2-6us"
d G "NO_ANALOGS" 2 331 "7" "None"
d G "ALL_ANALOG" 2 332 "0" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_AN1_AN2_AN4_AN5_AN6_AN7_VSS_VREF" 2 333 "1" "A0 A1 A2 A5 E0 E1 E2 VRefh=A3"
d G "AN0_AN1_AN2_AN3_AN4" 2 334 "2" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 2 335 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 2 336 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 2 337 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_AN5_AN6_AN7_VREF_VREF" 2 338 "0x08" "A0 A1 A5 E0 E1 E2 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN2_AN3_AN4_AN5" 2 339 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_AN1_AN2_AN4_AN5_VSS_VREF" 2 340 "0x0A" "A0 A1 A2 A5 E0 VRefh=A3"
d G "AN0_AN1_AN4_AN5_VREF_VREF" 2 341 "0x0B" "A0 A1 A5 E0 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN4_VREF_VREF" 2 342 "0x0C" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 2 343 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 2 344 "0x0E" "A0"
d G "AN0_VREF_VREF" 2 345 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 2 346 "0x1" "!old only provided for compatibility"
d G "A_ANALOG" 2 347 "0x2" "!old only provided for compatibility"
d G "A_ANALOG_RA3_REF" 2 348 "0x3" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 2 349 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 2 350 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 2 351 "0x8" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2" 2 352 "0x9" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3" 2 353 "0xA" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3_RA2" 2 354 "0xB" "!old only provided for compatibility"
d G "A_ANALOG_RA3_RA2_REF" 2 355 "0xC" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 2 356 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 2 357 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 2 358 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 2 362 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 363 "1"
d G "ADC_READ_ONLY" 2 364 "6"
d G "L_TO_H" 2 376 "0x40"
d G "H_TO_L" 2 377 "0"
d G "GLOBAL" 2 379 "0xF2C0"
d G "INT_RTCC" 2 380 "0x00F220"
d G "INT_TIMER0" 2 381 "0x00F220"
d G "INT_TIMER1" 2 382 "0x009D01"
d G "INT_TIMER2" 2 383 "0x009D02"
d G "INT_TIMER3" 2 384 "0x00A002"
d G "INT_EXT_L2H" 2 385 "0x5000F210"
d G "INT_EXT_H2L" 2 386 "0x6000F210"
d G "INT_EXT" 2 387 "0x00F210"
d G "INT_EXT1_L2H" 2 388 "0x5001F008"
d G "INT_EXT1_H2L" 2 389 "0x6001F008"
d G "INT_EXT1" 2 390 "0x00F008"
d G "INT_EXT2_L2H" 2 391 "0x5002F010"
d G "INT_EXT2_H2L" 2 392 "0x6002F010"
d G "INT_EXT2" 2 393 "0x00F010"
d G "INT_RB" 2 394 "0x00FFF208"
d G "INT_PSP" 2 395 "0x009D80"
d G "INT_AD" 2 396 "0x009D40"
d G "INT_RDA" 2 397 "0x009D20"
d G "INT_TBE" 2 398 "0x009D10"
d G "INT_SSP" 2 399 "0x009D08"
d G "INT_CCP1" 2 400 "0x009D04"
d G "INT_CCP2" 2 401 "0x00A001"
d G "INT_BUSCOL" 2 402 "0x00A008"
d G "INT_LOWVOLT" 2 403 "0x00A004"
d G "INT_CANIRX" 2 404 "0x00A380"
d G "INT_CANWAKE" 2 405 "0x00A340"
d G "INT_CANERR" 2 406 "0x00A320"
d G "INT_COMP" 2 407 "0x00A040"
d G "INT_EEPROM" 2 408 "0x00A010"
d G "INT_CANTX2" 2 409 "0x00A310"
d G "INT_CANTX1" 2 410 "0x00A308"
d G "INT_CANTX0" 2 411 "0x00A304"
d G "INT_CANRX1" 2 412 "0x00A302"
d G "INT_CANRX0" 2 413 "0x00A301"
D G "STACK_USE_CCS_PICNET" 0 87 "0" "PICNET rev 0-2 board sold by CCS.  Has a 56K modem and a 10BaseT Network IC and 18F6620"
D G "STACK_USE_CCS_PICNET3" 0 88 "0" "PICNET rv 3 and up board sold by CCS.  Has a 56K modem and a 10BaseT Network IC and 18F8622"
D G "STACK_USE_CCS_PICENS" 0 89 "1" "CCS PICENS (Embedded Ethernet) development kit.  18F4620 + ENC28J60"
D G "STACK_USE_CCS_PICEEC" 0 90 "0" "CCS PICEEC (Embedded Ethernet) development kit.  18F67J60"
D G "STACK_USE_CCS_EWL5V" 0 91 "0" "CCS 5V EZ Web Lynx Device"
D G "STACK_USE_CCS_EWL3V" 0 92 "0" "CCS 3.3V EZ Web Lynx Device"
D G "STACK_USE_MAC" 0 95 "1" "use the nic card"
D G "STACK_USE_PPP" 0 96 "0" "use PPP on modem"
D G "STACK_USE_SLIP" 0 97 "0" "use slip (NOT TESTED)"
D G "MPFS_USE_EEPROM" 0 101 ""
D G "STACK_USE_CCS_EWL" 0 110 "0"
D G "STACK_USE_PICDEM_LCD" 0 190 "TRUE"
D G "STACK_USE_DHCP" 0 195 "TRUE" "for auto resolution of IP address"
D G "STACK_USE_ARP" 0 196 "TRUE" "needed to resolve MAC addresses of IP addresses"
D G "STACK_USE_MCPENC" 0 200 "TRUE" "tell the stack to use the ENC28J60 driver"
D G "STACK_USE_MCPINC" 0 208 "FALSE"
D G "STACK_USE_ICMP" 0 211 "TRUE" "for ping"
D G "STACK_USE_UDP" 0 212 "TRUE"
D G "STACK_USE_IP_GLEANING" 0 213 "FALSE"
D G "debug_printf" 0 216 "printf"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
C G "" 3 1 1 "*"
D G "STACK_USE_FTP_SERVER" 3 63 "STACK_USE_FTP"
D G "STACK_INCLUDE" 3 65 ""
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
D G "STACK_TSK_H" 4 49 ""
D G "OUTPUT_DRIVE_MACRO" 4 55 "(x) bit_clear(*(x/8+18),x%8)"
D G "OUTPUT_FLOAT_MACRO" 4 63 "(x) bit_set(*(x/8+18),x%8)"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
C G "" 5 1 1 "*"
D G "COMPILER_H" 5 43 ""
C G "" 5 49 1 "*"
C G "" 5 111 1 "*"
C G "" 5 175 1 "*"
C G "" 5 238 1 "*"
C G "" 4 72 1 "*"
C G "" 4 72 1 "*"
C G "" 4 72 1 "*"
C G "" 4 72 1 "*"
C G "" 4 72 1 "*"
C G "" 4 72 2 "*"
C G "" 4 83 1 "*"
C G "" 4 83 1 "*"
C G "" 4 83 1 "*"
C G "" 4 83 1 "*"
C G "" 4 83 1 "*"
C G "" 4 83 1 "*"
C G "" 4 83 1 "*"
C G "" 4 83 1 "*"
C G "" 4 83 2 "*"
C G "" 4 96 1 "*"
C G "" 4 96 1 "*"
C G "" 4 96 1 "*"
C G "" 4 96 1 "*"
C G "" 4 96 1 "*"
D G "MPFS_START_POSITION" 4 107 "548"
D G "END_OF_MPFS_POINTER" 4 110 " (MPFS_START_POSITION)"
D G "MPFS_RESERVE_BLOCK" 4 111 " (END_OF_MPFS_POINTER+4)"
C G "" 4 113 1 "*"
C G "" 4 113 1 "*"
C G "" 4 113 1 "*"
C G "" 4 113 1 "*"
D G "STACK_USE_MAC" 4 135 "TRUE"
D G "STACK_USE_DNS" 4 162 "FALSE"
D G "STACK_USE_TELNET" 4 182 "FALSE"
D G "STACK_USE_HTTP" 4 186 "FALSE"
D G "STACK_USE_SMTP" 4 190 "FALSE"
D G "STACK_USE_SNMP" 4 194 "FALSE"
D G "STACK_USE_ANNOUNCE" 4 198 "FALSE"
D G "STACK_USE_TCP" 4 206 "FALSE"
D G "STACK_USE_MPFS" 4 214 "FALSE"
D G "STACK_USE_HTTP2" 4 218 "FALSE"
D G "STACK_USE_FAT" 4 222 "FALSE"
D G "STACK_USE_FTP" 4 226 "FALSE"
D G "STACK_USE_TFTP" 4 230 "FALSE"
D G "STACK_USE_TEMP" 4 234 "FALSE"
C G "" 4 237 1 "*"
D G "STACK_USE_UDP" 4 252 "TRUE"
C G "" 4 255 1 "*"
C G "" 4 265 1 "*"
C G "" 4 265 1 "*"
C G "" 4 265 1 "*"
D G "MCHP_MAC" 4 272 ""
C G "" 4 276 1 "*"
C G "" 4 276 1 "*"
C G "" 4 276 1 "*"
C G "" 4 276 1 "*"
C G "" 4 276 1 "*"
C G "" 4 276 1 "*"
C G "" 4 276 1 "*"
C G "" 4 276 1 "*"
C G "" 4 276 1 "*"
D G "___TCPIP_STACK_CONFIGURATION" 6 29 ""
D G "MODEM_DCD" 6 49 "PIN_G3"
D G "MODEM_RESET" 6 50 "PIN_G4"
D G "MODEM_TX" 6 51 "PIN_G1"
D G "MODEM_RX" 6 52 "PIN_G2"
D G "MODEM_INIT_STR" 6 53 ""ATM1L3&K0"" "speaker on, volume high, no hw flow control"
D G "MODEM_DIAL_STR" 6 54 ""ATDT""
D G "MODEM_BAUD_RATE" 6 55 "115200"
D G "MODEM_RESPONSE_TIMEOUT" 6 57 "2000" "time to wait for a response to an AT command (in ms)"
D G "MODEM_CONNECT_TIMEOUT" 6 58 "120000" "time to wait for modem to make a connection (in ms)"
D G "PIN_ENC_MAC_SO" 6 85 "PIN_C4" "PIC <<<< ENC"
D G "PIN_ENC_MAC_SI" 6 86 "PIN_C5" "PIC >>>> ENC"
D G "PIN_ENC_MAC_CLK" 6 87 "PIN_C3"
D G "PIN_ENC_MAC_CS" 6 88 "PIN_D1"
D G "PIN_ENC_MAC_RST" 6 89 "PIN_D0"
D G "PIN_ENC_MAC_INT" 6 90 "PIN_B0"
D G "PIN_ENC_MAC_WOL" 6 91 "PIN_B1"
D G "ENC_MAC_USE_SPI" 6 92 "TRUE" "due to an errata in the ENC28J60, you should always use HW SPI to assure that SPI clock is over 8MHz!"
D G "mac_enc_spi_tris_init" 6 93 "()  TRISB=(TRISB | 0b11); TRISC = (TRISC & 0b11010111) | 0x10; TRISD=TRISD & 0xF4" "was 0xFC"
D G "TCP_NO_WAIT_FOR_ACK" 6 115 "FALSE"
D G "MY_DEFAULT_IP_ADDR_BYTE1" 6 122 "10" "IP ADDRESS"
D G "MY_DEFAULT_IP_ADDR_BYTE2" 6 123 "10" "This unit's IP address."
D G "MY_DEFAULT_IP_ADDR_BYTE3" 6 124 "5"
D G "MY_DEFAULT_IP_ADDR_BYTE4" 6 125 "15"
D G "MY_DEFAULT_MASK_BYTE1" 6 127 "0xff" "NETMASK"
D G "MY_DEFAULT_MASK_BYTE2" 6 128 "0xff" "Netmask tells the IP / ARP stack which"
D G "MY_DEFAULT_MASK_BYTE3" 6 129 "0xff" "IP's are on your local network."
D G "MY_DEFAULT_MASK_BYTE4" 6 130 "0x00"
D G "MY_DEFAULT_GATE_BYTE1" 6 132 "192" "GATEWAY IP ADDRESS"
D G "MY_DEFAULT_GATE_BYTE2" 6 133 "168" "Gateway acts as a conduit between two networks."
D G "MY_DEFAULT_GATE_BYTE3" 6 134 "100"
D G "MY_DEFAULT_GATE_BYTE4" 6 135 "1"
D G "MY_DEFAULT_MAC_BYTE1" 6 141 "0x00"
D G "MY_DEFAULT_MAC_BYTE2" 6 142 "0x04"
D G "MY_DEFAULT_MAC_BYTE3" 6 143 "0xa3"
D G "MY_DEFAULT_MAC_BYTE4" 6 144 "0x00"
D G "MY_DEFAULT_MAC_BYTE5" 6 145 "0x00"
D G "MY_DEFAULT_MAC_BYTE6" 6 146 "0x00"
D G "MAX_SOCKETS" 6 152 "5"
D G "MAX_UDP_SOCKETS" 6 159 "2"
D G "MAC_TX_BUFFER_SIZE" 6 181 "1024" "do not modify this line"
D G "MAC_TX_BUFFER_COUNT" 6 182 "1" "do not modify this line"
D G "MAC_RX_BUFFER_SIZE" 6 191 "MAC_TX_BUFFER_SIZE" "do not modify this line unless you are certain you know what you're doing"
D G "MY_MAC_BYTE1" 4 295 "AppConfig.MyMACAddr.v[0]"
D G "MY_MAC_BYTE2" 4 296 "AppConfig.MyMACAddr.v[1]"
D G "MY_MAC_BYTE3" 4 297 "AppConfig.MyMACAddr.v[2]"
D G "MY_MAC_BYTE4" 4 298 "AppConfig.MyMACAddr.v[3]"
D G "MY_MAC_BYTE5" 4 299 "AppConfig.MyMACAddr.v[4]"
D G "MY_MAC_BYTE6" 4 300 "AppConfig.MyMACAddr.v[5]"
C G "" 4 302 1 "*"
C G "" 4 302 1 "*"
D G "MY_MASK_BYTE1" 4 307 "AppConfig.MyMask.v[0]"
D G "MY_MASK_BYTE2" 4 308 "AppConfig.MyMask.v[1]"
D G "MY_MASK_BYTE3" 4 309 "AppConfig.MyMask.v[2]"
D G "MY_MASK_BYTE4" 4 310 "AppConfig.MyMask.v[3]"
C G "" 4 312 1 "*"
C G "" 4 312 1 "*"
D G "MY_IP" 4 319 "AppConfig.MyIPAddr"
D G "MY_IP_BYTE1" 4 321 "AppConfig.MyIPAddr.v[0]"
D G "MY_IP_BYTE2" 4 322 "AppConfig.MyIPAddr.v[1]"
D G "MY_IP_BYTE3" 4 323 "AppConfig.MyIPAddr.v[2]"
D G "MY_IP_BYTE4" 4 324 "AppConfig.MyIPAddr.v[3]"
C G "" 4 326 1 "*"
D G "MY_GATE_BYTE1" 4 330 "AppConfig.MyGateway.v[0]"
D G "MY_GATE_BYTE2" 4 331 "AppConfig.MyGateway.v[1]"
D G "MY_GATE_BYTE3" 4 332 "AppConfig.MyGateway.v[2]"
D G "MY_GATE_BYTE4" 4 333 "AppConfig.MyGateway.v[3]"
T G "BOOL" 4 368 "int1"
T G "BUFFER" 4 370 "int8"
T G "WORD" 4 372 "int16"
T G "DWORD" 4 373 "int32"
T G "BYTE_VAL" 4 389 "{int8 Val}"
T G "SWORD_VAL" 4 401 "{int32 Val}"
T G "WORD_VAL" 4 413 "{int16 Val,int8[2] v}" "typedef union _DWORD_VAL"
T G "DWORD_VAL" 4 475 "{DWORD Val,WORD[2] w,int8[4] v}"
D G "LOWER_LSB" 4 478 "(a)    (a).v[0]"
D G "LOWER_MSB" 4 479 "(a)   (a).v[1]"
D G "UPPER_LSB" 4 480 "(a)    (a).v[2]"
D G "UPPER_MSB" 4 481 "(a)    (a).v[3]"
T G "MAC_ADDR" 4 486 "{int8[6] v}"
T G "IP_ADDR" 4 492 "{int8[4] v,DWORD Val}"
T G "NODE_INFO" 4 499 "{MAC_ADDR MACAddr,IP_ADDR IPAddr}"
T G "APP_CONFIG" 4 517 "{IP_ADDR MyIPAddr,MAC_ADDR MyMACAddr,IP_ADDR MyMask,IP_ADDR MyGateway,IP_ADDR PrimaryDNSServer}" "typedef union _STACK_FLAGS"
V G "AppConfig" 4 528 "APP_CONFIG"
D G "StackIsInConfigMode" 4 531 "()   (stackFlags.bits.bInConfigMode)"
C L "StackInit" 4 537 1 "*"
C L "StackInit" 4 537 1 "*"
C L "StackInit" 4 537 1 "*"
C L "StackInit" 4 537 1 "*"
C L "StackInit" 4 537 1 "*"
C L "StackInit" 4 537 1 "*"
C L "StackInit" 4 537 1 "*"
F G "StackInit" 4 552 "void()"
C L "StackInit" 4 555 1 "*"
C L "StackInit" 4 555 1 "*"
C L "StackInit" 4 555 1 "*"
C L "StackInit" 4 555 1 "*"
C L "StackInit" 4 555 1 "*"
C L "StackInit" 4 555 1 "*"
C L "StackInit" 4 555 1 "*"
C L "StackInit" 4 555 1 "*"
C L "StackInit" 4 555 1 "*"
C L "StackInit" 4 555 1 "*"
F G "StackTask" 4 574 "void()"
D G "_STRING" 7 12 ""
D G "_STDDEF" 8 13 ""
D G "ptrdiff_t" 8 18 "unsigned int16"
D G "size_t" 8 21 "unsigned int8"
D G "wchar_t" 8 22 "char"
D G "NULL" 8 23 "0"
D G "offsetof" 8 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 9 12 ""
D G "islower" 9 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 9 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 9 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 9 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 9 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 9 19 "(x)  ((x)==' ')"
D G "isxdigit" 9 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 9 21 "(x)  ((x)<' ')"
D G "isprint" 9 22 "(x)  ((x)>=' ')"
D G "isgraph" 9 23 "(x)  ((x)>' ')"
D G "ispunct" 9 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "StackTask" 7 19 10 "FUNCTION"
F G "memmove" 7 34 "*int8()"
V L "s1" 7 34 "*int8"
V L "s2" 7 34 "*int8"
V L "n" 7 34 "int8"
V L "sc1" 7 36 "*int8"
V L "sc2" 7 37 "*int8"
D G "strcopy" 7 54 "strcpy"
C L "strncpy" 7 19 4 "FUNCTION"
F G "strncpy" 7 61 "*int8()"
V L "s1" 7 61 "*int8"
V L "s2" 7 61 "*int8"
V L "n" 7 61 "int8"
V L "s" 7 63 "*int8"
C L "strcat" 7 19 3 "FUNCTION"
F G "strcat" 7 78 "*int8()"
V L "s1" 7 78 "*int8"
V L "s2" 7 78 "*int8"
V L "s" 7 80 "*int8"
C L "strncat" 7 19 2 "FUNCTION"
F G "strncat" 7 96 "*int8()"
V L "s1" 7 96 "*int8"
V L "s2" 7 96 "*int8"
V L "n" 7 96 "int8"
V L "s" 7 98 "*int8"
C L "memcmp" 7 19 3 "FUNCTION"
F G "memcmp" 7 120 "sint8()"
V L "s1" 7 120 "*int8"
V L "s2" 7 120 "*int8"
V L "n" 7 120 "int8"
V L "su1" 7 122 "*int8"
V L "su2" 7 122 "*int8"
C L "strcmp" 7 19 2 "FUNCTION"
F G "strcmp" 7 134 "sint8()"
V L "s1" 7 134 "*int8"
V L "s2" 7 134 "*int8"
C L "strcoll" 7 19 2 "FUNCTION"
F G "strcoll" 7 144 "sint8()"
V L "s1" 7 144 "*int8"
V L "s2" 7 144 "*int8"
C L "strncmp" 7 19 4 "FUNCTION"
F G "strncmp" 7 157 "sint8()"
V L "s1" 7 157 "*int8"
V L "s2" 7 157 "*int8"
V L "n" 7 157 "int8"
C L "strxfrm" 7 19 3 "FUNCTION"
F G "strxfrm" 7 169 "int8()"
V L "s1" 7 169 "*int8"
V L "s2" 7 169 "*int8"
V L "n" 7 169 "int8"
V L "s" 7 171 "*int8"
V L "n1" 7 172 "int8"
C L "memchr" 7 19 3 "FUNCTION"
F G "memchr" 7 191 "*int8()"
V L "s" 7 191 "*int8"
V L "c" 7 191 "int8"
V L "n" 7 191 "int8"
V L "uc" 7 193 "int8"
V L "su" 7 194 "*int8"
C L "strchr" 7 19 2 "FUNCTION"
F G "strchr" 7 205 "*int8()"
V L "s" 7 205 "*int8"
V L "c" 7 205 "int8"
C L "strcspn" 7 19 4 "FUNCTION"
F G "strcspn" 7 217 "int8()"
V L "s1" 7 217 "*int8"
V L "s2" 7 217 "*int8"
V L "sc1" 7 219 "*int8"
V L "sc2" 7 219 "*int8"
C L "strpbrk" 7 19 4 "FUNCTION"
F G "strpbrk" 7 232 "*int8()"
V L "s1" 7 232 "*int8"
V L "s2" 7 232 "*int8"
V L "sc1" 7 234 "*int8"
V L "sc2" 7 234 "*int8"
C L "strrchr" 7 19 2 "FUNCTION"
F G "strrchr" 7 247 "*int8()"
V L "s" 7 247 "*int8"
V L "c" 7 247 "int8"
V L "p" 7 249 "*int8"
C L "strspn" 7 19 2 "FUNCTION"
F G "strspn" 7 262 "int8()"
V L "s1" 7 262 "*int8"
V L "s2" 7 262 "*int8"
V L "sc1" 7 264 "*int8"
V L "sc2" 7 264 "*int8"
C L "strstr" 7 19 6 "FUNCTION"
F G "strstr" 7 281 "*int8()"
V L "s1" 7 281 "*int8"
V L "s2" 7 281 "*int8"
V L "s" 7 283 "*int8"
V L "t" 7 283 "*int8"
C L "strtok" 7 19 13 "FUNCTION"
F G "strtok" 7 320 "*int8()"
V L "s1" 7 320 "*int8"
V L "s2" 7 320 "*int8"
V L "beg" 7 322 "*int8"
V L "end" 7 322 "*int8"
V L "save" 7 323 "*int8"
C L "strlen" 7 19 6 "FUNCTION"
F G "strlen" 7 369 "int8()"
V L "s" 7 369 "*int8"
V L "sc" 7 371 "*int8"
C L "stricmp" 7 19 2 "FUNCTION"
F G "stricmp" 7 380 "sint8()"
V L "s1" 7 380 "*int8"
V L "s2" 7 380 "*int8"
C L "strlwr" 7 19 3 "FUNCTION"
F G "strlwr" 7 394 "*int8()"
V L "s" 7 394 "*int8"
V L "p" 7 396 "*int8"
D G "_STDLIB" 10 12 ""
D G "RAND_MAX" 10 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 10 25 "1"
T G "div_t" 10 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 10 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 8 3 6 "FUNCTION"
C L "atoi" 10 43 2 "FUNCTION"
C L "atoi" 10 46 1 "*"
C L "atoi" 10 46 1 "*"
F G "atoi" 10 50 "sint8()"
V L "s" 10 50 "*int8" "Syntax: signed int32  atoi32(char * s)"
F G "atoi32" 10 58 "sint32()"
V L "s" 10 58 "*int8"
C L "atoi32" 10 46 3 "FUNCTION"
F G "itoa" 10 79 "*int8()"
V L "num" 10 79 "sint32"
V L "base" 10 79 "int8"
V L "s" 10 79 "*int8" "Standard template: signed int16  atol(char * s)"
C L "itoa" 10 81 1 "*"
C L "itoa" 10 81 1 "*"
F G "atol" 10 85 "sint16()"
V L "s" 10 85 "*int8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 10 87 1 "*"
C L "atol" 10 87 1 "*"
C L "atol" 10 87 1 "*"
C L "atol" 10 87 1 "*"
F G "strtol" 10 93 "sint16()"
V L "s" 10 93 "*int8"
V L "endptr" 10 93 "*int8"
V L "base" 10 93 "sint8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 10 95 1 "*"
C L "strtol" 10 95 1 "*"
C L "strtol" 10 95 1 "*"
C L "strtol" 10 95 1 "*"
F G "strtoul" 10 101 "int16()"
V L "s" 10 101 "*int8"
V L "endptr" 10 101 "*int8"
V L "base" 10 101 "sint8" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 10 95 2 "FUNCTION"
C L "strtoul" 10 103 1 "*"
C L "strtoul" 10 103 1 "*"
C L "strtoul" 10 103 1 "*"
F G "strtof" 10 110 "float()"
V L "s" 10 110 "*int8"
V L "endptr" 10 110 "*int8"
D G "strtof48" 10 116 "(s, e) strtof(s, e)"
D G "strtod" 10 117 "(s, e) strtof(s, e)"
C L "strtof" 10 103 1 "FUNCTION"
C L "strtof" 10 120 1 "*"
D G "atof" 10 124 "(s)   strtof(s, 0)"
C L "strtof" 10 120 1 "FUNCTION"
C L "strtof" 10 143 1 "*"
C L "strtof" 10 143 1 "*"
C L "strtof" 10 143 1 "*"
F G "atoe" 10 149 "float()"
V L "s" 10 149 "*int8"
C L "atoe" 10 143 2 "FUNCTION"
C L "atoe" 10 160 1 "*"
C L "atoe" 10 160 1 "*"
C L "atoe" 10 160 1 "*"
C L "atoe" 10 160 1 "*"
C L "atoe" 10 160 1 "*"
F G "rand" 10 169 "int16()"
C L "rand" 10 160 1 "FUNCTION"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
C L "rand" 10 171 1 "*"
F G "srand" 10 191 "void()"
V L "seed" 10 191 "int32" "Memory management functions"
C L "srand" 10 171 3 "FUNCTION"
F G "system" 10 205 "sint8()"
V L "string" 10 205 "*int8" "Searching and sorting utilities"
C L "system" 10 171 1 "FUNCTION"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 1 "*"
C L "system" 10 211 4 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
C L "system" 10 229 1 "*"
D G "labs" 10 249 "abs"
F G "div" 10 251 "div_t()"
V L "numer" 10 251 "sint8"
V L "denom" 10 251 "sint8"
F G "ldiv" 10 252 "ldiv_t()"
V L "numer" 10 252 "sint16"
V L "denom" 10 252 "sint16" "Multibyte character functions"
C L "ldiv" 10 229 4 "FUNCTION"
C L "ldiv" 8 2 7 "FUNCTION"
C L "ldiv" 7 2 7 "FUNCTION"
F G "div" 10 274 "div_t()"
V L "numer" 10 274 "sint8"
V L "denom" 10 274 "sint8"
V L "val" 10 276 "div_t"
F G "ldiv" 10 282 "ldiv_t()"
V L "numer" 10 282 "sint16"
V L "denom" 10 282 "sint16"
V L "val" 10 284 "ldiv_t"
F G "atoe" 10 361 "float()"
V L "s" 10 361 "*int8"
V L "pow10" 10 363 "float"
V L "result" 10 364 "float"
V L "sign" 10 365 "int8"
V L "expsign" 10 366 "int8"
V L "c" 10 367 "int8"
V L "ptr" 10 368 "int8"
V L "i" 10 369 "int8"
V L "exp" 10 370 "float"
V L "expcnt" 10 371 "int8"
C L "atoe" 10 397 1 "FUNCTION"
F G "atoi" 10 429 "sint8()"
V L "s" 10 429 "*int8"
V L "result" 10 431 "sint8"
V L "sign" 10 432 "int8"
V L "base" 10 432 "int8"
V L "index" 10 432 "int8"
V L "c" 10 433 "int8"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
C L "atoi" 10 397 1 "FUNCTION"
F G "atol" 10 498 "sint16()"
V L "s" 10 498 "*int8"
V L "result" 10 500 "sint16"
V L "sign" 10 501 "int8"
V L "base" 10 501 "int8"
V L "index" 10 501 "int8"
V L "c" 10 502 "int8"
C L "atol" 10 397 1 "FUNCTION"
C L "atol" 10 397 1 "FUNCTION"
C L "atol" 10 397 1 "FUNCTION"
C L "atol" 10 397 1 "FUNCTION"
C L "mult_with10" 10 397 1 "FUNCTION"
F G "mult_with10" 10 565 "sint32()"
V L "num" 10 565 "int32"
F G "atoi32" 10 571 "sint32()"
V L "s" 10 571 "*int8"
V L "result" 10 573 "sint32"
V L "sign" 10 574 "int8"
V L "base" 10 574 "int8"
V L "index" 10 574 "int8"
V L "c" 10 575 "int8"
C L "atoi32" 10 397 1 "FUNCTION"
C L "atoi32" 10 397 1 "FUNCTION"
C L "atoi32" 10 397 1 "FUNCTION"
C L "atoi32" 10 397 1 "FUNCTION"
C L "atoi32" 10 397 1 "FUNCTION"
F G "itoa" 10 770 "*int8()"
V L "num" 10 770 "sint32"
V L "base" 10 770 "int8"
V L "s" 10 770 "*int8"
V L "temp" 10 772 "int32"
V L "i" 10 773 "int8"
V L "sign" 10 773 "int8"
V L "cnt" 10 773 "int8"
V L "c" 10 774 "int8"
C L "itoa" 10 397 1 "FUNCTION"
C L "itoa" 10 397 1 "FUNCTION"
C L "itoa" 10 397 1 "FUNCTION"
C L "itoa" 10 397 1 "FUNCTION"
C L "itoa" 10 397 1 "FUNCTION"
F G "strtof" 10 807 "float()"
V L "s" 10 807 "*int8"
V L "endptr" 10 807 "*int8"
V L "pow10" 10 809 "float"
V L "result" 10 810 "float"
V L "skip" 10 811 "int1"
V L "sign" 10 811 "int1"
V L "point" 10 811 "int1"
V L "c" 10 812 "int8"
V L "ptr" 10 813 "int8"
F G "strtoul" 10 1025 "int16()"
V L "s" 10 1025 "*int8"
V L "endptr" 10 1025 "*int8"
V L "base" 10 1025 "sint8"
V L "sc" 10 1027 "*int8"
V L "s1" 10 1027 "*int8"
V L "sd" 10 1027 "*int8"
V L "x" 10 1028 "int16"
V L "sign" 10 1029 "int8"
V L "digits" 10 1030 "int8[1]"
C L "strtoul" 10 397 1 "FUNCTION"
C L "strtoul" 10 397 1 "FUNCTION"
C L "strtoul" 10 397 1 "FUNCTION"
F G "strtol" 10 1087 "sint16()"
V L "s" 10 1087 "*int8"
V L "endptr" 10 1087 "*int8"
V L "base" 10 1087 "sint8"
V L "sc" 10 1089 "*int8"
V L "s1" 10 1089 "*int8"
V L "sd" 10 1089 "*int8"
V L "x" 10 1090 "sint16"
V L "sign" 10 1091 "int8"
V L "digits" 10 1092 "int8[1]"
C L "strtol" 10 397 1 "FUNCTION"
C L "strtol" 10 397 1 "FUNCTION"
C L "strtol" 10 397 1 "FUNCTION"
F G "system" 10 1150 "sint8()"
V L "string" 10 1150 "*int8"
F G "mblen" 10 1155 "int8(*int8 string)"
V L "s" 10 1155 "*int8"
V L "n" 10 1155 "int8"
F G "mbtowc" 10 1160 "int8()"
V L "pwc" 10 1160 "*int8"
V L "s" 10 1160 "*int8"
V L "n" 10 1160 "int8"
F G "wctomb" 10 1166 "int8()"
V L "s" 10 1166 "*int8"
V L "wchar" 10 1166 "int8"
F G "mbstowcs" 10 1172 "int8()"
V L "pwcs" 10 1172 "*int8"
V L "s" 10 1172 "*int8"
V L "n" 10 1172 "int8"
F G "wcstombs" 10 1178 "int8()"
V L "s" 10 1178 "*int8"
V L "pwcs" 10 1178 "*int8"
V L "n" 10 1178 "int8"
V G "_Randseed" 10 1188 "int32"
F G "rand" 10 1190 "int16()"
F G "srand" 10 1196 "void()"
V L "seed" 10 1196 "int32"
T G "*_Cmpfun" 10 1206 "sint8(int32 seed)"
V L "p1" 10 1206 "*int8"
V L "p2" 10 1206 "*int8"
F G "qsort" 10 1213 "void()"
V L "qdata" 10 1213 "*int8"
V L "qitems" 10 1213 "int8"
V L "qsize" 10 1213 "int8"
V L "cmp" 10 1213 "_Cmpfun"
V L "m" 10 1214 "int8"
V L "j" 10 1214 "int8"
V L "i" 10 1214 "int8"
V L "l" 10 1214 "int8"
V L "done" 10 1215 "int1"
V L "t" 10 1216 "int8[16]"
F G "bsearch" 10 1241 "*int8()"
V L "key" 10 1241 "*int8"
V L "base" 10 1241 "*int8"
V L "num" 10 1241 "int8"
V L "width" 10 1241 "int8"
V L "cmp" 10 1241 "_Cmpfun"
V L "p" 10 1243 "*int8"
V L "q" 10 1243 "*int8"
V L "n" 10 1244 "int8"
V L "pivot" 10 1245 "int8"
V L "val" 10 1246 "sint8"
C L "bsearch" 10 397 1 "FUNCTION"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
D G "HELPERS_H" 12 44 ""
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
F G "ReadStringUART" 12 53 "int8()"
V L "Dest" 12 53 "*int8"
V L "BufferLen" 12 53 "int8"
F G "hexatob" 12 54 "int8()"
V L "AsciiChars" 12 54 "WORD_VAL"
F G "btohexa_high" 12 55 "int8()"
V L "b" 12 55 "int8"
F G "btohexa_low" 12 56 "int8()"
V L "b" 12 56 "int8"
F G "swaps" 12 58 "WORD()"
V L "v" 12 58 "WORD_VAL"
F G "swapl" 12 59 "DWORD()"
V L "v" 12 59 "DWORD_VAL"
F G "CalcIPChecksum" 12 61 "WORD()"
V L "buffer" 12 61 "*int8"
V L "len" 12 61 "WORD"
F G "CalcIPBufferChecksum" 12 62 "WORD()"
V L "len" 12 62 "WORD" "*                  MAC Module Defs for Microchip Stack"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
C L "CalcIPBufferChecksum" 13 1 1 "*"
D G "MAC_H" 13 41 ""
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 2 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
C L "CalcIPBufferChecksum" 14 1 1 "*"
D G "MAC_IP" 13 45 " (0u)"
D G "MAC_ARP" 13 46 " (0x6u)"
D G "MAC_UNKNOWN" 13 47 " (0x0ffu)"
D G "INVALID_BUFFER" 13 49 " (0xffu)"
C L "CalcIPBufferChecksum" 13 51 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
C L "CalcIPBufferChecksum" 15 1 1 "*"
D G "ENC28J60_H" 15 42 ""
T G "TXSTATUS" 15 68 "{int8[7] v}"
T G "RXSTATUS" 15 91 "{int8[4] v}" "* Register locations"
D G "ERDPTL" 15 97 "0x00"
D G "ERDPTH" 15 98 "0x01"
D G "EWRPTL" 15 99 "0x02"
D G "EWRPTH" 15 100 "0x03"
D G "ETXSTL" 15 101 "0x04"
D G "ETXSTH" 15 102 "0x05"
D G "ETXNDL" 15 103 "0x06"
D G "ETXNDH" 15 104 "0x07"
D G "ERXSTL" 15 105 "0x08"
D G "ERXSTH" 15 106 "0x09"
D G "ERXNDL" 15 107 "0x0A"
D G "ERXNDH" 15 108 "0x0B"
D G "ERXRDPTL" 15 109 "0x0C"
D G "ERXRDPTH" 15 110 "0x0D"
D G "ERXWRPTL" 15 111 "0x0E"
D G "ERXWRPTH" 15 112 "0x0F"
D G "EDMASTL" 15 113 "0x10"
D G "EDMASTH" 15 114 "0x11"
D G "EDMANDL" 15 115 "0x12"
D G "EDMANDH" 15 116 "0x13"
D G "EDMADSTL" 15 117 "0x14"
D G "EDMADSTH" 15 118 "0x15"
D G "EDMACSL" 15 119 "0x16"
D G "EDMACSH" 15 120 "0x17"
D G "EIE" 15 124 "0x1B"
D G "EIR" 15 125 "0x1C"
D G "ESTAT" 15 126 "0x1D"
D G "ECON2" 15 127 "0x1E"
D G "ECON1" 15 128 "0x1F"
D G "EHT0" 15 131 "0x100"
D G "EHT1" 15 132 "0x101"
D G "EHT2" 15 133 "0x102"
D G "EHT3" 15 134 "0x103"
D G "EHT4" 15 135 "0x104"
D G "EHT5" 15 136 "0x105"
D G "EHT6" 15 137 "0x106"
D G "EHT7" 15 138 "0x107"
D G "EPMM0" 15 139 "0x108"
D G "EPMM1" 15 140 "0x109"
D G "EPMM2" 15 141 "0x10A"
D G "EPMM3" 15 142 "0x10B"
D G "EPMM4" 15 143 "0x10C"
D G "EPMM5" 15 144 "0x10D"
D G "EPMM6" 15 145 "0x10E"
D G "EPMM7" 15 146 "0x10F"
D G "EPMCSL" 15 147 "0x110"
D G "EPMCSH" 15 148 "0x111"
D G "EPMOL" 15 151 "0x114"
D G "EPMOH" 15 152 "0x115"
D G "ERXFCON" 15 155 "0x118"
D G "EPKTCNT" 15 156 "0x119"
D G "MACON1" 15 165 "0x200"
D G "MACON2" 15 166 "0x201"
D G "MACON3" 15 168 "0x202"
D G "MACON4" 15 169 "0x203"
D G "MABBIPG" 15 170 "0x204"
D G "MAIPGL" 15 172 "0x206"
D G "MAIPGH" 15 173 "0x207"
D G "MACLCON1" 15 174 "0x208"
D G "MACLCON2" 15 175 "0x209"
D G "MAMXFLL" 15 176 "0x20A"
D G "MAMXFLH" 15 177 "0x20B"
D G "MICMD" 15 184 "0x212"
D G "MIREGADR" 15 186 "0x214"
D G "MIWRL" 15 188 "0x216"
D G "MIWRH" 15 189 "0x217"
D G "MIRDL" 15 190 "0x218"
D G "MIRDH" 15 191 "0x219"
D G "MAADR5" 15 200 "0x300"
D G "MAADR6" 15 201 "0x301"
D G "MAADR3" 15 202 "0x302"
D G "MAADR4" 15 203 "0x303"
D G "MAADR1" 15 204 "0x304"
D G "MAADR2" 15 205 "0x305"
D G "EBSTSD" 15 206 "0x306"
D G "EBSTCON" 15 207 "0x307"
D G "EBSTCSL" 15 208 "0x308"
D G "EBSTCSH" 15 209 "0x309"
D G "MISTAT" 15 210 "0x30A"
D G "EREVID" 15 218 "0x312"
D G "ECOCON" 15 221 "0x315"
D G "EFLOCON" 15 223 "0x317"
D G "EPAUSL" 15 224 "0x318"
D G "EPAUSH" 15 225 "0x319"
C L "CalcIPBufferChecksum" 15 1 7 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
T G "REG" 15 406 "{int8 Val}" "* PH Register Locations"
D G "PHCON1" 15 412 "0x00"
D G "PHSTAT1" 15 413 "0x01"
D G "PHID1" 15 414 "0x02"
D G "PHID2" 15 415 "0x03"
D G "PHCON2" 15 416 "0x10"
D G "PHSTAT2" 15 417 "0x11"
D G "PHIE" 15 418 "0x12"
D G "PHIR" 15 419 "0x13"
D G "PHLCON" 15 420 "0x14"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
C L "CalcIPBufferChecksum" 15 1 1 "FUNCTION"
T G "PHYREG" 15 546 "{int16 Val,WORD_VAL VAL}" "* Individual Register Bits"
D G "EIE_INTIE" 15 555 " (1<<7)"
D G "EIE_PKTIE" 15 556 " (1<<6)"
D G "EIE_DMAIE" 15 557 " (1<<5)"
D G "EIE_LINKIE" 15 558 " (1<<4)"
D G "EIE_TXIE" 15 559 " (1<<3)"
D G "EIE_TXERIE" 15 560 " (1<<1)"
D G "EIE_RXERIE" 15 561 " (1)"
D G "EIR_PKTIF" 15 564 " (1<<6)"
D G "EIR_DMAIF" 15 565 " (1<<5)"
D G "EIR_LINKIF" 15 566 " (1<<4)"
D G "EIR_TXIF" 15 567 " (1<<3)"
D G "EIR_TXERIF" 15 568 " (1<<1)"
D G "EIR_RXERIF" 15 569 " (1)"
D G "ESTAT_INT" 15 572 " (1<<7)"
D G "ESTAT_BUFFER" 15 573 " (1<<6)"
D G "ESTAT_LATECOL" 15 574 " (1<<4)"
D G "ESTAT_RXBUSY" 15 575 " (1<<2)"
D G "ESTAT_TXABRT" 15 576 " (1<<1)"
D G "ESTAT_CLKRDY" 15 577 " (1)"
D G "ECON2_AUTOINC" 15 580 " (1<<7)"
D G "ECON2_PKTDEC" 15 581 " (1<<6)"
D G "ECON2_PWRSV" 15 582 " (1<<5)"
D G "ECON2_VRPS" 15 583 " (1<<3)"
D G "ECON1_TXRST" 15 586 " (1<<7)"
D G "ECON1_RXRST" 15 587 " (1<<6)"
D G "ECON1_DMAST" 15 588 " (1<<5)"
D G "ECON1_CSUMEN" 15 589 " (1<<4)"
D G "ECON1_TXRTS" 15 590 " (1<<3)"
D G "ECON1_RXEN" 15 591 " (1<<2)"
D G "ECON1_BSEL1" 15 592 " (1<<1)"
D G "ECON1_BSEL0" 15 593 " (1)"
D G "ERXFCON_UCEN" 15 596 " (1<<7)"
D G "ERXFCON_ANDOR" 15 597 " (1<<6)"
D G "ERXFCON_CRCEN" 15 598 " (1<<5)"
D G "ERXFCON_PMEN" 15 599 " (1<<4)"
D G "ERXFCON_MPEN" 15 600 " (1<<3)"
D G "ERXFCON_HTEN" 15 601 " (1<<2)"
D G "ERXFCON_MCEN" 15 602 " (1<<1)"
D G "ERXFCON_BCEN" 15 603 " (1)"
D G "MACON1_TXPAUS" 15 606 " (1<<3)"
D G "MACON1_RXPAUS" 15 607 " (1<<2)"
D G "MACON1_PASSALL" 15 608 " (1<<1)"
D G "MACON1_MARXEN" 15 609 " (1)"
D G "MACON3_PADCFG2" 15 612 " (1<<7)"
D G "MACON3_PADCFG1" 15 613 " (1<<6)"
D G "MACON3_PADCFG0" 15 614 " (1<<5)"
D G "MACON3_TXCRCEN" 15 615 " (1<<4)"
D G "MACON3_PHDRLEN" 15 616 " (1<<3)"
D G "MACON3_HFRMEN" 15 617 " (1<<2)"
D G "MACON3_FRMLNEN" 15 618 " (1<<1)"
D G "MACON3_FULDPX" 15 619 " (1)"
D G "MACON4_DEFER" 15 622 " (1<<6)"
D G "MACON4_BPEN" 15 623 " (1<<5)"
D G "MACON4_NOBKOFF" 15 624 " (1<<4)"
D G "MICMD_MIISCAN" 15 628 " (1<<1)"
D G "MICMD_MIIRD" 15 629 " (1)"
D G "EBSTCON_PSV2" 15 632 " (1<<7)"
D G "EBSTCON_PSV1" 15 633 " (1<<6)"
D G "EBSTCON_PSV0" 15 634 " (1<<5)"
D G "EBSTCON_PSEL" 15 635 " (1<<4)"
D G "EBSTCON_TMSEL1" 15 636 " (1<<3)"
D G "EBSTCON_TMSEL0" 15 637 " (1<<2)"
D G "EBSTCON_TME" 15 638 " (1<<1)"
D G "EBSTCON_BISTST" 15 639 " (1)"
D G "MISTAT_NVALID" 15 642 " (1<<2)"
D G "MISTAT_SCAN" 15 643 " (1<<1)"
D G "MISTAT_BUSY" 15 644 " (1)"
D G "ECOCON_COCON2" 15 647 " (1<<2)"
D G "ECOCON_COCON1" 15 648 " (1<<1)"
D G "ECOCON_COCON0" 15 649 " (1)"
D G "EFLOCON_FULDPXS" 15 652 " (1<<2)"
D G "EFLOCON_FCEN1" 15 653 " (1<<1)"
D G "EFLOCON_FCEN0" 15 654 " (1)"
D G "PHCON1_PRST" 15 661 " (1ul<<15)"
D G "PHCON1_PLOOPBK" 15 662 " (1ul<<14)"
D G "PHCON1_PPWRSV" 15 663 " (1ul<<11)"
D G "PHCON1_PDPXMD" 15 664 " (1ul<<8)"
D G "PHSTAT1_PFDPX" 15 667 " (1ul<<12)"
D G "PHSTAT1_PHDPX" 15 668 " (1ul<<11)"
D G "PHSTAT1_LLSTAT" 15 669 " (1ul<<2)"
D G "PHSTAT1_JBSTAT" 15 670 " (1ul<<1)"
D G "PHID2_PID24" 15 673 " (1ul<<15)"
D G "PHID2_PID23" 15 674 " (1ul<<14)"
D G "PHID2_PID22" 15 675 " (1ul<<13)"
D G "PHID2_PID21" 15 676 " (1ul<<12)"
D G "PHID2_PID20" 15 677 " (1ul<<11)"
D G "PHID2_PID19" 15 678 " (1ul<<10)"
D G "PHID2_PPN5" 15 679 " (1ul<<9)"
D G "PHID2_PPN4" 15 680 " (1ul<<8)"
D G "PHID2_PPN3" 15 681 " (1ul<<7)"
D G "PHID2_PPN2" 15 682 " (1ul<<6)"
D G "PHID2_PPN1" 15 683 " (1ul<<5)"
D G "PHID2_PPN0" 15 684 " (1ul<<4)"
D G "PHID2_PREV3" 15 685 " (1ul<<3)"
D G "PHID2_PREV2" 15 686 " (1ul<<2)"
D G "PHID2_PREV1" 15 687 " (1ul<<1)"
D G "PHID2_PREV0" 15 688 " (1ul)"
D G "PHCON2_FRCLNK" 15 691 " (1ul<<14)"
D G "PHCON2_TXDIS" 15 692 " (1ul<<13)"
D G "PHCON2_JABBER" 15 693 " (1ul<<10)"
D G "PHCON2_HDLDIS" 15 694 " (1ul<<8)"
D G "PHSTAT2_TXSTAT" 15 697 " (1ul<<13)"
D G "PHSTAT2_RXSTAT" 15 698 " (1ul<<12)"
D G "PHSTAT2_COLSTAT" 15 699 " (1ul<<11)"
D G "PHSTAT2_LSTAT" 15 700 " (1ul<<10)"
D G "PHSTAT2_DPXSTAT" 15 701 " (1ul<<9)"
D G "PHSTAT2_PLRITY" 15 702 " (1ul<<5)"
D G "PHIE_PLNKIE" 15 705 " (1ul<<4)"
D G "PHIE_PGEIE" 15 706 " (1ul<<1)"
D G "PHIR_PLNKIF" 15 709 " (1ul<<4)"
D G "PHIR_PGIF" 15 710 " (1ul<<2)"
D G "PHLCON_LACFG3" 15 713 " (1ul<<11)"
D G "PHLCON_LACFG2" 15 714 " (1ul<<10)"
D G "PHLCON_LACFG1" 15 715 " (1ul<<9)"
D G "PHLCON_LACFG0" 15 716 " (1ul<<8)"
D G "PHLCON_LBCFG3" 15 717 " (1ul<<7)"
D G "PHLCON_LBCFG2" 15 718 " (1ul<<6)"
D G "PHLCON_LBCFG1" 15 719 " (1ul<<5)"
D G "PHLCON_LBCFG0" 15 720 " (1ul<<4)"
D G "PHLCON_LFRQ1" 15 721 " (1ul<<3)"
D G "PHLCON_LFRQ0" 15 722 " (1ul<<2)"
D G "PHLCON_STRCH" 15 723 " (1ul<<1)"
C L "CalcIPBufferChecksum" 13 64 1 "FUNCTION"
E G "HALF" 13 67 "0"
E G "FULL" 13 68 "1"
E G "USE_PHY" 13 69 "2"
T G "DUPLEX" 13 69 "_DUPLEX"
E G "Divide1" 13 73 "0"
E G "Divide2" 13 74 "1"
E G "Divide3" 13 75 "2"
E G "Divide4" 13 76 "3"
E G "Divide8" 13 77 "4"
T G "CLK_CONFIG" 13 77 "_CLK_CONFIG"
F G "MACSetDuplex" 13 78 "void()"
V L "DuplexState" 13 78 "DUPLEX"
F G "CalcIPBufferChecksum" 13 79 "WORD()"
V L "len" 13 79 "WORD"
F G "MACPowerDown" 13 81 "void(WORD len)"
F G "MACPowerUp" 13 82 "void()"
F G "MACCalcRxChecksum" 13 83 "WORD()"
V L "offset" 13 83 "WORD"
V L "len" 13 83 "WORD"
F G "MACCalcTxChecksum" 13 84 "WORD()"
V L "offset" 13 84 "WORD"
V L "len" 13 84 "WORD"
F G "MACCopyRxToTx" 13 85 "void()"
V L "RxOffset" 13 85 "WORD"
V L "TxOffset" 13 85 "WORD"
V L "len" 13 85 "WORD"
F G "WritePHYReg" 13 86 "void()"
V L "Register" 13 86 "int8"
V L "Data" 13 86 "WORD"
F G "ReadPHYReg" 13 87 "PHYREG()"
V L "Register" 13 87 "int8"
F G "SetRXHashTableEntry" 13 88 "void()"
V L "DestMACAddr" 13 88 "MAC_ADDR" "* Macro:           void SetLEDConfig(WORD NewConfig)"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
C L "SetRXHashTableEntry" 13 91 1 "*"
D G "SetLEDConfig" 13 139 "(NewConfig)      WritePHYReg(PHLCON, NewConfig)"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
C L "SetRXHashTableEntry" 13 142 1 "*"
D G "GetLEDConfig" 13 188 "()      ReadPHYReg(PHLCON).Val"
F G "MACInit" 13 193 "void()"
F G "MACIsLinked" 13 194 "int8()"
F G "MACGetHeader" 13 196 "int8()"
V L "remote" 13 196 "*MAC_ADDR"
V L "type" 13 196 "*int8"
F G "MACSetRxBuffer" 13 197 "void()"
V L "offset" 13 197 "WORD"
F G "MACGet" 13 198 "int8()"
F G "MACGetArray" 13 199 "WORD()"
V L "val" 13 199 "*int8"
V L "len" 13 199 "WORD"
F G "MACDiscardRx" 13 200 "void()"
F G "MACGetFreeRxSize" 13 201 "WORD()"
F G "MACPutHeader" 13 203 "void()"
V L "remote" 13 203 "*MAC_ADDR"
V L "type" 13 204 "int8"
V L "dataLen" 13 205 "WORD"
F G "MACIsTxReady" 13 206 "int8()"
V L "HighPriority" 13 206 "int8"
F G "MACSetTxBuffer" 13 207 "void()"
V L "buffer" 13 207 "BUFFER"
V L "offset" 13 207 "WORD"
F G "MACPut" 13 208 "void()"
V L "val" 13 208 "int8"
F G "MACPutArray" 13 209 "void()"
V L "val" 13 209 "*int8"
V L "len" 13 209 "WORD"
F G "MACDiscardTx" 13 210 "void()"
V L "buffer" 13 210 "BUFFER"
F G "MACFlush" 13 211 "void()"
F G "MACGetTxBuffer" 13 212 "BUFFER()"
V L "HighPriority" 13 212 "int8" "extern *"
V G "CurrentTxBuffer" 13 215 "BUFFER" "* Function:        BYTE hexatob(WORD_VAL AsciiChars)"
C L "MACGetTxBuffer" 11 51 1 "*"
C L "MACGetTxBuffer" 11 51 1 "*"
C L "MACGetTxBuffer" 11 51 1 "*"
C L "MACGetTxBuffer" 11 51 1 "*"
C L "MACGetTxBuffer" 11 51 1 "*"
C L "MACGetTxBuffer" 11 51 1 "*"
C L "MACGetTxBuffer" 11 51 1 "*"
F G "hexatob" 11 67 "int8()"
V L "AsciiChars" 11 67 "WORD_VAL" "Convert lowercase to uppercase"
C L "hexatob" 11 51 1 "FUNCTION"
C L "hexatob" 11 51 1 "FUNCTION"
C L "btohexa_high" 11 90 1 "*"
C L "btohexa_high" 11 90 1 "*"
C L "btohexa_high" 11 90 1 "*"
C L "btohexa_high" 11 90 1 "*"
C L "btohexa_high" 11 90 1 "*"
C L "btohexa_high" 11 90 1 "*"
C L "btohexa_high" 11 90 1 "*"
C L "btohexa_high" 11 90 1 "*"
C L "btohexa_high" 11 90 1 "*"
C L "btohexa_high" 11 90 1 "*"
F G "btohexa_high" 11 108 "int8(WORD_VAL AsciiChars)"
V L "b" 11 108 "int8"
C L "btohexa_low" 11 114 1 "*"
C L "btohexa_low" 11 114 1 "*"
C L "btohexa_low" 11 114 1 "*"
C L "btohexa_low" 11 114 1 "*"
C L "btohexa_low" 11 114 1 "*"
C L "btohexa_low" 11 114 1 "*"
C L "btohexa_low" 11 114 1 "*"
C L "btohexa_low" 11 114 1 "*"
C L "btohexa_low" 11 114 1 "*"
C L "btohexa_low" 11 114 1 "*"
F G "btohexa_low" 11 132 "int8(int8 b)"
V L "b" 11 132 "int8"
F G "swaps" 11 138 "WORD(int8 b)"
V L "v" 11 138 "WORD_VAL"
V L "new" 11 140 "WORD_VAL"
F G "swapl" 11 148 "DWORD()"
V L "v" 11 148 "DWORD_VAL"
V L "new" 11 150 "DWORD_VAL"
F G "CalcIPChecksum" 11 160 "WORD()"
V L "buffer" 11 160 "*int8"
V L "count" 11 160 "WORD"
V L "i" 11 162 "WORD"
V L "val" 11 163 "*WORD"
V L "tempSum" 11 173 "{DWORD Val}"
V L "sum" 11 173 "{DWORD Val}"
C G "" 11 198 1 "*"
C G "" 11 198 1 "*"
C G "" 11 198 1 "*"
C G "" 11 198 1 "*"
C G "" 11 198 1 "*"
C G "" 11 198 1 "*"
C G "" 11 198 1 "*"
C G "" 11 198 1 "*"
C G "" 11 198 1 "*"
C G "" 11 198 1 "*"
F G "strupr" 11 257 "*int8()"
V L "s" 11 257 "*int8"
V L "c" 11 259 "int8"
V L "t" 11 260 "*int8"
F G "delay_s" 11 272 "void()"
V L "s" 11 272 "int8"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
C G "" 16 1 1 "*"
D G "TICK_INCLUDE" 16 44 ""
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
D G "TICK_H" 17 43 ""
T G "TICKTYPE" 17 45 "int16" "* This value is used by TCP to implement timeout actions."
D G "TICKS_PER_SECOND" 17 50 "10"
D G "CYCLES_PER_TICKS_PER_SECOND" 17 57 "getenv("CLOCK")/(4 * 16 * TICKS_PER_SECOND)"
D G "TICK_COUNTER" 17 68 "0xFFFF-CYCLES_PER_TICKS_PER_SECOND"
D G "TICK_SECOND" 17 82 "TICKS_PER_SECOND"
D G "TickGetDiff" 17 85 "(a, b)       ((TICKTYPE)(a < b) ? (((TICKTYPE)0xffff - b) + a + 1) : (a - b))"
C L "TickInit" 17 88 1 "*"
C L "TickInit" 17 88 1 "*"
C L "TickInit" 17 88 1 "*"
C L "TickInit" 17 88 1 "*"
C L "TickInit" 17 88 1 "*"
C L "TickInit" 17 88 1 "*"
C L "TickInit" 17 88 1 "*"
F G "TickInit" 17 103 "void()"
C L "TickInit" 17 107 1 "*"
C L "TickInit" 17 107 1 "*"
C L "TickInit" 17 107 1 "*"
C L "TickInit" 17 107 1 "*"
C L "TickInit" 17 107 1 "*"
C L "TickInit" 17 107 1 "*"
C L "TickInit" 17 107 1 "*"
F G "TickGet" 17 122 "TICKTYPE()"
C L "TickGet" 17 125 1 "*"
C L "TickGet" 17 125 1 "*"
C L "TickGet" 17 125 1 "*"
C L "TickGet" 17 125 1 "*"
C L "TickGet" 17 125 1 "*"
C L "TickGet" 17 125 1 "*"
C L "TickGet" 17 125 1 "*"
C L "TickGet" 17 125 1 "*"
C L "TickGet" 17 125 2 "*"
V G "TickCount" 16 50 "TICKTYPE"
C L "TickGet" 16 50 1 "FUNCTION"
C L "TickGet" 16 53 1 "*"
C L "TickGet" 16 53 1 "*"
C L "TickGet" 16 53 1 "*"
C L "TickGet" 16 53 1 "*"
C L "TickGet" 16 53 1 "*"
C L "TickGet" 16 53 1 "*"
C L "TickGet" 16 53 1 "*"
F G "TickInit" 16 68 "void()"
C L "TickGet" 16 78 1 "*"
C L "TickGet" 16 78 1 "*"
C L "TickGet" 16 78 1 "*"
C L "TickGet" 16 78 1 "*"
C L "TickGet" 16 78 1 "*"
C L "TickGet" 16 78 1 "*"
C L "TickGet" 16 78 1 "*"
F G "TickGet" 16 93 "TICKTYPE()"
V L "ret" 16 95 "int16"
C G "" 16 102 1 "*"
C G "" 16 102 1 "*"
C G "" 16 102 1 "*"
C G "" 16 102 1 "*"
C G "" 16 102 1 "*"
C G "" 16 102 1 "*"
C G "" 16 102 1 "*"
V G "second_counter" 16 117 "int8"
V G "second_counter_intermediate" 16 118 "int8"
F G "Tick_Isr" 16 126 "void()"
C L "Tick_Isr" 16 102 1 "FUNCTION"
C L "Tick_Isr" 16 102 1 "FUNCTION"
C L "Tick_Isr" 16 102 1 "FUNCTION"
D G "debug_stack" 3 73 ""
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
C G "" 18 1 1 "*"
D G "THIS_IS_MAC_LAYER" 18 47 ""
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 2 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 14 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 19 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 20 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
C G "" 15 1 1 "*"
D G "debug_mac" 18 61 ""
D G "SPISelectEthernet" 18 76 "()		output_low(PIN_ENC_MAC_CS)" "changed by ccs"
D G "SPIUnselectEthernet" 18 77 "()	output_high(PIN_ENC_MAC_CS)" "changed by ccs"
D G "HALF_DUPLEX" 18 98 ""
D G "LOW" 18 103 "(a) 					(a & 0xFF)"
D G "HIGH" 18 104 "(a) 				((a>>8) & 0xFF)"
D G "RAMSIZE" 18 107 "8192ul"
D G "TXSTART" 18 108 " (RAMSIZE-(MAC_TX_BUFFER_COUNT * (MAC_TX_BUFFER_SIZE + 8ul)))"
D G "RXSTART" 18 109 " (0ul)						" "Should be an even memory address"
D G "RXSTOP" 18 110 " ((TXSTART-2ul) | 0x0001ul)	" "Odd for errata workaround"
D G "RXSIZE" 18 111 " (RXSTOP-RXSTART+1ul)"
D G "WCR" 18 114 " (0b010<<5)			" "Write Control Register command"
D G "BFS" 18 115 " (0b100<<5)			" "Bit Field Set command"
D G "BFC" 18 116 " (0b101<<5)			" "Bit Field Clear command"
D G "RCR" 18 117 " (0b000<<5)			" "Read Control Register command"
D G "RBM" 18 118 " ((0b001<<5) | 0x1A)	" "Read Buffer Memory command"
D G "WBM" 18 119 " ((0b011<<5) | 0x1A)" "Write Buffer Memory command"
D G "SR" 18 120 " ((0b111<<5) | 0x1F)	" "System Reset command does not use an address."
D G "ETHER_IP" 18 123 " (0x00u)"
D G "ETHER_ARP" 18 124 " (0x06u)"
D G "MAXFRAMEC" 18 126 " (1500u+sizeof(ETHER_HEADER)+4u)"
T G "ETHER_HEADER" 18 135 "{MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}" "A header appended at the start of all RX frames by the hardware"
T G "ENC_PREAMBLE" 18 146 "{int16 NextPacketPointer,RXSTATUS StatusVector,MAC_ADDR DestMACAddr,MAC_ADDR SourceMACAddr,WORD_VAL Type}"
T G "DATA_BUFFER" 18 157 "{WORD_VAL StartAddress,WORD_VAL EndAddress}"
F G "MACSetDuplex" 18 159 "void()"
V L "DuplexState" 18 159 "DUPLEX" "Prototypes of functions intended for MAC layer use only."
F G "BankSel" 18 162 "void(DUPLEX DuplexState)"
V L "Register" 18 162 "WORD"
F G "ReadETHReg" 18 163 "REG()"
V L "Address" 18 163 "int8"
F G "ReadMACReg" 18 164 "REG()"
V L "Address" 18 164 "int8"
F G "WriteReg" 18 165 "void()"
V L "Address" 18 165 "int8"
V L "Data" 18 165 "int8"
F G "BFCReg" 18 166 "void()"
V L "Address" 18 166 "int8"
V L "Data" 18 166 "int8"
F G "BFSReg" 18 167 "void()"
V L "Address" 18 167 "int8"
V L "Data" 18 167 "int8"
F G "SendSystemReset" 18 168 "void()"
C L "SendSystemReset" 18 79 4 "FUNCTION"
V G "NextPacketLocation" 18 187 "WORD_VAL"
V G "CurrentPacketLocation" 18 188 "WORD_VAL"
V G "WasDiscarded" 18 189 "BOOL"
V G "ENCRevID" 18 190 "int8" "ENCSPIInit() added by CCS."
C L "SendSystemReset" 18 79 1 "FUNCTION"
F G "ENCSPIInit" 18 194 "void()"
C L "ENCSPIInit" 18 79 1 "FUNCTION"
C L "ENCSPIInit" 18 79 1 "FUNCTION"
C L "ENCSPIInit" 18 79 5 "FUNCTION"
C L "ENCSPIInit" 18 79 1 "FUNCTION"
C L "ENCSPIXfer" 18 79 2 "FUNCTION"
F G "ENCSPIXfer" 18 218 "int8()"
V L "c" 18 218 "int8"
C L "MACInit" 18 234 1 "*"
C L "MACInit" 18 234 1 "*"
C L "MACInit" 18 234 1 "*"
C L "MACInit" 18 234 1 "*"
C L "MACInit" 18 234 1 "*"
C L "MACInit" 18 234 1 "*"
C L "MACInit" 18 234 1 "*"
C L "MACInit" 18 234 1 "*"
C L "MACInit" 18 234 1 "*"
F G "MACInit" 18 251 "void()"
V L "i" 18 253 "int8"
C L "MACInit" 18 234 4 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 2 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 7 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 3 "FUNCTION"
C L "MACInit" 18 234 3 "FUNCTION"
C L "MACInit" 18 234 3 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 2 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 1 "FUNCTION"
C L "MACInit" 18 234 2 "FUNCTION"
C L "MACIsLinked" 18 234 1 "FUNCTION"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
C L "MACIsLinked" 18 381 1 "*"
F G "MACIsLinked" 18 400 "int8()"
C L "MACIsLinked" 18 381 5 "FUNCTION"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
C L "MACIsTxReady" 18 410 1 "*"
F G "MACIsTxReady" 18 430 "int8()"
V L "HighPriority" 18 430 "int8"
F G "MACGetTxBuffer" 18 463 "BUFFER(int8 HighPriority)"
V L "HighPriority" 18 463 "int8"
F G "MACDiscardTx" 18 495 "void(int8 HighPriority)"
V L "buffer" 18 495 "BUFFER"
C L "MACDiscardRx" 18 507 1 "*"
C L "MACDiscardRx" 18 507 1 "*"
C L "MACDiscardRx" 18 507 1 "*"
C L "MACDiscardRx" 18 507 1 "*"
C L "MACDiscardRx" 18 507 1 "*"
C L "MACDiscardRx" 18 507 1 "*"
C L "MACDiscardRx" 18 507 1 "*"
C L "MACDiscardRx" 18 507 1 "*"
C L "MACDiscardRx" 18 507 1 "*"
F G "MACDiscardRx" 18 524 "void(BUFFER buffer)"
V L "NewRXRDLocation" 18 526 "WORD_VAL" "Make sure the current packet was not already discarded"
C L "MACDiscardRx" 18 507 4 "FUNCTION"
C L "MACDiscardRx" 18 507 1 "FUNCTION"
C L "MACDiscardRx" 18 507 3 "FUNCTION"
C L "MACGetFreeRxSize" 18 558 1 "*"
C L "MACGetFreeRxSize" 18 558 1 "*"
C L "MACGetFreeRxSize" 18 558 1 "*"
C L "MACGetFreeRxSize" 18 558 1 "*"
C L "MACGetFreeRxSize" 18 558 1 "*"
C L "MACGetFreeRxSize" 18 558 1 "*"
C L "MACGetFreeRxSize" 18 558 1 "*"
C L "MACGetFreeRxSize" 18 558 1 "*"
F G "MACGetFreeRxSize" 18 574 "WORD()"
V L "ReadPT" 18 576 "WORD_VAL"
V L "WritePT" 18 576 "WORD_VAL" "Read the Ethernet hardware buffer write pointer.  Because packets can be"
C L "MACGetFreeRxSize" 18 558 3 "FUNCTION"
C L "MACGetFreeRxSize" 18 558 1 "FUNCTION"
C L "MACGetFreeRxSize" 18 558 1 "FUNCTION"
C L "MACGetFreeRxSize" 18 558 2 "FUNCTION"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
C L "MACGetHeader" 18 615 1 "*"
F G "MACGetHeader" 18 638 "int8()"
V L "remote" 18 638 "*MAC_ADDR"
V L "type" 18 638 "*int8"
V L "header" 18 640 "ENC_PREAMBLE" "Test if at least one packet has been received and is waiting"
C L "MACGetHeader" 18 615 1 "FUNCTION"
C L "MACGetHeader" 18 615 1 "FUNCTION"
C L "MACGetHeader" 18 615 1 "FUNCTION"
C L "MACGetHeader" 18 615 1 "FUNCTION"
C L "MACGetHeader" 18 615 2 "FUNCTION"
C L "MACGetHeader" 18 615 3 "FUNCTION"
C L "MACGetHeader" 18 615 1 "FUNCTION"
C L "MACGetHeader" 18 615 1 "FUNCTION"
C L "MACGetHeader" 18 615 3 "FUNCTION"
C L "MACGetHeader" 18 615 1 "FUNCTION"
C L "MACGetHeader" 18 615 1 "FUNCTION"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
C L "MACPutHeader" 18 704 1 "*"
F G "MACPutHeader" 18 730 "void(*int8 type)"
V L "remote" 18 730 "*MAC_ADDR"
V L "type" 18 731 "int8"
V L "dataLen" 18 732 "WORD"
C L "MACPutHeader" 18 704 1 "FUNCTION"
C L "MACPutHeader" 18 704 1 "FUNCTION"
C L "MACPutHeader" 18 704 1 "FUNCTION"
C L "MACPutHeader" 18 704 2 "FUNCTION"
C L "MACPutHeader" 18 704 1 "FUNCTION"
C L "MACPutHeader" 18 704 1 "FUNCTION"
C L "MACPutHeader" 18 704 1 "FUNCTION"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
C L "MACFlush" 18 772 1 "*"
F G "MACFlush" 18 795 "void(*MAC_ADDR remote,int8 type,WORD dataLen)"
C L "MACFlush" 18 772 2 "FUNCTION"
C L "MACFlush" 18 772 5 "FUNCTION"
C L "MACFlush" 18 772 1 "FUNCTION"
V L "ReadPtrSave" 18 830 "WORD_VAL"
V L "TXEnd" 18 831 "WORD_VAL"
V L "TXStatus" 18 832 "TXSTATUS"
V L "i" 18 833 "int8" "Cancel the previous transmission if it has become stuck set"
C L "MACFlush" 18 772 1 "FUNCTION"
C L "MACFlush" 18 772 1 "FUNCTION"
C L "MACFlush" 18 772 1 "FUNCTION"
C L "MACFlush" 18 772 3 "FUNCTION"
C L "MACFlush" 18 772 1 "FUNCTION"
C L "MACFlush" 18 772 1 "FUNCTION"
C L "MACFlush" 18 772 1 "FUNCTION"
C L "MACFlush" 18 772 1 "FUNCTION"
C L "MACFlush" 18 772 1 "FUNCTION"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
C L "MACSetRxBuffer" 18 891 1 "*"
F G "MACSetRxBuffer" 18 914 "void()"
V L "offset" 18 914 "WORD"
V L "ReadPT" 18 916 "WORD_VAL" "Determine the address of the beginning of the entire packet"
C L "MACSetRxBuffer" 18 891 1 "FUNCTION"
C L "MACSetRxBuffer" 18 891 1 "FUNCTION"
C L "MACSetRxBuffer" 18 891 1 "FUNCTION"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
C L "MACSetTxBuffer" 18 935 1 "*"
F G "MACSetTxBuffer" 18 957 "void()"
V L "buffer" 18 957 "BUFFER"
V L "offset" 18 957 "WORD"
C L "MACSetTxBuffer" 18 935 4 "FUNCTION"
C L "MACSetTxBuffer" 18 935 1 "FUNCTION"
C L "MACCalcRxChecksum" 18 935 2 "FUNCTION"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
C L "MACCalcRxChecksum" 18 983 1 "*"
F G "MACCalcRxChecksum" 18 1002 "WORD(BUFFER buffer,WORD offset)"
V L "offset" 18 1002 "WORD"
V L "len" 18 1002 "WORD"
V L "temp" 18 1004 "WORD_VAL" "Add the offset requested by firmware plus the Ethernet header"
C L "MACCalcRxChecksum" 18 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 18 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 18 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 18 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 18 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 18 983 1 "FUNCTION"
C L "MACCalcRxChecksum" 18 983 1 "FUNCTION"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
C L "MACCalcTxChecksum" 18 1040 1 "*"
F G "MACCalcTxChecksum" 18 1059 "WORD(WORD len)"
V L "offset" 18 1059 "WORD"
V L "len" 18 1059 "WORD"
V L "temp" 18 1061 "WORD_VAL" "Program the start address of the DMA, after adjusting for the Ethernet"
C L "MACCalcTxChecksum" 18 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 18 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 18 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 18 1040 1 "FUNCTION"
C L "MACCalcTxChecksum" 18 1040 1 "FUNCTION"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
C L "CalcIPBufferChecksum" 18 1092 1 "*"
F G "CalcIPBufferChecksum" 18 1116 "WORD(WORD len)"
V L "len" 18 1116 "WORD"
V L "temp" 18 1118 "WORD_VAL" "Take care of special cases which the DMA cannot be used for"
C L "CalcIPBufferChecksum" 18 1092 1 "FUNCTION"
C L "CalcIPBufferChecksum" 18 1092 2 "FUNCTION"
C L "CalcIPBufferChecksum" 18 1092 1 "FUNCTION"
C L "CalcIPBufferChecksum" 18 1092 1 "FUNCTION"
C L "CalcIPBufferChecksum" 18 1092 1 "FUNCTION"
C L "MACGet" 18 1092 1 "FUNCTION"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 1 "*"
C L "MACGet" 18 1176 4 "*"
C L "MACGet" 18 1361 1 "*"
C L "MACGet" 18 1361 1 "*"
C L "MACGet" 18 1361 1 "*"
C L "MACGet" 18 1361 1 "*"
C L "MACGet" 18 1361 1 "*"
C L "MACGet" 18 1361 1 "*"
C L "MACGet" 18 1361 1 "*"
C L "MACGet" 18 1361 1 "*"
C L "MACGet" 18 1361 1 "*"
C L "MACGet" 18 1361 1 "*"
F G "MACGet" 18 1379 "int8()" "SPISelectEthernet();"
C L "MACGet" 18 1361 9 "FUNCTION"
V L "c" 18 1394 "int8"
C L "MACGetArray" 18 1361 1 "FUNCTION"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
C L "MACGetArray" 18 1404 1 "*"
F G "MACGetArray" 18 1425 "WORD()"
V L "val" 18 1425 "*int8"
V L "len" 18 1425 "WORD" "int16 i;"
C L "MACGetArray" 18 1404 14 "FUNCTION"
C L "MACGetArray" 18 1427 5 "*val"
V L "i" 18 1455 "int16"
C L "MACPut" 18 1427 1 "FUNCTION"
C L "MACPut" 18 1471 1 "*"
C L "MACPut" 18 1471 1 "*"
C L "MACPut" 18 1471 1 "*"
C L "MACPut" 18 1471 1 "*"
C L "MACPut" 18 1471 1 "*"
C L "MACPut" 18 1471 1 "*"
C L "MACPut" 18 1471 1 "*"
C L "MACPut" 18 1471 1 "*"
C L "MACPut" 18 1471 1 "*"
C L "MACPut" 18 1471 1 "*"
F G "MACPut" 18 1489 "void(WORD len)"
V L "val" 18 1489 "int8" "SPISelectEthernet();"
C L "MACPut" 18 1471 7 "FUNCTION"
C L "MACPutArray" 18 1471 1 "FUNCTION"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
C L "MACPutArray" 18 1508 1 "*"
F G "MACPutArray" 18 1527 "void(int8 val)"
V L "val" 18 1527 "*int8"
V L "len" 18 1527 "WORD" "Select the chip and send the proper opcode"
C L "MACPutArray" 18 1508 14 "FUNCTION"
C L "SendSystemReset" 18 1508 1 "FUNCTION"
C L "SendSystemReset" 18 1560 1 "*"
C L "SendSystemReset" 18 1560 1 "*"
C L "SendSystemReset" 18 1560 1 "*"
C L "SendSystemReset" 18 1560 1 "*"
C L "SendSystemReset" 18 1560 1 "*"
C L "SendSystemReset" 18 1560 1 "*"
C L "SendSystemReset" 18 1560 1 "*"
C L "SendSystemReset" 18 1560 1 "*"
C L "SendSystemReset" 18 1560 1 "*"
C L "SendSystemReset" 18 1560 1 "*"
F G "SendSystemReset" 18 1578 "void(*int8 val,WORD len)"
C L "SendSystemReset" 18 1560 5 "FUNCTION"
C L "ReadETHReg" 18 1560 1 "FUNCTION"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
C L "ReadETHReg" 18 1593 1 "*"
F G "ReadETHReg" 18 1615 "REG(*int8 val,WORD len)"
V L "Address" 18 1615 "int8"
V L "c" 18 1617 "int8" "Select the chip and send the Read Control Register opcode/address"
C L "ReadETHReg" 18 1593 10 "FUNCTION"
C L "ReadMACReg" 18 1593 1 "FUNCTION"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
C L "ReadMACReg" 18 1642 1 "*"
F G "ReadMACReg" 18 1664 "REG(WORD len)"
V L "Address" 18 1664 "int8"
V L "c" 18 1666 "int8" "SPISelectEthernet();"
C L "ReadMACReg" 18 1642 13 "FUNCTION"
C L "ReadPHYReg" 18 1642 1 "FUNCTION"
C L "ReadPHYReg" 18 1700 1 "*"
C L "ReadPHYReg" 18 1700 1 "*"
C L "ReadPHYReg" 18 1700 1 "*"
C L "ReadPHYReg" 18 1700 1 "*"
C L "ReadPHYReg" 18 1700 1 "*"
C L "ReadPHYReg" 18 1700 1 "*"
C L "ReadPHYReg" 18 1700 1 "*"
C L "ReadPHYReg" 18 1700 1 "*"
F G "ReadPHYReg" 18 1716 "PHYREG()"
V L "Register" 18 1716 "int8"
V L "Result" 18 1718 "PHYREG" "Set the right address and start the register read operation"
C L "ReadPHYReg" 18 1700 2 "FUNCTION"
C L "ReadPHYReg" 18 1700 1 "FUNCTION"
C L "ReadPHYReg" 18 1700 1 "FUNCTION"
C L "WriteReg" 18 1700 1 "FUNCTION"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
C L "WriteReg" 18 1741 1 "*"
F G "WriteReg" 18 1766 "void()"
V L "Address" 18 1766 "int8"
V L "Data" 18 1766 "int8" "SPISelectEthernet();"
C L "WriteReg" 18 1741 7 "FUNCTION"
C L "BFCReg" 18 1741 1 "FUNCTION"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
C L "BFCReg" 18 1785 1 "*"
F G "BFCReg" 18 1807 "void(int8 Address,int8 Data)"
V L "Address" 18 1807 "int8"
V L "Data" 18 1807 "int8" "SPISelectEthernet();"
C L "BFCReg" 18 1785 7 "FUNCTION"
C L "BFSReg" 18 1785 1 "FUNCTION"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
C L "BFSReg" 18 1826 1 "*"
F G "BFSReg" 18 1848 "void(int8 Address,int8 Data)"
V L "Address" 18 1848 "int8"
V L "Data" 18 1848 "int8" "SPISelectEthernet();"
C L "BFSReg" 18 1826 7 "FUNCTION"
C L "WritePHYReg" 18 1826 1 "FUNCTION"
C L "WritePHYReg" 18 1867 1 "*"
C L "WritePHYReg" 18 1867 1 "*"
C L "WritePHYReg" 18 1867 1 "*"
C L "WritePHYReg" 18 1867 1 "*"
C L "WritePHYReg" 18 1867 1 "*"
C L "WritePHYReg" 18 1867 1 "*"
C L "WritePHYReg" 18 1867 1 "*"
C L "WritePHYReg" 18 1867 1 "*"
C L "WritePHYReg" 18 1867 1 "*"
F G "WritePHYReg" 18 1884 "void(int8 Address,int8 Data)"
V L "Register" 18 1884 "int8"
V L "Data" 18 1884 "WORD" "Write the register address"
C L "WritePHYReg" 18 1867 2 "FUNCTION"
C L "WritePHYReg" 18 1867 1 "FUNCTION"
C L "BankSel" 18 1867 1 "FUNCTION"
C L "BankSel" 18 1901 1 "*"
C L "BankSel" 18 1901 1 "*"
C L "BankSel" 18 1901 1 "*"
C L "BankSel" 18 1901 1 "*"
C L "BankSel" 18 1901 1 "*"
C L "BankSel" 18 1901 1 "*"
C L "BankSel" 18 1901 1 "*"
C L "BankSel" 18 1901 1 "*"
C L "BankSel" 18 1901 1 "*"
F G "BankSel" 18 1918 "void(int8 Register,WORD Data)"
V L "Register" 18 1918 "WORD"
C L "MACSetDuplex" 18 1901 1 "FUNCTION"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 1925 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
C L "MACSetDuplex" 18 2040 1 "*"
F G "MACSetDuplex" 18 2063 "void(WORD Register,WORD Data)"
V L "DuplexState" 18 2063 "DUPLEX"
V L "Register" 18 2065 "REG"
V L "PhyReg" 18 2066 "PHYREG" "Disable receive logic and abort any packets currently being transmitted"
C L "MACSetDuplex" 18 2040 1 "FUNCTION"
C L "MACSetDuplex" 18 2040 1 "FUNCTION"
C L "MACSetDuplex" 18 2040 4 "FUNCTION"
C L "MACSetDuplex" 18 2040 1 "FUNCTION"
C L "MACPowerDown" 18 2040 1 "FUNCTION"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
C L "MACPowerDown" 18 2100 1 "*"
F G "MACPowerDown" 18 2119 "void()"
C L "MACPowerDown" 18 2100 1 "FUNCTION"
C L "MACPowerDown" 18 2100 2 "FUNCTION"
C L "MACPowerDown" 18 2100 1 "FUNCTION"
C L "MACPowerDown" 18 2100 1 "FUNCTION"
C L "MACPowerUp" 18 2100 1 "FUNCTION"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
C L "MACPowerUp" 18 2136 1 "*"
F G "MACPowerUp" 18 2155 "void()"
C L "MACPowerUp" 18 2136 1 "FUNCTION"
C L "MACPowerUp" 18 2136 2 "FUNCTION"
C L "MACPowerUp" 18 2136 1 "FUNCTION"
C L "SetCLKOUT" 18 2136 1 "FUNCTION"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
C L "SetCLKOUT" 18 2169 1 "*"
F G "SetCLKOUT" 18 2191 "void()"
V L "NewConfig" 18 2191 "int8"
C L "GetCLKOUT" 18 2169 1 "FUNCTION"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
C L "GetCLKOUT" 18 2198 1 "*"
F G "GetCLKOUT" 18 2220 "int8()"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
D G "UDP_H" 21 41 ""
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
T G "UDP_PORT" 21 46 "WORD"
T G "UDP_SOCKET" 21 47 "int8"
T G "UDP_SOCKET_INFO" 21 62 "{NODE_INFO remoteNode,UDP_PORT remotePort,UDP_PORT localPort,WORD TxCount,WORD RxCount,BUFFER TxBuffer,WORD TxOffset}"
D G "INVALID_UDP_SOCKET" 21 64 " (0xff)"
D G "INVALID_UDP_PORT" 21 65 " (0L)"
C G "" 21 67 1 "*"
C G "" 21 67 1 "*"
V G "activeUDPSocket" 21 71 "UDP_SOCKET"
V G "UDPSocketInfo" 21 72 "UDP_SOCKET_INFO[2]"
T G "UDP_HEADER" 21 81 "{UDP_PORT SourcePort,UDP_PORT DestinationPort,WORD Length,WORD Checksum}" "* Function:        void UDPInit(void)"
C L "UDPInit" 21 84 1 "*"
C L "UDPInit" 21 84 1 "*"
C L "UDPInit" 21 84 1 "*"
C L "UDPInit" 21 84 1 "*"
C L "UDPInit" 21 84 1 "*"
C L "UDPInit" 21 84 1 "*"
F G "UDPInit" 21 99 "void()"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
C L "UDPInit" 21 102 1 "*"
F G "UDPOpen" 21 132 "UDP_SOCKET()"
V L "localPort" 21 132 "UDP_PORT"
V L "remoteNode" 21 133 "*NODE_INFO"
V L "remotePort" 21 134 "UDP_PORT" "* Function:        void UDPClose(UDP_SOCKET s)"
C L "UDPOpen" 21 137 1 "*"
C L "UDPOpen" 21 137 1 "*"
C L "UDPOpen" 21 137 1 "*"
C L "UDPOpen" 21 137 1 "*"
C L "UDPOpen" 21 137 1 "*"
C L "UDPOpen" 21 137 1 "*"
C L "UDPOpen" 21 137 1 "*"
C L "UDPOpen" 21 137 1 "*"
F G "UDPClose" 21 154 "void()"
V L "s" 21 154 "UDP_SOCKET" "* Macro:           BOOL UDPIsPutReady(UDP_SOCKET s)"
C L "UDPClose" 21 157 1 "*"
C L "UDPClose" 21 157 1 "*"
C L "UDPClose" 21 157 1 "*"
C L "UDPClose" 21 157 1 "*"
C L "UDPClose" 21 157 1 "*"
C L "UDPClose" 21 157 1 "*"
C L "UDPClose" 21 157 1 "*"
C L "UDPClose" 21 157 2 "*"
F G "UDPIsPutReady" 21 175 "int8()"
V L "s" 21 175 "int8"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
C L "UDPPut" 21 181 1 "*"
F G "UDPPut" 21 206 "int8()"
V L "v" 21 206 "int8" "* Function:        BOOL UDPFlush(void)"
C L "UDPPut" 21 209 1 "*"
C L "UDPPut" 21 209 1 "*"
C L "UDPPut" 21 209 1 "*"
C L "UDPPut" 21 209 1 "*"
C L "UDPPut" 21 209 1 "*"
C L "UDPPut" 21 209 1 "*"
C L "UDPPut" 21 209 1 "*"
C L "UDPPut" 21 209 1 "*"
C L "UDPPut" 21 209 1 "*"
C L "UDPPut" 21 209 1 "*"
F G "UDPFlush" 21 228 "void()"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
C L "UDPFlush" 21 232 1 "*"
F G "UDPIsGetReady" 21 253 "int8()"
V L "s" 21 253 "UDP_SOCKET" "* Function:        BOOL UDPGet(BYTE *v)"
C L "UDPIsGetReady" 21 257 1 "*"
C L "UDPIsGetReady" 21 257 1 "*"
C L "UDPIsGetReady" 21 257 1 "*"
C L "UDPIsGetReady" 21 257 1 "*"
C L "UDPIsGetReady" 21 257 1 "*"
C L "UDPIsGetReady" 21 257 1 "*"
C L "UDPIsGetReady" 21 257 1 "*"
C L "UDPIsGetReady" 21 257 1 "*"
C L "UDPIsGetReady" 21 257 1 "*"
F G "UDPGet" 21 275 "int8()"
V L "v" 21 275 "*int8" "* Function:        void UDPDiscard(void)"
C L "UDPGet" 21 278 1 "*"
C L "UDPGet" 21 278 1 "*"
C L "UDPGet" 21 278 1 "*"
C L "UDPGet" 21 278 1 "*"
C L "UDPGet" 21 278 1 "*"
C L "UDPGet" 21 278 1 "*"
C L "UDPGet" 21 278 1 "*"
F G "UDPDiscard" 21 294 "void()"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
C L "UDPDiscard" 21 298 1 "*"
F G "UDPProcess" 21 318 "int8()"
V L "remoteNode" 21 318 "*NODE_INFO"
V L "localIP" 21 319 "*IP_ADDR"
V L "len" 21 320 "WORD" "* Macro:           UDPSetTxBuffer(a, b)"
C L "UDPProcess" 21 322 1 "*"
C L "UDPProcess" 21 322 1 "*"
C L "UDPProcess" 21 322 1 "*"
C L "UDPProcess" 21 322 1 "*"
C L "UDPProcess" 21 322 1 "*"
C L "UDPProcess" 21 322 1 "*"
D G "UDPSetTxBuffer" 21 338 "(a, b) (UDPSocketInfo[activeUDPSocket].TxOffset = b,  IPSetTxBuffer(a, b+sizeof(UDP_HEADER)))"
C L "UDPProcess" 21 341 1 "*"
C L "UDPProcess" 21 341 1 "*"
C L "UDPProcess" 21 341 1 "*"
C L "UDPProcess" 21 341 1 "*"
C L "UDPProcess" 21 341 1 "*"
C L "UDPProcess" 21 341 1 "*"
D G "UDPSetRxBuffer" 21 356 "(a) IPSetRxBuffer(a+sizeof(UDP_HEADER))"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
C L "UDPProcess" 22 1 1 "*"
D G "DHCP_H" 22 44 ""
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 2 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
C L "UDPProcess" 4 1 1 "*"
E G "SM_DHCP_INIT_FIRST_TIME" 22 52 "0"
E G "SM_DHCP_INIT" 22 53 "1"
E G "SM_DHCP_RESET_WAIT" 22 54 "2"
E G "SM_DHCP_BROADCAST" 22 55 "3"
E G "SM_DHCP_DISCOVER" 22 56 "4"
E G "SM_DHCP_REQUEST" 22 57 "5"
E G "SM_DHCP_BIND" 22 58 "6"
E G "SM_DHCP_BOUND" 22 59 "7"
E G "SM_DHCP_DISABLED" 22 60 "8"
T G "SM_DHCP" 22 60 "_SM_DHCP"
V G "smDHCPState" 22 62 "SM_DHCP"
C L "UDPProcess" 22 64 1 "*"
C L "UDPProcess" 22 64 1 "*"
C L "UDPProcess" 22 64 1 "*"
C L "UDPProcess" 22 64 1 "*"
C L "UDPProcess" 22 64 1 "*"
C L "UDPProcess" 22 64 1 "*"
C L "UDPProcess" 22 64 1 "*"
C L "UDPProcess" 22 64 1 "*"
C L "UDPProcess" 22 64 1 "*"
D G "DHCPDisable" 22 82 "()       (smDHCPState = SM_DHCP_DISABLED)"
D G "DHCPIsDisabled" 22 84 "()      (smDHCPState == SM_DHCP_DISABLED)"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
C L "UDPProcess" 22 87 1 "*"
F G "DHCPTask" 22 118 "void()"
C L "DHCPTask" 22 120 1 "*"
C L "DHCPTask" 22 120 1 "*"
C L "DHCPTask" 22 120 1 "*"
C L "DHCPTask" 22 120 1 "*"
C L "DHCPTask" 22 120 1 "*"
C L "DHCPTask" 22 120 1 "*"
C L "DHCPTask" 22 120 1 "*"
D G "DHCPIsBound" 22 136 "()       (DHCPState.bits.bIsBound)"
T G "DHCP_STATE" 22 146 "{}"
V G "DHCPState" 22 149 "DHCP_STATE" "* Macro:           void DHCPReset(void)"
C L "DHCPTask" 22 151 1 "*"
C L "DHCPTask" 22 151 1 "*"
C L "DHCPTask" 22 151 1 "*"
C L "DHCPTask" 22 151 1 "*"
C L "DHCPTask" 22 151 1 "*"
C L "DHCPTask" 22 151 1 "*"
C L "DHCPTask" 22 151 1 "*"
C L "DHCPTask" 22 151 1 "*"
F G "DHCPReset" 22 168 "void()"
C L "DHCPReset" 3 140 3 "FUNCTION"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 23 1 1 "*"
C L "DHCPReset" 7 2 7 "FUNCTION"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 2 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 12 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
C L "DHCPReset" 24 1 1 "*"
D G "IP_H" 24 45 ""
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 2 "*"
C L "DHCPReset" 4 1 1 "*"
C L "DHCPReset" 4 1 1 "*"
D G "IP_PROT_ICMP" 24 50 " (1)"
D G "IP_PROT_TCP" 24 51 " (6)"
D G "IP_PROT_UDP" 24 52 " (17)"
C L "DHCPReset" 24 55 1 "*"
T G "IP_HEADER" 24 71 "{int8 VersionIHL,int8 TypeOfService,WORD TotalLength,WORD Identification,WORD FragmentInfo,int8 TimeToLive,int8 Protocol,WORD HeaderChecksum,IP_ADDR SourceAddress,IP_ADDR DestAddress}" "* Function:        BOOL IPIsTxReady(BOOL HighPriority)"
C L "DHCPReset" 24 74 1 "*"
C L "DHCPReset" 24 74 1 "*"
C L "DHCPReset" 24 74 1 "*"
C L "DHCPReset" 24 74 1 "*"
C L "DHCPReset" 24 74 1 "*"
D G "IPIsTxReady" 24 89 "(HighPriority)       MACIsTxReady(HighPriority)"
C L "DHCPReset" 24 92 1 "*"
C L "DHCPReset" 24 92 1 "*"
C L "DHCPReset" 24 92 1 "*"
C L "DHCPReset" 24 92 1 "*"
C L "DHCPReset" 24 92 1 "*"
C L "DHCPReset" 24 92 1 "*"
C L "DHCPReset" 24 92 1 "*"
D G "IPSetTxBuffer" 24 108 "(a, b) MACSetTxBuffer(a, b+sizeof(IP_HEADER))"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
C L "DHCPReset" 24 112 1 "*"
F G "IPPutHeader" 24 136 "WORD()"
V L "remote" 24 136 "*NODE_INFO"
V L "protocol" 24 137 "int8"
V L "len" 24 138 "WORD" "* Macro:           IPPutArray(a, b)"
C L "IPPutHeader" 24 141 1 "*"
C L "IPPutHeader" 24 141 1 "*"
C L "IPPutHeader" 24 141 1 "*"
C L "IPPutHeader" 24 141 1 "*"
C L "IPPutHeader" 24 141 1 "*"
D G "IPPutArray" 24 156 "(a, b)    MACPutArray(a, b)"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
C L "IPPutHeader" 24 161 1 "*"
F G "IPGetHeader" 24 187 "int8()"
V L "localIP" 24 187 "*IP_ADDR"
V L "remote" 24 188 "*NODE_INFO"
V L "protocol" 24 189 "*int8"
V L "len" 24 190 "*WORD" "* Macro:           IPDiscard()"
C L "IPGetHeader" 24 193 1 "*"
C L "IPGetHeader" 24 193 1 "*"
C L "IPGetHeader" 24 193 1 "*"
C L "IPGetHeader" 24 193 1 "*"
C L "IPGetHeader" 24 193 1 "*"
D G "IPDiscard" 24 208 "()         MACDiscard()"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
C L "IPGetHeader" 24 212 1 "*"
D G "IPGetArray" 24 227 "(a, b)    MACGetArray(a, b)"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
C L "IPGetHeader" 24 232 1 "*"
F G "IPSetRxBuffer" 24 248 "void()"
V L "Offset" 24 248 "WORD" "This is left shifted by 4.  Actual value is 0x04."
D G "IPv4" 23 55 " (0x40u)"
D G "IP_VERSION" 23 56 "IPv4"
D G "debug_ip" 23 58 ""
D G "IP_IHL" 23 64 " (0x05)"
D G "IP_SERVICE_NW_CTRL" 23 66 " (0x07)"
D G "IP_SERVICE_IN_CTRL" 23 67 " (0x06)"
D G "IP_SERVICE_ECP" 23 68 " (0x05)"
D G "IP_SERVICE_OVR" 23 69 " (0x04)"
D G "IP_SERVICE_FLASH" 23 70 " (0x03)"
D G "IP_SERVICE_IMM" 23 71 " (0x02)"
D G "IP_SERVICE_PRIOR" 23 72 " (0x01)"
D G "IP_SERVICE_ROUTINE" 23 73 " (0x00)"
D G "IP_SERVICE_N_DELAY" 23 75 " (0x00)"
D G "IP_SERCICE_L_DELAY" 23 76 " (0x08)"
D G "IP_SERVICE_N_THRPT" 23 77 " (0x00)"
D G "IP_SERVICE_H_THRPT" 23 78 " (0x10)"
D G "IP_SERVICE_N_RELIB" 23 79 " (0x00)"
D G "IP_SERVICE_H_RELIB" 23 80 " (0x20)"
D G "IP_SERVICE" 23 82 " (IP_SERVICE_ROUTINE | IP_SERVICE_N_DELAY)"
D G "MY_IP_TTL" 23 84 " (100)" "Time-To-Live in Seconds"
V G "_Identifier" 23 89 "WORD"
V G "IPHeaderLen" 23 90 "int8"
F G "SwapIPHeader" 23 92 "void()"
V L "h" 23 92 "*IP_HEADER" "* Function:        BOOL IPGetHeader( IP_ADDR    *localIP,"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
C L "SwapIPHeader" 23 97 1 "*"
F G "IPGetHeader" 23 123 "int8()"
V L "localIP" 23 123 "*IP_ADDR"
V L "remote" 23 124 "*NODE_INFO"
V L "protocol" 23 125 "*int8"
V L "len" 23 126 "*WORD"
V L "CalcChecksum" 23 128 "WORD_VAL"
V L "header" 23 129 "IP_HEADER"
C L "IPGetHeader" 23 97 1 "FUNCTION"
C L "IPGetHeader" 23 97 1 "FUNCTION"
C L "IPGetHeader" 23 97 4 "FUNCTION"
C L "IPGetHeader" 23 97 1 "FUNCTION"
C L "IPGetHeader" 23 97 2 "FUNCTION"
C L "IPGetHeader" 23 97 1 "FUNCTION"
C L "IPGetHeader" 23 97 2 "FUNCTION"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
C L "IPPutHeader" 23 220 1 "*"
F G "IPPutHeader" 23 238 "WORD(*int8 protocol,*WORD len)"
V L "remote" 23 238 "*NODE_INFO"
V L "protocol" 23 239 "int8"
V L "len" 23 240 "WORD"
V L "header" 23 242 "IP_HEADER"
C L "IPPutHeader" 23 220 1 "FUNCTION"
C L "IPPutHeader" 23 220 1 "FUNCTION"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
C L "IPSetRxBuffer" 23 278 1 "*"
F G "IPSetRxBuffer" 23 294 "void(int8 protocol,WORD len)"
V L "Offset" 23 294 "WORD"
F G "SwapIPHeader" 23 301 "void(WORD Offset,WORD len)"
V L "h" 23 301 "*IP_HEADER"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 25 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
C G "" 26 1 1 "*"
D G "ICMP_H" 26 46 ""
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
D G "MAX_ICMP_DATA" 26 54 " (64)"
D G "MAX_ICMP_DATA_LEN" 26 56 " (MAX_ICMP_DATA)"
E G "ICMP_ECHO_REPLY" 26 62 "0"
E G "ICMP_ECHO_REQUEST" 26 63 "8"
T G "ICMP_CODE" 26 63 "_ICMP_CODE"
T G "ICMP_REQUESTS" 26 63 "_ICMP_CODE" "* Function:        BOOL ICMPIsTxReady()"
C G "" 26 66 1 "*"
C G "" 26 66 1 "*"
C G "" 26 66 1 "*"
C G "" 26 66 1 "*"
C G "" 26 66 1 "*"
D G "ICMPIsTxReady" 26 81 "()     MACIsTxReady(TRUE)"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
C L "ICMPPut" 26 84 1 "*"
F G "ICMPPut" 26 108 "void()"
V L "remote" 26 108 "*NODE_INFO"
V L "code" 26 109 "ICMP_CODE"
V L "data" 26 110 "*int8"
V L "len" 26 111 "int8"
V L "id" 26 112 "WORD"
V L "seq" 26 113 "WORD" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
C L "ICMPPut" 26 116 1 "*"
F G "ICMPGet" 26 140 "int8()"
V L "code" 26 140 "*ICMP_CODE"
V L "data" 26 141 "*int8"
V L "len" 26 142 "*int8"
V L "id" 26 143 "*WORD"
V L "seq" 26 144 "*WORD" "*                  IP Defs for Microchip TCP/IP Stack"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
C L "ICMPGet" 24 1 1 "*"
D G "debug_icmp" 25 57 ""
C L "ICMPGet" 25 58 2 "FUNCTION"
C L "ICMPGet" 25 62 1 "*"
T G "ICMP_PACKET" 25 73 "{int8 Type,int8 Code,WORD Checksum,WORD Identifier,WORD SequenceNumber,int8[64] Data}"
D G "ICMP_HEADER_SIZE" 25 74 " (sizeof(ICMP_PACKET) - MAX_ICMP_DATA)"
F G "SwapICMPPacket" 25 76 "void()"
V L "p" 25 76 "*ICMP_PACKET" "* Function:        BOOL ICMPGet(ICMP_CODE *code,"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
C L "SwapICMPPacket" 25 79 1 "*"
F G "ICMPGet" 25 103 "int8()"
V L "code" 25 103 "*ICMP_CODE"
V L "data" 25 104 "*int8"
V L "len" 25 105 "*int8"
V L "id" 25 106 "*WORD"
V L "seq" 25 107 "*WORD"
V L "packet" 25 109 "ICMP_PACKET"
V L "CalcChecksum" 25 110 "WORD"
V L "ReceivedChecksum" 25 111 "WORD"
C L "ICMPGet" 25 79 1 "FUNCTION"
C L "ICMPGet" 25 79 4 "FUNCTION"
C L "ICMPGet" 25 79 1 "FUNCTION"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
C L "ICMPPut" 25 158 1 "*"
F G "ICMPPut" 25 182 "void()"
V L "remote" 25 182 "*NODE_INFO"
V L "code" 25 183 "ICMP_CODE"
V L "data" 25 184 "*int8"
V L "len" 25 185 "int8"
V L "id" 25 186 "WORD"
V L "seq" 25 187 "WORD"
V L "packet" 25 189 "ICMP_PACKET"
V L "ICMPLen" 25 190 "WORD"
V L "MyTxBuffer" 25 191 "BUFFER"
C L "ICMPPut" 25 158 2 "FUNCTION"
C L "ICMPPut" 25 158 1 "FUNCTION"
C L "SwapICMPPacket" 25 236 1 "*"
C L "SwapICMPPacket" 25 236 1 "*"
C L "SwapICMPPacket" 25 236 1 "*"
C L "SwapICMPPacket" 25 236 1 "*"
C L "SwapICMPPacket" 25 236 1 "*"
C L "SwapICMPPacket" 25 236 1 "*"
C L "SwapICMPPacket" 25 236 1 "*"
F G "SwapICMPPacket" 25 251 "void(int8 len,WORD id,WORD seq)"
V L "p" 25 251 "*ICMP_PACKET"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 27 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 24 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
D G "debug_udp" 27 86 ""
C L "FindMatching_UDP_Socket" 27 87 1 "FUNCTION"
F G "FindMatching_UDP_Socket" 27 89 "UDP_SOCKET(*ICMP_PACKET p,WORD id,WORD seq)"
V L "h" 27 89 "*UDP_HEADER"
V L "remoteNode" 27 89 "*NODE_INFO"
V L "localIP" 27 89 "*IP_ADDR" "* Function:        void UDPInit(void)"
C L "FindMatching_UDP_Socket" 27 91 1 "*"
C L "FindMatching_UDP_Socket" 27 91 1 "*"
C L "FindMatching_UDP_Socket" 27 91 1 "*"
C L "FindMatching_UDP_Socket" 27 91 1 "*"
C L "FindMatching_UDP_Socket" 27 91 1 "*"
C L "FindMatching_UDP_Socket" 27 91 1 "*"
F G "UDPInit" 27 106 "void()"
V L "s" 27 108 "UDP_SOCKET"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
C L "UDPOpen" 27 116 1 "*"
F G "UDPOpen" 27 142 "UDP_SOCKET()"
V L "localPort" 27 142 "UDP_PORT"
V L "remoteNode" 27 143 "*NODE_INFO"
V L "remotePort" 27 144 "UDP_PORT"
V L "s" 27 146 "UDP_SOCKET"
V L "p" 27 147 "*UDP_SOCKET_INFO"
C L "UDPOpen" 27 116 1 "FUNCTION"
C L "UDPOpen" 27 116 1 "FUNCTION"
C L "UDPOpen" 27 116 3 "FUNCTION"
C L "UDPClose" 27 186 1 "*"
C L "UDPClose" 27 186 1 "*"
C L "UDPClose" 27 186 1 "*"
C L "UDPClose" 27 186 1 "*"
C L "UDPClose" 27 186 1 "*"
C L "UDPClose" 27 186 1 "*"
C L "UDPClose" 27 186 1 "*"
C L "UDPClose" 27 186 1 "*"
C L "UDPClose" 27 186 1 "*"
F G "UDPClose" 27 203 "void(UDP_PORT remotePort)"
V L "s" 27 203 "UDP_SOCKET"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
C L "UDPPut" 27 211 1 "*"
F G "UDPPut" 27 236 "int8(UDP_SOCKET s)"
V L "v" 27 236 "int8"
V L "p" 27 238 "*UDP_SOCKET_INFO" "WORD temp;"
V L "tempOffset" 27 240 "WORD"
V L "tempCount" 27 241 "WORD"
C L "UDPPut" 27 211 3 "FUNCTION"
C L "UDPPut" 27 211 1 "FUNCTION"
C L "UDPPut" 27 211 5 "FUNCTION"
C L "UDPPut" 27 211 2 "FUNCTION"
D G "SIZEOF_MAC_HEADER" 27 291 " (14)"
D G "MAX_UDP_DATA" 27 298 " (MAC_TX_BUFFER_SIZE - sizeof(IP_HEADER) - sizeof(UDP_HEADER) )"
C L "UDPPut" 27 211 2 "FUNCTION"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
C L "UDPFlush" 27 317 1 "*"
F G "UDPFlush" 27 336 "void()"
V L "h" 27 338 "UDP_HEADER"
V L "p" 27 339 "*UDP_SOCKET_INFO" "Wait for TX hardware to become available (finish transmitting"
C L "UDPFlush" 27 317 1 "FUNCTION"
C L "UDPFlush" 27 317 1 "FUNCTION"
C L "UDPFlush" 27 371 1 "*"
C L "UDPFlush" 27 371 1 "FUNCTION"
C L "UDPFlush" 27 371 1 "FUNCTION"
C L "UDPFlush" 27 371 2 "FUNCTION"
C L "UDPFlush" 27 371 2 "FUNCTION"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
C L "UDPIsGetReady" 27 400 1 "*"
F G "UDPIsGetReady" 27 421 "int8()"
V L "s" 27 421 "UDP_SOCKET"
C L "UDPGet" 27 427 1 "*"
C L "UDPGet" 27 427 1 "*"
C L "UDPGet" 27 427 1 "*"
C L "UDPGet" 27 427 1 "*"
C L "UDPGet" 27 427 1 "*"
C L "UDPGet" 27 427 1 "*"
C L "UDPGet" 27 427 1 "*"
C L "UDPGet" 27 427 1 "*"
C L "UDPGet" 27 427 1 "*"
C L "UDPGet" 27 427 1 "*"
F G "UDPGet" 27 445 "int8(UDP_SOCKET s)"
V L "v" 27 445 "*int8" "CALLER MUST MAKE SURE THAT THERE IS ENOUGH DATA BYTE IN BUFFER"
C L "UDPGet" 27 427 2 "FUNCTION"
C L "UDPGet" 27 427 2 "FUNCTION"
C L "UDPDiscard" 27 475 1 "*"
C L "UDPDiscard" 27 475 1 "*"
C L "UDPDiscard" 27 475 1 "*"
C L "UDPDiscard" 27 475 1 "*"
C L "UDPDiscard" 27 475 1 "*"
C L "UDPDiscard" 27 475 1 "*"
C L "UDPDiscard" 27 475 1 "*"
C L "UDPDiscard" 27 475 1 "*"
F G "UDPDiscard" 27 491 "void(*int8 v)"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 501 1 "*"
C G "" 27 521 1 "*"
T G "UDP_PSEUDO_HEADER" 27 531 "{IP_ADDR SourceAddress,IP_ADDR DestAddress,int8 Zero,int8 Protocol,WORD Length}"
D G "SwapPseudoHeader" 27 533 "(h)  (h.Length = swaps(h.Length))"
F G "UDPProcess" 27 535 "int8()"
V L "remoteNode" 27 535 "*NODE_INFO"
V L "localIP" 27 535 "*IP_ADDR"
V L "len" 27 535 "WORD"
V L "h" 27 537 "UDP_HEADER"
V L "s" 27 538 "UDP_SOCKET"
V L "pseudoHeader" 27 539 "UDP_PSEUDO_HEADER"
V L "checksum" 27 540 "WORD_VAL" "* Retrieve UDP header."
C L "UDPProcess" 27 521 1 "FUNCTION"
C L "UDPProcess" 27 521 1 "FUNCTION"
C L "UDPProcess" 27 521 1 "FUNCTION"
C L "UDPProcess" 27 521 1 "FUNCTION"
C L "UDPProcess" 27 521 1 "FUNCTION"
C L "UDPProcess" 27 521 2 "FUNCTION"
C L "UDPProcess" 27 602 1 "*"
C L "UDPProcess" 27 602 1 "*"
C L "UDPProcess" 27 602 8 "FUNCTION"
C G "" 27 628 1 "*"
C G "" 27 628 1 "*"
C G "" 27 628 1 "*"
C G "" 27 628 1 "*"
C G "" 27 628 1 "*"
C G "" 27 628 1 "*"
C G "" 27 628 1 "*"
C G "" 27 628 1 "*"
C G "" 27 628 1 "*"
C G "" 27 628 1 "*"
D G "BROADCAST_ADDRESS" 27 647 " (0xffffffffL)"
F G "FindMatching_UDP_Socket" 27 648 "UDP_SOCKET()"
V L "h" 27 648 "*UDP_HEADER"
V L "remoteNode" 27 649 "*NODE_INFO"
V L "localIP" 27 650 "*IP_ADDR"
V L "s" 27 652 "UDP_SOCKET"
V L "partialMatch" 27 653 "UDP_SOCKET"
V L "p" 27 654 "*UDP_SOCKET_INFO"
C L "FindMatching_UDP_Socket" 27 661 1 "*"
C L "FindMatching_UDP_Socket" 27 661 1 "*"
C L "FindMatching_UDP_Socket" 27 661 1 "*"
C L "FindMatching_UDP_Socket" 27 661 1 "*"
C L "FindMatching_UDP_Socket" 27 661 1 "*"
C L "FindMatching_UDP_Socket" 27 661 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 28 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 22 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 21 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
C G "" 17 1 1 "*"
D G "debug_dhcp" 28 79 "(a,b,c,d,e,f,g,h,i,k,l,m,n,o,p,q,r,s,t,u)"
D G "DHCP_TIMEOUT" 28 82 " (2 * TICKS_PER_SECOND)"
D G "DHCP_CLIENT_PORT" 28 85 " (68u)"
D G "DHCP_SERVER_PORT" 28 86 " (67u)"
D G "BOOT_REQUEST" 28 88 " (1u)"
D G "BOOT_REPLY" 28 89 " (2u)"
D G "HW_TYPE" 28 90 " (1u)"
D G "LEN_OF_HW_TYPE" 28 91 " (6u)"
D G "DHCP_MESSAGE_TYPE" 28 93 " (53u)"
D G "DHCP_MESSAGE_TYPE_LEN" 28 94 " (1u)"
D G "DHCP_UNKNOWN_MESSAGE" 28 96 " (0u)"
D G "DHCP_DISCOVER_MESSAGE" 28 98 " (1u)"
D G "DHCP_OFFER_MESSAGE" 28 99 " (2u)"
D G "DHCP_REQUEST_MESSAGE" 28 100 " (3u)"
D G "DHCP_DECLINE_MESSAGE" 28 101 " (4u)"
D G "DHCP_ACK_MESSAGE" 28 102 " (5u)"
D G "DHCP_NAK_MESSAGE" 28 103 " (6u)"
D G "DHCP_RELEASE_MESSAGE" 28 104 " (7u)"
D G "DHCP_SERVER_IDENTIFIER" 28 106 " (54u)"
D G "DHCP_SERVER_IDENTIFIER_LEN" 28 107 " (4u)"
D G "DHCP_PARAM_REQUEST_LIST" 28 109 " (55u)"
D G "DHCP_PARAM_REQUEST_LIST_LEN" 28 110 " (4u)"
D G "DHCP_PARAM_REQUEST_IP_ADDRESS" 28 111 " (50u)"
D G "DHCP_PARAM_REQUEST_IP_ADDRESS_LEN" 28 112 " (4u)"
D G "DHCP_SUBNET_MASK" 28 113 " (1u)"
D G "DHCP_ROUTER" 28 114 " (3u)"
D G "DHCP_DNS" 28 115 " (6u)"
D G "DHCP_HOST_NAME" 28 116 " (12u)"
D G "DHCP_IP_LEASE_TIME" 28 117 " (51u)"
D G "DHCP_END_OPTION" 28 118 " (255u)"
D G "HALF_HOUR" 28 120 " (WORD)((WORD)60 * (WORD)30)"
V G "DHCPSocket" 28 122 "UDP_SOCKET"
V G "DHCPServerID" 28 124 "DWORD_VAL"
V G "DHCPLeaseTime" 28 125 "DWORD_VAL"
V G "tempIPAddress" 28 127 "IP_ADDR"
V G "tempGateway" 28 128 "IP_ADDR"
V G "tempMask" 28 129 "IP_ADDR" "static BYTE tempHostName[16];"
V G "ValidValues" 28 146 "{}"
F G "_DHCPReceive" 28 148 "int8()"
F G "_DHCPSend" 28 149 "void()"
V L "messageType" 28 149 "int8"
V G "DHCPBindCount" 28 151 "int8"
D G "USARTPut" 28 155 "(a)"
F G "DHCPReset" 28 157 "void()"
C L "DHCPReset" 28 80 1 "FUNCTION"
F G "DebugDHCPDisplayState" 28 173 "void()"
V L "st" 28 173 "int8"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
C L "DHCPTask" 28 189 1 "*"
F G "DHCPTask" 28 220 "void()"
V L "DHCPServerNode" 28 222 "NODE_INFO"
V L "lastTryTick" 28 223 "TICKTYPE"
V L "DHCPRecvReturnValue" 28 224 "int8"
V L "tickDiff" 28 225 "TICKTYPE" "static int8 debugLastState;"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 2 "FUNCTION"
C L "DHCPTask" 28 189 3 "FUNCTION"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 3 "FUNCTION"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 7 "FUNCTION"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 1 "FUNCTION"
C L "DHCPTask" 28 189 2 "FUNCTION"
C L "DHCPTask" 28 189 2 "FUNCTION"
C L "DHCPTask" 28 189 2 "FUNCTION"
C L "DHCPTask" 28 189 6 "FUNCTION"
C L "_DHCPReceive" 28 189 32 "FUNCTION"
F G "_DHCPReceive" 28 433 "int8()"
V L "v" 28 435 "int8"
V L "i" 28 436 "int8"
V L "j" 28 436 "int8"
V L "type" 28 437 "int8"
V L "lbDone" 28 438 "BOOL"
V L "tempServerID" 28 439 "DWORD_VAL" "Assume unknown message until proven otherwise."
C L "_DHCPReceive" 28 189 2 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 3 "FUNCTION"
C L "_DHCPReceive" 28 189 2 "FUNCTION"
C L "_DHCPReceive" 28 189 2 "FUNCTION"
C L "_DHCPReceive" 28 189 2 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 17 "FUNCTION"
C L "_DHCPReceive" 28 189 2 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 2 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 2 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
C L "_DHCPReceive" 28 189 2 "FUNCTION"
C L "_DHCPReceive" 28 189 1 "FUNCTION"
F G "_DHCPSend" 28 716 "void()"
V L "messageType" 28 716 "int8"
V L "i" 28 718 "int8"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 2 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 1 "FUNCTION"
C L "_DHCPSend" 28 189 8 "FUNCTION"
C L "_DHCPSend" 28 189 3 "FUNCTION"
C L "_DHCPSend" 28 189 2 "FUNCTION"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 29 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
D G "ARP_H" 30 44 ""
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
D G "ARP_REPLY" 30 52 " (0x00)"
D G "ARP_REQUEST" 30 53 " (0x01)"
D G "ARP_UNKNOWN" 30 54 " (0x02)"
C L "ARPGet" 30 57 1 "*"
C L "ARPGet" 30 57 1 "*"
C L "ARPGet" 30 57 1 "*"
C L "ARPGet" 30 57 1 "*"
C L "ARPGet" 30 57 1 "*"
C L "ARPGet" 30 57 1 "*"
C L "ARPGet" 30 57 1 "*"
C L "ARPGet" 30 57 1 "*"
C L "ARPGet" 30 57 1 "*"
F G "ARPGet" 30 74 "int8()"
V L "remote" 30 74 "*NODE_INFO"
V L "opCode" 30 74 "*int8" "* Macro:           ARPIsRxReady()"
C L "ARPGet" 30 77 1 "*"
C L "ARPGet" 30 77 1 "*"
C L "ARPGet" 30 77 1 "*"
C L "ARPGet" 30 77 1 "*"
C L "ARPGet" 30 77 1 "*"
C L "ARPGet" 30 77 1 "*"
D G "ARPIsTxReady" 30 93 "()      MACIsTxReady(TRUE)"
C L "ARPGet" 30 97 1 "*"
C L "ARPGet" 30 97 1 "*"
C L "ARPGet" 30 97 1 "*"
C L "ARPGet" 30 97 1 "*"
C L "ARPGet" 30 97 1 "*"
C L "ARPGet" 30 97 1 "*"
C L "ARPGet" 30 97 1 "*"
C L "ARPGet" 30 97 1 "*"
F G "ARPPut" 30 113 "int8()"
V L "remote" 30 113 "*NODE_INFO"
V L "opCode" 30 113 "int8" "*                  ARP Server Defs for Microchip TCP/IP Stack"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
C L "ARPPut" 31 1 1 "*"
D G "ARP_TSK_H" 31 45 ""
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 2 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 4 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 13 1 1 "*"
C L "ARPPut" 31 51 1 "*"
C L "ARPPut" 31 51 1 "*"
C L "ARPPut" 31 51 1 "*"
C L "ARPPut" 31 51 1 "*"
C L "ARPPut" 31 51 1 "*"
C L "ARPPut" 31 51 1 "*"
C L "ARPPut" 31 51 1 "*"
F G "ARPInit" 31 66 "void()"
C L "ARPInit" 31 69 1 "*"
C L "ARPInit" 31 69 1 "*"
C L "ARPInit" 31 69 1 "*"
C L "ARPInit" 31 69 1 "*"
C L "ARPInit" 31 69 1 "*"
C L "ARPInit" 31 69 1 "*"
C L "ARPInit" 31 69 1 "*"
F G "ARPProcess" 31 84 "int8()"
C L "ARPProcess" 31 87 1 "*"
C L "ARPProcess" 31 87 1 "*"
C L "ARPProcess" 31 87 1 "*"
C L "ARPProcess" 31 87 1 "*"
C L "ARPProcess" 31 87 1 "*"
C L "ARPProcess" 31 87 1 "*"
C L "ARPProcess" 31 87 1 "*"
F G "ARPResolve" 31 102 "void()"
V L "IPAddr" 31 102 "*IP_ADDR" "* Function:        BOOL ARPIsResolved(IP_ADDR* IPAddr,"
C L "ARPResolve" 31 105 1 "*"
C L "ARPResolve" 31 105 1 "*"
C L "ARPResolve" 31 105 1 "*"
C L "ARPResolve" 31 105 1 "*"
C L "ARPResolve" 31 105 1 "*"
C L "ARPResolve" 31 105 1 "*"
C L "ARPResolve" 31 105 1 "*"
C L "ARPResolve" 31 105 1 "*"
C L "ARPResolve" 31 105 1 "*"
F G "ARPIsResolved" 31 123 "int8()"
V L "IPAddr" 31 123 "*IP_ADDR"
V L "MACAddr" 31 123 "*MAC_ADDR"
D G "debug_arptask" 29 56 ""
C L "ARPIsResolved" 29 57 1 "FUNCTION"
C L "ARPIsResolved" 29 59 1 "*"
E G "SM_ARP_IDLE" 29 65 "0"
E G "SM_ARP_REPLY" 29 66 "1"
T G "ARP_STATE" 29 66 "_ARP_STATE" "* This ARP task caches one ARP response."
V G "smARP" 29 72 "ARP_STATE"
V G "Cache" 29 74 "NODE_INFO" "* Function:        void ARPInit(void)"
C L "ARPIsResolved" 29 77 1 "*"
C L "ARPIsResolved" 29 77 1 "*"
C L "ARPIsResolved" 29 77 1 "*"
C L "ARPIsResolved" 29 77 1 "*"
C L "ARPIsResolved" 29 77 1 "*"
C L "ARPIsResolved" 29 77 1 "*"
F G "ARPInit" 29 92 "void()"
C L "ARPProcess" 29 108 1 "*"
C L "ARPProcess" 29 108 1 "*"
C L "ARPProcess" 29 108 1 "*"
C L "ARPProcess" 29 108 1 "*"
C L "ARPProcess" 29 108 1 "*"
C L "ARPProcess" 29 108 1 "*"
C L "ARPProcess" 29 108 1 "*"
F G "ARPProcess" 29 123 "int8()"
V L "remoteNode" 29 125 "NODE_INFO"
V L "opCode" 29 126 "int8"
C L "ARPProcess" 29 108 2 "FUNCTION"
C L "ARPResolve" 29 160 1 "*"
C L "ARPResolve" 29 160 1 "*"
C L "ARPResolve" 29 160 1 "*"
C L "ARPResolve" 29 160 1 "*"
C L "ARPResolve" 29 160 1 "*"
C L "ARPResolve" 29 160 1 "*"
F G "ARPResolve" 29 173 "void()"
V L "IPAddr" 29 173 "*IP_ADDR"
V L "remoteNode" 29 175 "NODE_INFO"
C L "ARPIsResolved" 29 184 1 "*"
C L "ARPIsResolved" 29 184 1 "*"
C L "ARPIsResolved" 29 184 1 "*"
C L "ARPIsResolved" 29 184 1 "*"
C L "ARPIsResolved" 29 184 1 "*"
C L "ARPIsResolved" 29 184 1 "*"
C L "ARPIsResolved" 29 184 1 "*"
C L "ARPIsResolved" 29 184 1 "*"
C L "ARPIsResolved" 29 184 1 "*"
C L "ARPIsResolved" 29 184 1 "*"
F G "ARPIsResolved" 29 202 "int8()"
V L "IPAddr" 29 202 "*IP_ADDR"
V L "MACAddr" 29 202 "*MAC_ADDR"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 32 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 2 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 4 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 12 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 30 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
C G "" 13 1 1 "*"
D G "debug_arp" 32 53 ""
D G "ARP_OPERATION_REQ" 32 57 "0x01u"
D G "ARP_OPERATION_RESP" 32 58 "0x02u"
D G "HW_ETHERNET" 32 61 " (0x0001u)"
D G "ARP_IP" 32 62 " (0x0800u)"
T G "ARP_PACKET" 32 78 "{WORD HardwareType,WORD Protocol,int8 MACAddrLen,int8 ProtocolLen,WORD Operation,MAC_ADDR SenderMACAddr,IP_ADDR SenderIPAddr,MAC_ADDR TargetMACAddr,IP_ADDR TargetIPAddr}" "Helper function"
F G "SwapARPPacket" 32 81 "void()"
V L "p" 32 81 "*ARP_PACKET" "* Function:        BOOL ARPGet(NODE_INFO* remote, BYTE* opCode)"
C L "SwapARPPacket" 32 84 1 "*"
C L "SwapARPPacket" 32 84 1 "*"
C L "SwapARPPacket" 32 84 1 "*"
C L "SwapARPPacket" 32 84 1 "*"
C L "SwapARPPacket" 32 84 1 "*"
C L "SwapARPPacket" 32 84 1 "*"
C L "SwapARPPacket" 32 84 1 "*"
C L "SwapARPPacket" 32 84 1 "*"
F G "ARPGet" 32 101 "int8()"
V L "remote" 32 101 "*NODE_INFO"
V L "opCode" 32 101 "*int8"
V L "packet" 32 103 "ARP_PACKET" "MACGetArray((int8*)&packet, sizeof(packet));"
C L "ARPPut" 32 144 1 "*"
C L "ARPPut" 32 144 1 "*"
C L "ARPPut" 32 144 1 "*"
C L "ARPPut" 32 144 1 "*"
C L "ARPPut" 32 144 1 "*"
C L "ARPPut" 32 144 1 "*"
C L "ARPPut" 32 144 1 "*"
C L "ARPPut" 32 144 1 "*"
C L "ARPPut" 32 144 1 "*"
F G "ARPPut" 32 161 "int8()"
V L "remote" 32 161 "*NODE_INFO"
V L "opCode" 32 161 "int8"
V L "packet" 32 163 "ARP_PACKET"
V L "MyTxBuffer" 32 165 "BUFFER"
C L "ARPPut" 32 144 1 "FUNCTION"
C L "ARPPut" 32 144 2 "FUNCTION"
C L "ARPPut" 32 144 1 "FUNCTION"
C L "SwapARPPacket" 32 222 1 "*"
C L "SwapARPPacket" 32 222 1 "*"
C L "SwapARPPacket" 32 222 1 "*"
C L "SwapARPPacket" 32 222 1 "*"
C L "SwapARPPacket" 32 222 1 "*"
C L "SwapARPPacket" 32 222 1 "*"
C L "SwapARPPacket" 32 222 1 "*"
F G "SwapARPPacket" 32 237 "void()"
V L "p" 32 237 "*ARP_PACKET"
C G "" 3 212 1 "*"
E G "SM_STACK_IDLE" 3 218 "0"
E G "SM_STACK_MAC" 3 219 "1"
E G "SM_STACK_IP" 3 220 "2"
E G "SM_STACK_ICMP" 3 221 "3"
E G "SM_STACK_ICMP_REPLY" 3 222 "4"
E G "SM_STACK_ARP" 3 223 "5"
E G "SM_STACK_TCP" 3 224 "6"
E G "SM_STACK_UDP" 3 225 "7"
T G "SM_STACK" 3 225 "_SM_STACK"
V G "smStack" 3 227 "SM_STACK"
V G "remoteNode" 3 229 "NODE_INFO" "* Function:        void StackInit(void)"
C L "StackInit" 3 232 1 "*"
C L "StackInit" 3 232 1 "*"
C L "StackInit" 3 232 1 "*"
C L "StackInit" 3 232 1 "*"
C L "StackInit" 3 232 1 "*"
C L "StackInit" 3 232 1 "*"
F G "StackInit" 3 247 "void()"
C L "StackInit" 3 252 1 "*"
C L "StackInit" 3 252 1 "*"
D G "DebugDisplayVals" 3 318 "()"
C L "StackTask" 3 320 1 "*"
C L "StackTask" 3 320 1 "*"
C L "StackTask" 3 320 1 "*"
C L "StackTask" 3 320 1 "*"
C L "StackTask" 3 320 1 "*"
C L "StackTask" 3 320 1 "*"
C L "StackTask" 3 320 1 "*"
C L "StackTask" 3 320 1 "*"
C L "StackTask" 3 320 1 "*"
C L "StackTask" 3 320 1 "*"
F G "StackTask" 3 339 "void()"
V L "dataCount" 3 341 "WORD"
V L "data" 3 344 "int8[64]"
V L "ICMPId" 3 345 "WORD"
V L "ICMPSeq" 3 346 "WORD"
V L "tempLocalIP" 3 348 "IP_ADDR"
V L "type" 3 358 "{int8 MACFrameType,int8 IPFrameType,ICMP_CODE ICMPCode}"
V L "lbContinue" 3 361 "BOOL"
C L "StackTask" 3 320 4 "FUNCTION"
C L "StackTask" 3 320 1 "FUNCTION"
C L "StackTask" 3 584 1 "*"
C L "StackTask" 3 584 1 "*"
C L "StackTask" 3 584 1 "*"
C L "StackTask" 3 584 1 "*"
D G "CCS_UDP_EXAMPLE" 0 220 "TRUE"
D G "ANALOG_PORT_CONFIG" 33 56 "AN0"
D G "ADC_CHAN_0" 33 57 "0"
D G "USER_BUTTON1" 33 58 "PIN_A4"
D G "BUTTON_PRESSED" 33 59 "(p)  (!input(p))"
D G "USER_LED1" 33 60 "PIN_A5"
D G "USER_LED2" 33 61 "PIN_B4"
D G "USER_LED3" 33 62 "PIN_B5"
D G "STACK_USE_SERIAL" 33 139 "TRUE"
D G "STACK_USE_EEPROM" 33 144 "TRUE"
V G "lcd_io" 34 46 "{int4 empty,int4 data}"
V G "lcd_lat" 34 46 "{int4 empty,int4 data}"
V G "lcd_tris" 34 46 "{int4 empty,int4 data}"
D G "lcd_type" 34 56 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "lcd_line_two" 34 57 "0x40" "LCD RAM address for the second line"
V G "LCD_INIT_STRING" 34 60 "int8[4]"
C L "lcd_read_byte" 34 2 4 "FUNCTION"
F G "lcd_read_byte" 34 69 "int8()"
V L "low" 34 70 "int8"
V L "high" 34 70 "int8"
C L "lcd_read_byte" 34 2 1 "FUNCTION"
C L "lcd_read_byte" 34 2 1 "FUNCTION"
F G "lcd_send_nibble" 34 88 "void()"
V L "n" 34 88 "int8"
F G "lcd_send_byte" 34 97 "void()"
V L "address" 34 97 "int8"
V L "n" 34 97 "int8"
F G "lcd_init" 34 112 "void()"
V L "i" 34 113 "int8"
C L "lcd_init" 34 2 1 "FUNCTION"
F G "lcd_gotoxy" 34 131 "void()"
V L "x" 34 131 "int8"
V L "y" 34 131 "int8"
V L "address" 34 132 "int8"
F G "lcd_putc" 34 142 "void()"
V L "c" 34 142 "int8"
F G "lcd_getc" 34 153 "int8()"
V L "x" 34 153 "int8"
V L "y" 34 153 "int8"
V L "value" 34 154 "int8"
C L "lcd_getc" 34 2 1 "FUNCTION"
D G "EEPROM_SELECT" 33 189 "PIN_B3"
D G "EEPROM_DI" 33 190 "PIN_C5"
D G "EEPROM_DO" 33 191 "PIN_C4"
D G "EEPROM_CLK" 33 192 "PIN_C3"
D G "EEPROM_USE_SPI" 33 193 "ENC_MAC_USE_SPI"
D G "EEPROM_ADDRESS" 35 48 "long"
F G "init_ext_eeprom" 35 54 "void()"
V L "i" 35 55 "int1"
C L "init_ext_eeprom" 35 2 1 "FUNCTION"
F G "ext_eeprom_ready" 35 63 "int8()"
V L "cmd" 35 64 "int8[1]"
V L "i" 35 64 "int8"
V L "data" 35 64 "int8"
C L "ext_eeprom_ready" 35 2 1 "FUNCTION"
C L "ext_eeprom_ready" 35 2 1 "FUNCTION"
C L "ext_eeprom_ready" 35 2 1 "FUNCTION"
C L "ext_eeprom_ready" 35 2 1 "FUNCTION"
C L "ext_eeprom_ready" 35 2 1 "FUNCTION"
F G "write_ext_eeprom" 35 86 "void()"
V L "address" 35 86 "int16"
V L "data" 35 86 "int8"
V L "cmd" 35 88 "int8[4]"
V L "i" 35 89 "int8"
C L "write_ext_eeprom" 35 2 1 "FUNCTION"
C L "write_ext_eeprom" 35 2 1 "FUNCTION"
C L "write_ext_eeprom" 35 2 1 "FUNCTION"
C L "write_ext_eeprom" 35 2 1 "FUNCTION"
C L "write_ext_eeprom" 35 2 1 "FUNCTION"
C L "write_ext_eeprom" 35 2 1 "FUNCTION"
C L "write_ext_eeprom" 35 2 1 "FUNCTION"
C L "write_ext_eeprom" 35 2 1 "FUNCTION"
C L "write_ext_eeprom" 35 2 1 "FUNCTION"
F G "read_ext_eeprom" 35 117 "int8()"
V L "address" 35 117 "int16"
V L "i" 35 118 "int8"
V L "data" 35 118 "int8"
V L "cmd" 35 119 "int8[3]"
C L "read_ext_eeprom" 35 2 1 "FUNCTION"
C L "read_ext_eeprom" 35 2 1 "FUNCTION"
C L "read_ext_eeprom" 35 2 1 "FUNCTION"
C L "read_ext_eeprom" 35 2 1 "FUNCTION"
C L "read_ext_eeprom" 35 2 1 "FUNCTION"
C L "read_ext_eeprom" 35 2 1 "FUNCTION"
D G "EE_ISP_PHONENUMBER" 33 241 "0" "size=64"
D G "EE_ISP_USERNAME" 33 242 "64" "size=64"
D G "EE_ISP_PASSWORD" 33 243 "128" "size=64"
D G "EE_NIC_DHCP" 33 245 "192" "size=1"
D G "EE_NIC_GATEWAY" 33 246 "193" "size=4"
D G "EE_NIC_IP" 33 247 "197" "size=4"
D G "EE_NIC_NETMASK" 33 248 "201" "size=4"
D G "EE_NIC_MAC" 33 249 "205" "size=6"
D G "EE_DNS" 33 250 "211" "size=4"
D G "EE_SMTP_PORT" 33 252 "215" "size=2   [TCP Port]"
D G "EE_SMTP_HOSTNAME" 33 253 "217" "size=64  [E-mail SMTP server hostname]"
D G "EE_SMTP_TO" 33 254 "281" "size=64  [E-mail To address]"
D G "EE_SMTP_FROM" 33 255 "345" "size=64  [E-mail From address]"
D G "EE_SMTP_SUBJECT" 33 256 "409" "size=64  [E-mail Subject]"
D G "EE_SMTP_BODY" 33 257 "473" "size=64  [E-mail Body]"
D G "EE_UDP_DEST_IP" 33 259 "537" "size=4   [destination IP address for UDP example]"
D G "EE_UDP_DEST_PORT" 33 260 "541" "size=2   [destination port for UDP example]"
D G "EE_UDP_SRC_PORT" 33 261 "543" "size=2    [source port for UDP example]"
D G "EE_MAGIC" 33 263 "545"
D G "EE_LAST" 33 264 "546"
D G "EE_MAX" 33 265 "0x7FFF"
D G "MPFS_START_POSITION" 33 267 "EE_LAST+2"
C L "display_ip_lcd" 33 240 3 "FUNCTION"
F G "display_ip_lcd" 33 302 "void()"
C L "write_ext_eeprom_string" 33 240 2 "FUNCTION"
F G "write_ext_eeprom_string" 33 375 "void()"
V L "address" 33 375 "int16"
V L "str" 33 375 "*int8"
F G "write_ext_eeprom16" 33 384 "void()"
V L "address" 33 384 "int16"
V L "data" 33 384 "int16"
F G "read_ext_eeprom16" 33 390 "int16()"
V L "address" 33 390 "int16"
V L "result" 33 396 "{int8[2] b,int16 val}"
F G "read_ext_eeprom_string" 33 404 "void()"
V L "address" 33 404 "int16"
V L "str" 33 404 "*int8"
V L "max" 33 404 "int8"
V L "c" 33 405 "int8"
F G "read_ext_eeprom_ip" 33 414 "void()"
V L "address" 33 414 "int16"
V L "ip" 33 414 "*IP_ADDR"
V L "temp" 33 415 "IP_ADDR"
F G "write_ext_eeprom_ip" 33 423 "void()"
V L "address" 33 423 "int16"
V L "ip" 33 423 "*IP_ADDR"
V L "temp" 33 424 "IP_ADDR"
C L "clear_ee" 33 240 1 "FUNCTION"
F G "clear_ee" 33 433 "void()"
V L "i" 33 434 "int16"
F G "init_eeprom_defaults" 33 472 "void()"
C L "init" 33 240 1 "FUNCTION"
F G "init" 33 498 "void()"
C L "init" 33 240 1 "FUNCTION"
C L "init" 33 240 3 "FUNCTION"
C L "init" 33 240 1 "FUNCTION"
F G "set_port_bit" 33 731 "int8()"
V L "ptr" 33 731 "*int8"
V L "fullPin" 33 731 "int16"
V L "new" 33 731 "int8"
V L "port" 33 733 "int8"
V L "pin" 33 733 "int8"
V L "old" 33 734 "int1"
F G "get_port_bit" 33 754 "int8()"
V L "ptr" 33 754 "*int8"
V L "fullPin" 33 754 "int16"
V L "port" 33 756 "int8"
V L "pin" 33 756 "int8"
D G "set_tris_variable" 33 770 "(fullPin, new) set_port_bit(0xF92, fullPin, new)"
D G "set_lat_variable" 33 771 "(fullPin, new) set_port_bit(0xF89, fullPin, new)"
D G "input_variable" 33 772 "(fullPin) get_port_bit(0xF80, fullPin)"
D G "output_float_variable" 33 779 "(x) set_tris_variable(x,1)"
D G "output_drive_variable" 33 780 "(x) set_tris_variable(x,0)"
D G "output_low_variable" 33 782 "(x) set_lat_variable(x,0)"
D G "output_high_variable" 33 783 "(x) set_lat_variable(x,1)"
F G "get_pin_string" 33 785 "void()"
V L "fullPin" 33 785 "int16"
V L "str" 33 785 "*int8"
V L "port" 33 787 "int8"
V L "pin" 33 787 "int8"
F G "hardware_io_test_pin" 33 799 "int8()"
V L "pin1" 33 799 "int16"
V L "pin2" 33 799 "int16"
V L "fail" 33 801 "int8"
V L "str" 33 802 "int8[8]"
V L "oldTRIS1" 33 803 "int1"
V L "oldTRIS2" 33 803 "int1"
V L "oldLAT1" 33 803 "int1"
V L "oldLAT2" 33 803 "int1"
F G "hardware_test" 33 854 "void()"
V L "fail_nic" 33 856 "int1"
V L "fail_ee" 33 856 "int1"
V L "fail_pins" 33 857 "int1"
C L "ui_disp_ip_user" 36 2 24 "FUNCTION"
F G "ui_disp_ip_user" 36 32 "void()"
V L "ip" 36 32 "*IP_ADDR"
F G "ui_disp_mac_user" 36 36 "void()"
V L "mac" 36 36 "*MAC_ADDR"
F G "ui_settings" 36 48 "void()"
V L "disp" 36 50 "int1"
V L "scratchIP" 36 56 "IP_ADDR"
F G "fget_string" 36 136 "void()"
V L "s" 36 136 "*int8"
V L "max" 36 136 "int8"
V L "len" 36 137 "int8"
V L "c" 36 138 "int8"
C L "fget_string" 36 2 1 "FUNCTION"
F G "fget_int" 36 169 "int8()"
V L "initial" 36 169 "int8"
V L "s" 36 170 "int8[4]"
V L "i" 36 171 "sint8"
F G "fget_long" 36 181 "int16()"
V L "initial" 36 181 "int16"
V L "s" 36 182 "int8[6]"
V L "i" 36 183 "int16"
F G "fgethex" 36 193 "int8()"
V L "initial" 36 193 "int8"
V L "hex" 36 194 "int8[5]"
V L "ret" 36 195 "int8"
F G "ui_ip_to_ee" 36 207 "void()"
V L "address" 36 207 "int16"
V L "ip" 36 208 "IP_ADDR"
V L "i" 36 209 "int8"
F G "ui_setup" 36 247 "void()"
V L "dhcp" 36 248 "int8"
V L "i" 36 249 "int8"
V L "addy" 36 250 "int16"
F G "ui_udp_settings" 36 338 "void()"
V L "port" 36 340 "int16"
F G "ui_menu" 36 361 "void()"
F G "ui_handle" 36 403 "void()"
V L "c" 36 405 "int8"
E G "UDP_TX_SM_ARP_REQ" 0 228 "0"
E G "UDP_TX_SM_ARP_RES" 0 229 "1"
E G "UDP_TX_SM_CONNECT" 0 230 "2"
E G "UDP_TX_SM_CONNECTED" 0 231 "3"
E G "UDP_TX_SM_5S_DELAY" 0 232 "4"
V G "ge_UDPTXSM" 0 232 ""
V G "g_UDPRXSocket" 0 234 "UDP_SOCKET"
V G "UDPRXPacket" 0 241 "{int8 adc,int8 button,int1 isValid}"
F G "LCDTask" 0 244 "void()"
V L "lastTick" 0 247 "TICKTYPE"
F G "MyUDPTXTask" 0 288 "void()"
V L "socket" 0 290 "UDP_SOCKET"
V L "remote" 0 291 "NODE_INFO"
V L "lastTick" 0 292 "TICKTYPE"
V L "currTick" 0 293 "TICKTYPE"
C L "MyUDPTXTask" 0 321 1 "FUNCTION"
F G "MyUDPRXTask" 0 361 "void()"
V L "remote" 0 363 "NODE_INFO"
V L "lastTick" 0 364 "TICKTYPE"
V L "currTick" 0 365 "TICKTYPE"
F G "splash" 0 380 "void()"
F G "main" 0 392 "void()"
C L "main" 0 321 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
